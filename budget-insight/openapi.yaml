components:
  callbacks:
    pushData:
      '{$request.query.callbackUrl}':
        post:
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Push'
            description: webhook payload
          responses:
            '200':
              description: 'Your server implementation should return this HTTP status
                code

                if the data was received successfully

                '
  schemas:
    Access:
      properties:
        email:
          type: string
        id:
          type: integer
        id_profile:
          type: integer
        id_role:
          type: integer
        id_user:
          type: integer
      required:
      - id
      - id_profile
      type: object
    Account:
      properties:
        balance:
          description: Balance of the account
          format: float
          type: number
        bookmarked:
          description: This account has been bookmarked by user
          type: integer
        coming:
          default: 0.0
          description: Amount of coming operations not yet debited
          format: float
          nullable: true
          type: number
        company_name:
          description: Name of the company holding the employee savings of the account
          nullable: true
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        deleted:
          description: This account is not found on the website anymore
          format: date-time
          nullable: true
          type: string
        disabled:
          description: This account has been deleted by user and will not be synchronized
            anymore
          format: date-time
          nullable: true
          type: string
        display:
          default: true
          description: Display this account in accounts list
          type: boolean
        error:
          description: If the last update has failed, the error code
          nullable: true
          type: string
        iban:
          description: Account IBAN
          nullable: true
          type: string
        id:
          description: ID of the account
          type: integer
        id_connection:
          description: ID of the related connection
          type: integer
        id_parent:
          description: Id of the parent account
          nullable: true
          type: integer
        id_source:
          description: ID of the related connection source
          type: integer
        id_type:
          description: ID of the account type
          type: integer
        id_user:
          description: ID of the related user
          type: integer
        last_update:
          description: Last successful update of the account
          format: date-time
          type: string
        name:
          description: Name of the account
          type: string
        number:
          description: Account number
          type: string
        original_name:
          description: Original name of the account on the bank
          type: string
        ownership:
          description: Relationship between the credentials owner and the account
          nullable: true
          type: string
        usage:
          description: Account usage (if not set by the user, displays the value of
            original_usage)
          nullable: true
          type: string
        webid:
          description: Account webid
          nullable: true
          type: string
      required:
      - balance
      - bookmarked
      - display
      - id
      - original_name
      type: object
    AccountLog:
      properties:
        balance:
          description: Balanced recorded
          format: float
          type: number
        coming:
          default: 0.0
          description: Coming debit recorded
          format: float
          type: number
        error:
          description: If fail, contains the error code
          nullable: true
          type: string
        error_message:
          description: If fail, error message received from bank or provider
          nullable: true
          type: string
        id:
          description: ID of the log
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        id_connection_log:
          description: ID of the related connection log
          type: integer
        id_connector:
          description: provider id
          type: integer
        timestamp:
          description: Timestamp of log
          format: date-time
          type: string
      required:
      - balance
      - id
      - id_account
      - timestamp
      type: object
    AccountType:
      properties:
        color:
          description: Color of the account type (hexdecimal)
          nullable: true
          type: string
        display_name:
          description: Name to display in singular
          type: string
        display_name_p:
          description: Name to display in plurial
          type: string
        id:
          description: ID of the account type
          type: integer
        id_parent:
          description: Id of the parent type
          nullable: true
          type: integer
        is_invest:
          default: false
          description: Is it an investment account
          type: boolean
        name:
          description: Name of the account type
          type: string
        weboob_type_id:
          description: Map to the weboob_type_id
          type: integer
      required:
      - display_name
      - display_name_p
      - id
      - is_invest
      - name
      - weboob_type_id
      type: object
    Account_types:
      properties:
        accounttypes:
          items:
            $ref: '#/components/schemas/AccountType'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - accounttypes
    AccountsAlert:
      example:
        example:
          balance_min1: 500
          balance_min2: 0
          enabled: true
          expense_max: 500
          income_max: 500
      properties:
        balance_min1:
          format: float
          type: number
        balance_min2:
          format: float
          type: number
        enabled:
          type: boolean
        expense_max:
          format: float
          type: number
        income_max:
          format: float
          type: number
      type: object
    Alert:
      properties:
        id:
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        id_investment:
          description: ID of the related investment
          type: integer
        id_transaction:
          description: ID of the related transaction
          type: integer
        id_user:
          description: ID of the related user
          type: integer
        timestamp:
          description: Date of the alerts emission
          format: date-time
          type: string
        type:
          description: Type of the alert
          type: string
        value:
          description: Amount related to the alert
          format: float
          type: number
      required:
      - id
      - id_user
      - timestamp
      - type
      - value
      type: object
    AuthConfirm:
      properties:
        token:
          description: confirmed token
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
      - token
      - user
    AuthInit:
      properties:
        auth_token:
          description: new token created for the new anonymous user
          type: string
        expires_in:
          description: duration in seconds of the token validity
          type: integer
        type:
          description: type of the token
          type: string
      required:
      - auth_token
      - type
    AuthJwt:
      properties:
        jwt_token:
          description: the jwt token
          type: string
        payload:
          $ref: '#/components/schemas/AuthJwtPayload'
      required:
      - jwt_token
      - payload
    AuthJwtPayload:
      properties:
        jwt_token:
          type: string
        payload:
          $ref: '#/components/schemas/AuthJwtPayloadPayload'
      type: object
    AuthJwtPayloadPayload:
      properties:
        aud:
          type: string
        exp:
          type: integer
        iat:
          type: integer
        id_user:
          type: integer
        iss:
          type: integer
        scope:
          type: string
        type:
          type: string
      type: object
    AuthProvider:
      properties:
        id:
          type: integer
        name:
          description: Name to differentiate the authentication type
          type: string
        type:
          description: Authentication type to use when pushing the webhook
          type: string
      required:
      - id
      - name
      - type
      type: object
    AuthRegister:
      properties:
        profile:
          $ref: '#/components/schemas/Profile'
        token:
          description: the requested token
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
      - profile
      - token
      - user
    AuthToken:
      properties:
        expires_in:
          description: duration in seconds of the token validity
          type: integer
        profile:
          $ref: '#/components/schemas/Profile'
        scope:
          description: the token scope
          type: string
        token:
          description: the requested token
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
      - profile
      - scope
      - token
      - user
    AuthTokenAccess:
      properties:
        access_token:
          description: the access token transformed from the temporary one
          type: string
        token_type:
          description: the access token type
          type: string
      required:
      - access_token
      - token_type
    AuthTokenCode:
      properties:
        code:
          description: the temporary token
          type: string
        expires_in:
          description: duration in seconds of the token validity
          type: integer
        type:
          $ref: '#/components/schemas/AuthTokenCodeType'
      required:
      - code
      - expires_in
      - type
    AuthTokenCodeType:
      type: string
    Banks:
      properties:
        banks:
          items:
            $ref: '#/components/schemas/Connector'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - banks
    Categories:
      properties:
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - categories
    CategorizeData:
      example:
        failed: 1
        total: 2
        transactions:
        - id_category: 84
          state: categorized_by_keyword
          type: card
          value: -14
          wording: 'the great restaurant  '
        - id_category: 9998
          state: fail_categorizing
          type: card
          value: -14
          wording: toto
      properties:
        failed:
          type: integer
        total:
          type: integer
        transactions:
          items:
            $ref: '#/components/schemas/CategorizeTransaction'
          type: array
      type: object
    CategorizeTransaction:
      properties:
        id_category:
          type: integer
        state:
          type: string
        type:
          type: string
        value:
          format: float
          type: number
        wording:
          type: string
      type: object
    Category:
      properties:
        accountant_account:
          nullable: true
          type: string
        color:
          description: Color of the category
          type: string
        hidden:
          type: boolean
        id:
          description: ID of the category
          type: integer
        id_logo:
          description: ID of the logo
          nullable: true
          type: integer
        id_parent_category:
          description: ID of the parent category. If this is a parent category, it
            will be equal to its own ID
          nullable: true
          type: integer
        id_parent_category_in_menu:
          nullable: true
          type: integer
        id_user:
          description: If not null, this category is specific to a user
          nullable: true
          type: integer
        income:
          description: Is an income category. If null, this is both an income and
            an expense category
          nullable: true
          type: boolean
        name:
          description: Name of the category
          type: string
        name_displayed:
          description: Displayed name, with HTML tags
          type: string
        refundable:
          description: This category accepts opposite sign of transactions
          type: boolean
      required:
      - color
      - id
      - id_parent_category
      - id_parent_category_in_menu
      - name
      - refundable
      type: object
    Certificate:
      properties:
        created:
          format: date-time
          type: string
        id:
          type: integer
        id_private_key_file:
          type: integer
        id_public_key_file:
          type: integer
        type:
          type: string
      required:
      - created
      - id
      - id_private_key_file
      - id_public_key_file
      - type
      type: object
    Client:
      properties:
        config:
          description: customizable config
          type: string
        id:
          type: integer
        id_logo:
          nullable: true
          type: integer
        name:
          default: ''
          type: string
        private_key:
          type: string
        pro:
          default: false
          description: Should the client display the company manager page.
          type: boolean
        public_key:
          type: string
        redirect_uris:
          default: ''
          type: string
        secret:
          type: string
      required:
      - id
      - name
      - pro
      - redirect_uris
      type: object
    Clients:
      properties:
        clients:
          items:
            $ref: '#/components/schemas/Client'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - clients
    Config:
      properties:
        alerts.default.balance_max:
          type: string
        alerts.default.balance_min1:
          type: string
        alerts.default.balance_min2:
          type: string
        alerts.default.expense_max:
          type: string
        alerts.default.income_max:
          type: string
        alerts.default.resume_enabled:
          type: string
        alerts.enabled:
          type: string
        alerts.mails.enabled:
          type: string
        apid.client_id:
          type: string
        apid.enabled:
          type: string
        apid.last_token:
          type: string
        apid.password:
          type: string
        apid.service_url:
          type: string
        apid.token:
          type: string
        apid.user_id:
          type: string
        auth.allowed_api_tokens:
          type: string
        auth.block_count:
          type: string
        auth.block_seconds:
          type: string
        auth.change_email_url:
          type: string
        auth.confirm_register:
          type: string
        auth.confirm_url:
          type: string
        auth.confirmed_only:
          type: string
        auth.default_scope:
          type: string
        auth.default_token_expire:
          type: string
        auth.invite_only:
          type: string
        auth.mandatory:
          type: string
        auth.min_password_len:
          type: string
        auth.reinit_url:
          type: string
        auth.scoped_token_expire:
          type: string
        auth.super_password:
          type: string
        auth.token_size:
          type: string
        auth.user_mail_token_expire:
          type: string
        auth.user_token_expire:
          type: string
        autosync.cfonb:
          type: string
        autosync.enabled:
          type: string
        autosync.frequency:
          type: string
        autosync.retry_wrongpass:
          type: string
        autosync.send_update:
          type: string
        balance.ignore_refund:
          type: string
        bank.account.authorized_currencies:
          type: string
        bank.account.camelCase:
          type: string
        bank.account.cb_coming_to_balance:
          type: string
        bank.account.coming_account:
          type: string
        bank.implicit_date_filtering:
          type: string
        bank.trs.ignore_coming:
          type: string
        bank.trs.ignore_history:
          type: string
        bank.trs.update_date_scraped_on_undelete:
          type: string
        bddf.enabled:
          type: string
        biapi.allowed_origins:
          type: string
        biapi.callback_url:
          type: string
        biapi.enabled:
          type: string
        biapi.free_period:
          type: string
        biapi.manager.email:
          type: string
        biapi.multi_push:
          type: string
        biapi.prod:
          type: string
        blackbox_zip.enabled:
          type: string
        blackbox_zip.path:
          type: string
        boursorama.enabled:
          type: string
        captcha.enabled:
          type: string
        cat.bank_category_id:
          type: string
        cat.cb_summary_category_id:
          type: string
        cat.enabled:
          type: string
        cat.generalize:
          type: string
        cat.global_database:
          type: string
        cat.globalize:
          type: string
        cat.nature_lookup:
          type: string
        cat.remote_hashtable_url:
          type: string
        cat.remote_last_pull:
          type: string
        cat.remote_last_push:
          type: string
        cat.transfer_category_id:
          type: string
        cat.unknown_category_logo_id:
          type: string
        cat.web_lookup:
          type: string
        connection.allow_new_error:
          type: string
        connection.delay_error:
          type: string
        connection.delete_noacc:
          type: string
        connection.disable_new:
          type: string
        connection.error.to_wrongpass:
          type: string
        connection.expire:
          type: string
        connection.explicit_login_update:
          type: string
        connection.keep_success:
          type: string
        connection.questions_code:
          type: string
        connectioninformation.enabled:
          type: string
        connectors.default_auth_mechanism:
          type: string
        connectors.enable_new:
          type: string
        connectors.sources.enable_new:
          type: string
        crash.enabled:
          type: string
        creditprofile.enabled:
          type: string
        digiposte.enabled:
          type: string
        documents.accepted_types:
          type: string
        documents.force_ocr:
          type: string
        documents.force_pdf:
          type: string
        forecasts.enabled:
          type: string
        gmaps.enabled:
          type: string
        gmaps.key:
          type: string
        hashtable.enabled:
          type: string
        inapp.enabled:
          type: string
        inapp.google_key:
          type: string
        inapp.iab:
          type: string
        inapp.iap:
          type: string
        mails.enabled:
          type: string
        merchant.enabled:
          type: string
        merchant.webview.baseurl:
          type: string
        oauth2.enabled:
          type: string
        oidc.audience:
          type: string
        oidc.client:
          type: string
        oidc.enabled:
          type: string
        oidc.jwks:
          type: string
        oidc.whitelist.enabled:
          type: string
        premium.enabled:
          type: string
        premium.invites_needed:
          type: string
        premium.send_offers:
          type: string
        projects.enabled:
          type: string
        providers.enabled:
          type: string
        push.apn_cert:
          type: string
        push.apn_sandbox_cert:
          type: string
        push.enabled:
          type: string
        push.gcm_key:
          type: string
        push.gcm_server:
          type: string
        rate.enabled:
          type: string
        redgreen.enabled:
          type: string
        regulation.email:
          type: string
        regulation.transfer.amount_warning:
          type: string
        reporting.enabled:
          type: string
        root.app:
          type: string
        root.app_name:
          type: string
        root.baseurl:
          type: string
        root.prefix:
          type: string
        stet.access_token_duration:
          type: string
        stet.connector:
          type: string
        stet.enabled:
          type: string
        stet.oauth_uri:
          type: string
        stet.refresh_token_duration:
          type: string
        stet.signature_check:
          type: string
        stet.uri_baseurl:
          type: string
        transfer.beneficiary_label:
          type: string
        transfer.default_label:
          type: string
        transfer.enabled:
          type: string
        transfer.max_amount:
          type: string
        transfer.max_days_matching_transaction:
          type: string
        transfer.max_period_amount:
          type: string
        transfer.max_period_days:
          type: string
        transfer.recipient.iban_white_list.enabled:
          type: string
        transfer.recipient.iban_white_list.entries:
          type: string
        user.synced_devices:
          type: string
        wealth.detail:
          type: string
        wealth.enabled:
          type: string
        wealth.find_missing_isin:
          type: string
        wealth.get_liquidity:
          type: string
        wealth.vdate_nullable:
          type: string
        webhooks.ca_cert:
          type: string
        webhooks.compression.enabled:
          type: string
      type: object
    ConfigLog:
      properties:
        id:
          type: integer
        key:
          type: string
        new_value:
          type: string
        previous_value:
          type: string
        timestamp:
          description: Timestamp of when the configuration key was changed
          format: date-time
          type: string
        type:
          description: 'Action done on the config: add, update or delete'
          type: string
      required:
      - id
      - key
      - timestamp
      - type
      type: object
    ConfigLogs:
      properties:
        configlogs:
          items:
            $ref: '#/components/schemas/ConfigLog'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - configlogs
    Connection:
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/ConnectionAccount'
          type: array
        active:
          default: true
          description: This connection is active and will be automatically synced
          type: boolean
        bank:
          $ref: '#/components/schemas/ConnectionBank'
        connector:
          $ref: '#/components/schemas/ConnectionBank'
        connector_uuid:
          description: uuid of the connector (replaces id_connector)
          type: string
        created:
          description: Creation date
          format: date-time
          type: string
        error:
          nullable: true
          type: string
        error_message:
          description: If fail, error message received from bank or provider
          nullable: true
          type: string
        expire:
          description: Expiration of the connection source. Used to purge the connection
            in case completion was not finished
          format: date-time
          nullable: true
          type: string
        id:
          description: ID of connection
          type: integer
        id_bank:
          type: integer
        id_connector:
          description: ID of the related connector
          type: integer
        id_provider:
          type: integer
        id_user:
          description: ID of the related user
          type: integer
        informations:
          $ref: '#/components/schemas/ConnectionInformations'
        last_push:
          description: Last successful push
          format: date-time
          nullable: true
          type: string
        last_update:
          description: Last successful update
          format: date-time
          type: string
        next_try:
          description: Date of next synchronization
          format: date-time
          type: string
        state:
          nullable: true
          type: string
        subscriptions:
          items:
            $ref: '#/components/schemas/ConnectionSubscription'
          type: array
      required:
      - active
      - id
      - id_connector
      type: object
    ConnectionAccount:
      properties:
        balance:
          format: float
          type: number
        bic:
          nullable: true
          type: string
        bookmarked:
          type: integer
        coming:
          format: float
          nullable: true
          type: number
        coming_balance:
          format: float
          type: number
        company_name:
          nullable: true
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        deleted:
          format: datetime
          nullable: true
          type: string
        disabled:
          description: If the account is disabled (not synchronized)
          nullable: true
          type: boolean
        display:
          type: boolean
        error:
          nullable: true
          type: string
        formatted_balance:
          type: string
        iban:
          nullable: true
          type: string
        id:
          type: integer
        id_connection:
          type: integer
        id_parent:
          nullable: true
          type: integer
        id_source:
          type: integer
        id_type:
          type: integer
        id_user:
          type: integer
        investments:
          items:
            $ref: '#/components/schemas/UserInvestments'
          type: array
        last_update:
          description: Last successful update of the account
          format: date-time
          type: string
        loan:
          $ref: '#/components/schemas/ConnectionAccountLoan'
        name:
          type: string
        number:
          type: string
        original_name:
          type: string
        ownership:
          type: string
        recipients:
          items:
            $ref: '#/components/schemas/Recipient'
          type: array
        transactions:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
        transfers:
          items:
            $ref: '#/components/schemas/Transfer'
          type: array
        type:
          type: string
        usage:
          nullable: true
          type: string
        webid:
          type: string
      type: object
    ConnectionAccountLoan:
      nullable: true
      properties:
        account_label:
          nullable: true
          type: string
        available_amount:
          format: float
          nullable: true
          type: number
        contact_name:
          nullable: true
          type: string
        duration:
          type: integer
        id:
          type: integer
        id_account:
          type: integer
        insurance_label:
          nullable: true
          type: string
        last_payment_amount:
          format: float
          nullable: true
          type: number
        last_payment_date:
          format: datetime
          nullable: true
          type: string
        maturity_date:
          format: datetime
          nullable: true
          type: string
        nb_payments_done:
          nullable: true
          type: integer
        nb_payments_left:
          type: integer
        nb_payments_total:
          nullable: true
          type: integer
        next_payment_amount:
          format: float
          nullable: true
          type: number
        next_payment_date:
          format: datetime
          type: string
        rate:
          format: float
          type: number
        subscription_date:
          format: datetime
          nullable: true
          type: string
        total_amount:
          format: float
          type: number
        type:
          type: string
        used_amount:
          format: float
          nullable: true
          type: number
      type: object
    ConnectionBank:
      properties:
        account_types:
          items:
            type: string
          type: array
        auth_mechanism:
          type: string
        available_auth_mechanisms:
          items:
            type: string
          type: array
        available_transfer_mechanisms:
          items:
            type: string
          type: array
        beta:
          type: boolean
        capabilities:
          items:
            type: string
          type: array
        categories:
          items:
            type: string
          type: array
        charged:
          type: boolean
        code:
          type: string
        color:
          type: string
        document_type:
          items:
            type: string
          type: array
        documents_type:
          items:
            type: string
          type: array
        hidden:
          type: boolean
        id:
          type: integer
        months_to_fetch:
          nullable: true
          type: string
        name:
          type: string
        restricted:
          type: boolean
        siret:
          nullable: true
          type: string
        slug:
          type: string
        sync_frequency:
          nullable: true
          type: string
        transfer_beneficiary_types:
          items:
            type: string
          type: array
        urls:
          items:
            type: string
          type: array
        uuid:
          type: string
      type: object
    ConnectionInformations:
      properties:
        connections:
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        total:
          description: total number of results
          type: integer
      type: object
    ConnectionLog:
      properties:
        error:
          description: If fail, contains the error code
          nullable: true
          type: string
        error_message:
          description: If fail, error message received from connector
          nullable: true
          type: string
        error_uid:
          description: MD5 hash of the exception backtrace
          nullable: true
          type: string
        fields:
          description: Fields for connection in additionalInformationNeeded state
            with background option
          nullable: true
          type: string
        id:
          description: ID of the log
          type: integer
        id_connection:
          description: ID of the connection
          type: integer
        id_connector:
          description: ID of the connector
          type: integer
        id_source:
          description: ID of the related connection source
          type: integer
        id_user:
          description: ID of the user
          type: integer
        login:
          description: bcrypt hash of the login
          type: string
        nb_accounts:
          description: In case of bank connection, number of accounts
          type: integer
        next_try:
          description: If fail, the date represents the next try to connect
          format: date-time
          type: string
        session_folder_id:
          description: Session folder uid
          type: string
        start:
          description: Timestamp when the synchronization has started
          format: date-time
          type: string
        statut:
          description: Status of user (1 = charged user)
          type: integer
        timestamp:
          description: Timestamp of log, when the synchronization has finished
          format: date-time
          type: string
        worker:
          description: Worker used to do synchronization
          type: string
      required:
      - id
      - id_connection
      - timestamp
      type: object
    ConnectionSource:
      properties:
        access_expire:
          description: Expiration date of the access
          format: date-time
          nullable: true
          type: string
        created:
          description: Creation date of the connection source
          format: date-time
          type: string
        disabled:
          description: This source is not used to synchronize the connection
          format: date-time
          nullable: true
          type: string
        expire:
          description: Expiration of the connection source. Used to purge the connection
            in case completion was not finished
          format: date-time
          nullable: true
          type: string
        id:
          description: ID of connection
          type: integer
        id_connection:
          description: ID of the related connection
          type: integer
        id_connector_source:
          description: ID of the related connector source
          type: integer
        last_update:
          description: Last successful update
          format: date-time
          type: string
        name:
          description: Name of the connection source
          type: string
        next_try:
          description: Date of next synchronization
          format: date-time
          type: string
        state:
          description: If the last update has failed, the state code
          nullable: true
          type: string
      required:
      - created
      - id
      - id_connection
      - id_connector_source
      - name
      type: object
    ConnectionSources:
      properties:
        sources:
          items:
            $ref: '#/components/schemas/ConnectionSource'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - sources
    ConnectionSubscription:
      properties:
        balance:
          format: float
          nullable: true
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        deleted:
          format: datetime
          nullable: true
          type: string
        disabled:
          format: datetime
          nullable: true
          type: string
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
        error:
          nullable: true
          type: string
        formatted_balance:
          nullable: true
          type: string
        id:
          type: integer
        id_connection:
          type: integer
        id_source:
          type: integer
        id_user:
          type: integer
        label:
          type: string
        last_update:
          format: datetime
          type: string
        number:
          type: string
        renewdate:
          format: datetime
          nullable: true
          type: string
        subscriber:
          type: string
        validity:
          nullable: true
          type: string
      type: object
    Connections:
      properties:
        connections:
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        total:
          description: total number of results
          type: number
      required:
      - connections
    Connector:
      properties:
        auth_mechanism:
          description: Authentication mechanism to use
          type: string
        beta:
          default: false
          description: If true, this connector is perhaps unstable :)
          type: boolean
        charged:
          default: true
          description: Usage of this connector is charged
          type: boolean
        code:
          description: Bank code
          nullable: true
          type: string
        color:
          description: Main color of the bank or provider
          type: string
        hidden:
          default: false
          description: This connector is hidden from your users
          type: boolean
        id:
          description: ID of the connector
          type: integer
        months_to_fetch:
          description: How many months of history to fetch
          nullable: true
          type: integer
        name:
          description: Name of the bank or provider
          type: string
        restricted:
          default: false
          description: If true, new connections cannot be added with this connector
          type: boolean
        siret:
          description: SIRET code for Bill modules
          nullable: true
          type: string
        slug:
          type: string
        sync_frequency:
          description: How many days to wait between syncs
          format: float
          nullable: true
          type: number
        uuid:
          description: Unique connector identifier
          type: string
      required:
      - beta
      - charged
      - id
      - name
      - restricted
      - uuid
      type: object
    ConnectorCategory:
      properties:
        id:
          description: ID of the bank category
          type: integer
        name:
          default: 'false'
          description: Name of the category
          type: string
      required:
      - id
      - name
      type: object
    ConnectorLogo:
      properties:
        id:
          type: integer
        id_connector:
          description: ID of the connector
          type: integer
        id_file:
          description: Id of the Bank/Provider Logo
          type: integer
        type:
          description: Logo's type
          type: string
      required:
      - id
      - id_connector
      - id_file
      type: object
    ConnectorSource:
      properties:
        auth_mechanism:
          description: Authentication mechanism to use
          type: string
        disabled:
          description: This source is not used to synchronize the connection
          format: date-time
          nullable: true
          type: string
        fallback:
          description: Name of the source this fallback is for
          nullable: true
          type: string
        id:
          description: ID of the connector source
          type: integer
        id_connector:
          description: ID of the connector
          type: integer
        id_weboob:
          type: string
        name:
          description: Name of the source
          type: string
        priority:
          description: The source priority order for the synchronization
          type: integer
      required:
      - id
      - id_connector
      - name
      type: object
    Connectors:
      properties:
        connectors:
          items:
            $ref: '#/components/schemas/Connector'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - connectors
    Currency:
      example:
        crypto: false
        datetime: null
        id: EUR
        marketcap: null
        name: Euro
        precision: 2
        prefix: false
        symbol: "\u20AC"
      nullable: true
      properties:
        crypto:
          default: false
          description: It is a crypto currency or not
          type: boolean
        datetime:
          description: Time and date of Market Cap (for cryptos)
          format: date-time
          nullable: true
          type: string
        id:
          description: ISO 4217 code used as ID
          type: string
        marketcap:
          description: Market Capitalization in EUR
          format: float
          nullable: true
          type: number
        name:
          nullable: true
          type: string
        precision:
          description: Numbers of significant digits
          type: integer
        prefix:
          default: false
          description: Amount is prefixed or not by the currency
          type: boolean
        symbol:
          description: Symbol representing the currency
          type: string
      required:
      - id
      - prefix
      - symbol
      type: object
    Device:
      properties:
        debug:
          default: false
          type: boolean
        id:
          type: integer
        id_token:
          type: integer
        last_update:
          format: date-time
          type: string
        notification_token:
          type: string
        type:
          type: string
        version:
          type: string
      required:
      - debug
      - id
      - id_token
      - last_update
      - notification_token
      - type
      - version
      type: object
    Document:
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        date:
          format: date-time
          nullable: true
          type: string
        duedate:
          format: date
          nullable: true
          type: string
        has_file_on_website:
          default: true
          description: Boolean to set if file is available on website
          type: boolean
        id:
          type: integer
        id_category:
          nullable: true
          type: integer
        id_file:
          type: integer
        id_subscription:
          type: integer
        id_thumbnail:
          type: integer
        id_type:
          type: integer
        id_user:
          type: integer
        income:
          default: true
          type: boolean
        issuer:
          type: string
        last_update:
          description: Last successful update of the document
          format: date-time
          type: string
        name:
          type: string
        number:
          type: string
        readonly:
          default: true
          type: boolean
        thumb_url:
          format: uri
          type: string
        timestamp:
          format: date-time
          type: string
        total_amount:
          format: float
          nullable: true
          type: number
        type:
          enum:
          - statement
          - report
          - other
          - RIB
          type: string
        untaxed_amount:
          format: float
          nullable: true
          type: number
        url:
          format: uri
          type: string
        vat:
          format: float
          nullable: true
          type: number
      required:
      - has_file_on_website
      - id
      - id_user
      - readonly
      - timestamp
      type: object
    DocumentType:
      properties:
        attacheable:
          default: true
          type: boolean
        id:
          type: integer
        name:
          type: string
      required:
      - attacheable
      - id
      - name
      type: object
    Documenttypes:
      properties:
        documenttypes:
          items:
            $ref: '#/components/schemas/DocumentType'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - documenttypes
    Field:
      properties:
        auth_mechanisms:
          description: Authentication mechanisms this field is used for
          type: string
        ephemeral:
          default: false
          description: This field will not be saved in database
          type: boolean
        id:
          description: ID of the field
          type: integer
        id_connector:
          description: ID of the related connector
          type: integer
        label:
          description: Label to display to user
          type: string
        name:
          description: Name of the field
          type: string
        regex:
          description: If set, the value must match this regexp
          type: string
        required:
          default: true
          description: If true, field has to be set to synchronize the connection
          type: boolean
        type:
          default: text
          description: Type of field (text, password, list, hidden)
          type: string
        value:
          description: Default value of the field
          type: string
      required:
      - id
      - id_connector
      - label
      - name
      type: object
    File:
      properties:
        content_type:
          type: string
        file_size:
          type: integer
        filename:
          type: string
        id:
          type: integer
      required:
      - content_type
      - file_size
      - filename
      - id
      type: object
    FinanceSecurities:
      properties:
        securities:
          items:
            $ref: '#/components/schemas/Security'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - securities
    Group:
      properties:
        color:
          type: string
        conf:
          type: string
        email:
          type: string
        id:
          type: integer
        id_logo:
          nullable: true
          type: integer
        id_parent_group:
          type: integer
        name:
          type: string
        url:
          type: string
      required:
      - id
      type: object
    HashTable:
      properties:
        display:
          default: true
          type: boolean
        income:
          type: boolean
        nature:
          type: string
        wording:
          type: string
      required:
      - display
      - income
      - nature
      - wording
      type: object
    Investment:
      properties:
        code:
          description: Investment code
          type: string
        code_type:
          description: Code type (ISIN of AMF)
          type: string
        deleted:
          description: If set, this investment has been removed from the website
          format: date-time
          type: string
        description:
          description: Description of the investment
          type: string
        diff:
          default: 0.0
          description: Capital gain
          format: float
          type: number
        diff_percent:
          description: Capital gain in percent (between 0 and 1)
          format: float
          type: number
        id:
          description: ID of the investment
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        id_security:
          description: ID of the related security
          type: integer
        label:
          description: Label of the investment
          type: string
        last_update:
          description: Last update of the investment
          format: date-time
          type: string
        original_currency:
          $ref: '#/components/schemas/Currency'
        original_diff:
          description: Capital gain in the original currency
          format: float
          type: number
        original_unitprice:
          description: Current unit value in the original currency
          format: float
          type: number
        original_unitvalue:
          description: Average buy price in the original currency
          format: float
          type: number
        original_valuation:
          description: Valuation in original currency
          format: float
          type: number
        portfolio_share:
          description: Percent of the portfolio
          format: float
          type: number
        prev_diff:
          description: Capital gain from previous value
          format: float
          type: number
        prev_vdate:
          description: Value date of the previous value (prev_diff)
          format: date
          type: string
        quantity:
          default: 0.0
          description: Quantity
          format: float
          type: number
        source:
          description: Source of the ISIN code (website, notFound)
          type: string
        unitprice:
          default: 0.0
          description: Average buy price
          format: float
          type: number
        unitvalue:
          default: 0.0
          description: Current unit value
          format: float
          type: number
        valuation:
          default: 0.0
          description: Current valuation
          format: float
          type: number
        vdate:
          description: Value date
          format: date
          type: string
      required:
      - code
      - id
      - id_account
      - label
      type: object
    InvestmentValue:
      properties:
        id:
          description: ID of the value
          type: integer
        id_investment:
          description: ID of the related investment
          type: integer
        original_currency:
          $ref: '#/components/schemas/Currency'
        original_unitvalue:
          description: Value on this date, in the original currency
          format: float
          type: number
        unitvalue:
          description: Value on this date
          format: float
          type: number
        vdate:
          description: Date of this value
          format: date
          type: string
      required:
      - id
      - id_investment
      - unitvalue
      - vdate
      type: object
    Keyword:
      properties:
        id:
          type: integer
        id_category:
          type: integer
        income:
          type: boolean
        keyword:
          type: string
        priority:
          type: integer
      required:
      - id
      - id_category
      - income
      - keyword
      - priority
      type: object
    LockedUser:
      properties:
        id_user:
          type: integer
        timestamp:
          format: date-time
          type: string
        worker:
          type: string
      required:
      - id_user
      - timestamp
      type: object
    Logs:
      properties:
        connectionlogs:
          items:
            $ref: '#/components/schemas/ConnectionLog'
          type: array
        total:
          description: total number of results
          type: number
      required:
      - connectionlogs
    OidcWhitelist:
      properties:
        id:
          type: integer
        redirect_uri:
          description: authorized redirect uri
          type: string
      required:
      - id
      - redirect_uri
      type: object
    Order:
      properties:
        error_message:
          description: more information on the state if something went wrong during
            the order
          type: string
        id:
          description: ID of the order
          type: integer
        id_merchant:
          description: id of the merchant who initiated the order
          type: integer
        id_transfer:
          description: id of the transfer used to pay this the order
          type: integer
        opt_out_cause:
          description: set by the webview, indicates at which step of the payment
            the user has left the order
          type: string
        refund_value:
          description: Amount refunded
          format: float
          type: number
        state:
          description: State of the order (result of the recipient adding and the
            transfer execution)
          type: string
      required:
      - id
      - id_merchant
      - id_transfer
      type: object
    Pocket:
      properties:
        availability_date:
          description: Availability date of the pocket
          format: date
          type: string
        condition:
          default: inconnu
          description: Withdrawal condition of the pocket
          type: string
        deleted:
          description: If set, this pocket has been removed from the website
          format: date-time
          type: string
        id:
          description: ID of the pocket
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        id_investment:
          description: ID of the related investment
          type: integer
        label:
          description: Label of the pocket
          type: string
        last_update:
          description: Last update of the pocket
          format: date-time
          type: string
        quantity:
          default: 0.0
          description: Quantity of stocks
          format: float
          type: number
        value:
          description: Value of the pocket
          format: float
          type: number
      required:
      - condition
      - id
      - id_account
      - id_investment
      - value
      type: object
    Profile:
      properties:
        admin:
          default: false
          type: boolean
        conf:
          type: string
        email:
          type: string
        id:
          type: integer
        id_user:
          type: integer
        lang:
          nullable: true
          type: string
        role:
          default: admin
          enum:
          - admin
          - ser
          type: string
        statut:
          type: integer
      required:
      - admin
      - email
      - id
      - id_user
      - role
      type: object
    Project:
      properties:
        active:
          default: true
          type: boolean
        comment:
          default: ''
          type: string
        id:
          type: integer
        id_type:
          type: integer
        id_user:
          type: integer
        monthly_savings:
          format: float
          type: number
        name:
          type: string
        saved:
          default: 0.0
          format: float
          type: number
        target:
          format: float
          type: number
      required:
      - active
      - comment
      - id
      - id_type
      - id_user
      - monthly_savings
      - name
      - saved
      - target
      type: object
    ProjectType:
      properties:
        icon_url:
          type: string
        id:
          type: integer
        name:
          type: string
      required:
      - id
      - name
      type: object
    ProviderLogos:
      properties:
        connectorlogos:
          items:
            $ref: '#/components/schemas/ConnectorLogo'
          type: array
        total:
          description: total number of results
          type: integer
    ProviderSources:
      properties:
        sources:
          items:
            $ref: '#/components/schemas/ConnectorSource'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - sources
    Providers:
      properties:
        providers:
          items:
            $ref: '#/components/schemas/Connector'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - providers
    Push:
      properties:
        connection:
          $ref: '#/components/schemas/Connection'
        push_type:
          type: string
        user:
          $ref: '#/components/schemas/User'
      type: object
    Recipient:
      properties:
        add_verified:
          description: Was the recipient adding authorized
          type: boolean
        bank_name:
          description: Bank of the recipient
          type: string
        category:
          description: Category in which the recipient is
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        deleted:
          description: The recipient isn't found anymore on the bank
          format: date-time
          type: string
        enabled_at:
          description: It will be possible to do transfers to this recipient at this
            date
          format: date-time
          type: string
        error:
          description: Error message
          type: string
        expire:
          format: date-time
          type: string
        fields:
          description: Fields for recipient with additionalInformationNeeded state
          type: string
        iban:
          description: IBAN of the recipient
          type: string
        id:
          description: ID of the recipient
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        id_target_account:
          description: ID of the target account, in case of internal recipient
          type: integer
        label:
          description: Label of the recipient
          type: string
        last_update:
          description: Last time we have fetched this recipient
          format: date-time
          type: string
        state:
          description: State of recipient
          type: string
        time_scraped:
          description: First time we've seen this recipient
          format: date-time
          type: string
        webid:
          description: Webid of the recipient
          type: string
      required:
      - category
      - id
      - id_account
      - label
      - last_update
      type: object
    RecipientLog:
      properties:
        error:
          description: Error message during recipient addition, if any
          type: string
        fields:
          description: Fields for recipient in additionalInformationNeeded state with
            background option
          type: string
        id:
          description: ID of the transfer log entry
          type: integer
        id_file:
          description: ID of the related file
          type: integer
        id_recipient:
          description: ID of the related recipient
          type: integer
        request_data:
          description: Data stored related to user who has requested the recipient
            addition
          type: string
        step:
          description: Step of recipient addition, (add_recipient, asking_field, recipient
            addition validated, creation, storing_files)
          type: string
        timestamp:
          description: Timestamp of the log
          format: date-time
          type: string
      required:
      - id
      - timestamp
      type: object
    Security:
      properties:
        code:
          description: ISIN code of the security
          type: string
        id:
          description: ID of the security
          type: integer
        id_type:
          description: ID of the security type
          type: integer
        last_update:
          description: Last update of the security
          format: date-time
          type: string
        name:
          description: Name of the security
          type: string
      required:
      - id
      - name
      type: object
    Subscription:
      properties:
        deleted:
          description: This subscription is not found on the website anymore
          format: date-time
          type: string
        disabled:
          description: This subscription has been deleted by user and will not be
            synchronized anymore
          format: date-time
          type: string
        error:
          description: If the last update has failed, the error code
          type: string
        id:
          description: ID of subscription
          type: integer
        id_connection:
          description: ID of related connection
          type: integer
        id_source:
          description: ID of the related connection source
          type: integer
        id_user:
          description: ID of related user
          type: integer
        label:
          description: Label of the subscription
          type: string
        last_update:
          description: Last successful update of the subscription
          format: date-time
          type: string
        number:
          description: Subscription's number
          type: string
        renewdate:
          description: Next renew date, if any
          format: date
          type: string
        subscriber:
          description: Name of the subscriber
          type: string
        validity:
          description: The subscription is valid until this date, if any
          format: date
          type: string
      required:
      - id
      - label
      - number
      type: object
    SubscriptionLog:
      properties:
        error:
          description: If fail, contains the error code
          type: string
        error_message:
          description: If fail, error message received from provider
          type: string
        id:
          description: ID of the log
          type: integer
        id_connection_log:
          description: ID of the related connection log
          type: integer
        id_source:
          description: ID of the related connection source
          type: integer
        id_subscription:
          description: ID of the related subscription
          type: integer
        nb_docs:
          description: Number of docs on the subscription
          type: integer
        timestamp:
          description: Timestamp of log
          format: date-time
          type: string
      required:
      - id
      - id_subscription
      - timestamp
      type: object
    Terms:
      properties:
        termsofservices:
          items:
            $ref: '#/components/schemas/TermsOfService'
          type: array
        total:
          description: total number of results
          type: number
    TermsOfService:
      properties:
        created:
          format: date-time
          type: string
        deleted:
          format: date-time
          type: string
        id:
          type: integer
        version:
          type: string
      required:
      - created
      - id
      - version
      type: object
    Transaction:
      properties:
        active:
          default: true
          description: If false, PFM services will ignore this transaction
          type: boolean
        application_date:
          description: Date considered by PFM services. It is used to change the month
            of a transaction, for example.
          format: date
          type: string
        bdate:
          description: Date used by the bank for the transaction
          format: date
          type: string
        card:
          description: Card number associated to the transaction
          nullable: true
          type: string
        category:
          $ref: '#/components/schemas/Category'
        coming:
          description: If true, this transaction hasn't been yet debited
          type: boolean
        comment:
          description: User comment
          nullable: true
          type: string
        commission:
          description: Commission taken on the transaction
          format: float
          nullable: true
          type: number
        commission_currency:
          $ref: '#/components/schemas/Currency'
        counterparty:
          description: Counterparty
          nullable: true
          type: string
        country:
          description: Original country
          nullable: true
          type: string
        date:
          description: Debit date
          format: date
          type: string
        date_scraped:
          description: Date when the transaction has been seen
          format: date-time
          type: string
        deleted:
          description: If set, this transaction has been removed from the bank
          format: date-time
          nullable: true
          type: string
        documents_count:
          type: integer
        formatted_value:
          type: string
        gross_value:
          description: Gross value of the transaction
          format: float
          nullable: true
          type: number
        id:
          description: ID of the transaction
          type: integer
        id_account:
          description: ID of the related account
          type: integer
        id_category:
          description: ID of the related category
          type: integer
        id_cluster:
          description: If the transaction is part of a cluster
          nullable: true
          type: integer
        informations:
          $ref: '#/components/schemas/UserTransactionInformations'
        last_update:
          description: Last update of the transaction
          format: date-time
          type: string
        nature:
          default: inconnu
          description: Type of transaction
          type: string
        new:
          type: boolean
        nopurge:
          type: integer
        original_currency:
          $ref: '#/components/schemas/Currency'
        original_gross_value:
          description: Gross value in the original currency
          format: float
          nullable: true
          type: number
        original_value:
          description: Value in the original currency
          format: float
          nullable: true
          type: number
        original_wording:
          description: Full label of the transaction
          type: string
        rdate:
          description: Realization of the transaction
          format: date
          type: string
        simplified_wording:
          description: Simplified label of the transaction
          type: string
        state:
          default: new
          description: Internal state of the transaction
          type: string
        stemmed_wording:
          description: Do not use it
          type: string
        type:
          enum:
          - card
          - transfer
          - order
          - bank
          - payback
          - check
          - withdrawal
          - unknown
          - deposit
          type: string
        value:
          description: Value of the transaction
          format: float
          type: number
        vdate:
          description: Value date of the transaction
          format: date
          nullable: true
          type: string
        webid:
          description: Webid of the transaction
          nullable: true
          type: string
        wording:
          description: Label set by the user
          type: string
      required:
      - active
      - coming
      - date
      - date_scraped
      - id
      - id_account
      - original_wording
      - rdate
      - simplified_wording
      - state
      - stemmed_wording
      type: object
    TransactionInformation:
      properties:
        id:
          description: ID of this transaction information
          type: integer
        id_transaction:
          description: ID of the related transaction
          type: integer
        key:
          description: Key of the transaction information
          type: string
        value:
          description: Value of the transaction information
          type: string
      required:
      - id
      - id_transaction
      - key
      type: object
    TransactionsCluster:
      properties:
        created_by:
          type: string
        enabled:
          default: true
          type: boolean
        id:
          type: integer
        id_account:
          type: integer
        id_category:
          type: integer
        mean_amount:
          format: float
          type: number
        median_increment:
          type: integer
        next_date:
          format: date
          type: string
        wording:
          type: string
      required:
      - enabled
      - id
      - id_account
      - mean_amount
      - wording
      type: object
    Transfer:
      description: This is a representation of a transfer.
      properties:
        account_balance:
          description: Balance of the account just before the transfer
          format: float
          type: number
        account_iban:
          description: IBAN of the debited account
          type: string
        amount:
          description: Amount of the transfer
          format: float
          type: number
        beneficiary_label:
          description: Label of the beneficiary (needed for transfer to other beneficiary
            type than 'recipient')
          type: string
        beneficiary_number:
          description: 'Beneficiary bank identifier value like recipient webid, iban:
            EX6713281847025300290000062 or phone_number: 06XXXXXX'
          type: string
        beneficiary_type:
          default: recipient
          description: 'Type of beneficiary number, for example: ''recipient'' (in
            bank recipient list), ''iban'' or ''phone_number'''
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        error:
          description: Error message during transfer, if any
          type: string
        exec_date:
          description: Date when the transfer will be operated by the bank
          format: date
          type: string
        fees:
          description: Fees taken by the bank
          format: float
          type: number
        id:
          description: ID of transfer
          type: integer
        id_account:
          description: ID of the debited account
          type: integer
        id_recipient:
          description: ID of the recipient
          type: integer
        id_transaction:
          description: If found, ID of the related transaction
          type: integer
        id_user:
          description: ID of the related user
          type: integer
        label:
          description: Label of the transfer
          type: string
        recipient_iban:
          description: IBAN of the recipient in bank recipient list
          type: string
        register_date:
          description: Date when the transfer has been registered
          format: date-time
          type: string
        state:
          description: State of the transfer (created, scheduled, validating, pending,
            coming, done, canceled, transactionNotFound, deleted, error, bug)
          type: string
        validate_mechanism:
          description: Authentication method used to validate transfer (credentials
            or webauth)
          type: string
        webid:
          description: WebID of the transfer
          type: string
      required:
      - amount
      - beneficiary_type
      - exec_date
      - id
      - register_date
      - state
      type: object
    TransferLog:
      properties:
        error:
          description: Error message during transfer, if any
          type: string
        fields:
          description: Fields for transfer in additionalInformationNeeded state with
            background option
          type: string
        id:
          description: ID of the transfer log entry
          type: integer
        id_file:
          description: ID of the related file
          type: integer
        id_transfer:
          description: ID of the related transfer
          type: integer
        request_data:
          description: Data stored related to user who has requested the transfer
          type: string
        state:
          description: State of the transfer (created, scheduled, validating, pending,
            done, canceled, error, bug)
          type: string
        timestamp:
          description: Timestamp of the log
          format: date-time
          type: string
      required:
      - id
      - timestamp
      type: object
    User:
      properties:
        id:
          type: integer
        platform:
          enum:
          - web
          - iPad
          - iPhone
          - Android
          - CAstore
          - requestAccess
          - sharedAccess
          - transfer
          - refresh_token
          type: string
        signin:
          format: date-time
          type: string
      required:
      - id
      - platform
      - signin
      type: object
    UserAccountHistory:
      properties:
        investmentvalues:
          items:
            $ref: '#/components/schemas/InvestmentValue'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - investmentvalues
    UserAccountLogs:
      properties:
        accountlogs:
          items:
            $ref: '#/components/schemas/AccountLog'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - accountlogs
    UserAccounts:
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - accounts
    UserAlert:
      description: "/!\\ Careful we use default value from database if present\n\n\
        \    For more information see AlertsPlugin.init"
      properties:
        apply:
          type: string
        balance_max:
          default: 10000.0
          format: float
          type: number
        balance_min1:
          default: 500.0
          format: float
          type: number
        balance_min2:
          default: 0.0
          format: float
          type: number
        date_range:
          type: integer
        enabled:
          default: true
          type: boolean
        expense_max:
          default: 500.0
          format: float
          type: number
        id:
          type: integer
        income_max:
          default: 500.0
          format: float
          type: number
        resume_enabled:
          default: true
          type: boolean
        resume_frequency:
          type: integer
        transaction_types:
          type: string
        type:
          default: transactions
          type: string
        value_type:
          default: flat
          type: string
      required:
      - id
      - resume_frequency
      - type
      - value_type
      type: object
    UserAlerts:
      properties:
        alerts:
          items:
            $ref: '#/components/schemas/Alert'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - alerts
    UserBalance:
      properties:
        balance:
          format: float
          type: number
        converted:
          type: boolean
        currencies:
          items:
            $ref: '#/components/schemas/UserBalanceCurrency'
          type: array
        expenses:
          format: float
          type: number
        incomes:
          format: float
          type: number
        max_date:
          format: date
          type: string
        min_date:
          format: date
          type: string
        remains:
          format: float
          type: number
        transactions:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
      type: object
    UserBalanceCurrency:
      properties:
        balance:
          format: float
          type: number
        expenses:
          format: float
          type: number
        incomes:
          format: float
          type: number
        remains:
          format: float
          type: number
        symbol:
          type: string
      type: object
    UserBalances:
      properties:
        balances:
          items:
            $ref: '#/components/schemas/UserBalance'
          type: array
        first_date:
          format: date
          type: string
        last_date:
          format: date
          type: string
        result_max_date:
          format: date
          type: string
        result_min_date:
          format: date
          type: string
        total:
          type: integer
      type: object
    UserCategoriesFull:
      properties:
        categorys:
          items:
            $ref: '#/components/schemas/Category'
          type: array
        total:
          description: total number of results
          type: integer
    UserConfigKeys:
      properties:
        keys:
          description: list of comma separated keys to be deleted.
          type: string
      type: object
    UserConnectionInformations:
      properties:
        connections:
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        total:
          description: total number of results
          type: integer
      required:
      - connections
    UserDevices:
      properties:
        devices:
          items:
            $ref: '#/components/schemas/Device'
          type: array
        total:
          description: total number of results
          type: number
      required:
      - devices
    UserDocuments:
      properties:
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
        total:
          description: total number of results
          type: number
      required:
      - documents
    UserInvestments:
      properties:
        investments:
          items:
            $ref: '#/components/schemas/Investment'
          type: array
        total:
          description: total number of results
          type: number
      required:
      - investments
    UserOperationsalert:
      properties:
        total:
          description: total number of results
          type: number
        useralerts:
          items:
            $ref: '#/components/schemas/UserAlert'
          type: array
    UserPockets:
      properties:
        pockets:
          items:
            $ref: '#/components/schemas/Pocket'
          type: array
        total:
          description: total number of results
          type: number
      required:
      - pockets
    UserProfiles:
      properties:
        profiles:
          items:
            $ref: '#/components/schemas/Profile'
          type: array
        total:
          description: total number of results
          type: number
      required:
      - profiles
    UserRecipients:
      properties:
        recipients:
          items:
            $ref: '#/components/schemas/Recipient'
          type: array
        total:
          description: total number of results
          type: number
      required:
      - recipients
    UserResume:
      example:
        last_resume: '2018-07-10 10:08:39'
        newsletter_enabled: true
        promotion_enabled: true
        resume_enabled: true
        resume_frequency: 7
      properties:
        last_resume:
          format: datetime
          nullable: true
          type: string
        newsletter_enabled:
          type: boolean
        promotion_enabled:
          type: boolean
        resume_enabled:
          type: boolean
        resume_frequency:
          format: datetime
          type: string
      type: object
    UserSubscriptionLogs:
      properties:
        subscriptionlogs:
          items:
            $ref: '#/components/schemas/SubscriptionLog'
          type: array
        total:
          description: total number of results
          type: number
      required:
      - subscriptionlogs
    UserToken:
      properties:
        token:
          type: string
      type: object
    UserTransactionInformations:
      properties:
        total:
          description: total number of results
          type: number
        transactioninformations:
          items:
            $ref: '#/components/schemas/TransactionInformation'
          type: array
      required:
      - transactioninformations
    UserTransactions:
      properties:
        total:
          description: total number of results
          type: number
        transactions:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
      required:
      - transactions
    UserTransactionsclusters:
      properties:
        total:
          description: total number of results
          type: number
        transactionsclusters:
          items:
            $ref: '#/components/schemas/TransactionsCluster'
          type: array
      required:
      - transactionsclusters
    UserTransfers:
      properties:
        total:
          description: total number of results
          type: number
        transfers:
          items:
            $ref: '#/components/schemas/Transfer'
          type: array
      required:
      - transfers
    Users:
      properties:
        total:
          description: total number of results
          type: number
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
      - users
    WebHookLogs:
      properties:
        total:
          description: total number of results
          type: number
        webhooklogs:
          items:
            $ref: '#/components/schemas/WebhookLog'
          type: array
      required:
      - webhooklogs
    Webhook:
      properties:
        add_to_data:
          description: json object to describe data to add
          type: string
        created:
          description: Date of the webhook creation
          format: date-time
          type: string
        deleted:
          description: Date of the webhook deletion
          format: date-time
          type: string
        id:
          description: ID of the webhook
          type: integer
        id_auth:
          description: ID of the authentication process
          type: integer
        id_event:
          description: ID of the webhook event
          type: integer
        id_service:
          description: ID of the service
          type: integer
        id_user:
          description: ID of the emitter user
          type: integer
        updated:
          description: Date of the webhook last update
          format: date-time
          type: string
        url:
          description: URL of the webhook
          type: string
      required:
      - created
      - id
      - updated
      type: object
    WebhookData:
      properties:
        created:
          description: Timestamp when the hook data was generated
          format: date-time
          type: string
        data:
          description: Data emitted
          type: string
        id:
          description: ID of the webhook data
          type: integer
        id_resource:
          description: a changing ID used to filter webhookdata depending on the event
            triggered
          type: integer
        id_service:
          description: ID of the recipient service
          type: integer
        id_user:
          description: ID of the emitter user
          type: integer
        id_webhook:
          description: ID of the webhook
          type: integer
        mimetype:
          description: Mimetype of the data
          type: string
        success:
          description: Timestamp when the hook has been successfully called
          format: date-time
          type: string
      required:
      - created
      - id
      - id_user
      - id_webhook
      type: object
    WebhookLog:
      properties:
        id:
          description: ID of the log
          type: integer
        id_service:
          description: ID of the service
          type: integer
        id_user:
          description: ID of the user
          type: integer
        id_webhook_data:
          description: ID of the webhook data
          type: integer
        next_try:
          description: If the log is an error, do not retry to push before this timestamp
          format: date-time
          type: string
        response_code:
          description: Return code of the reply to the hook
          type: integer
        response_date:
          description: Timestamp of the reply to the hook
          format: date-time
          type: string
        timestamp:
          description: Timestamp when the hook was sent
          format: date-time
          type: string
      required:
      - id
      - timestamp
      type: object
    Webhooks:
      properties:
        total:
          description: total number of results
          type: number
        webhooks:
          items:
            $ref: '#/components/schemas/Webhook'
          type: array
      required:
      - webhooks
    WebhooksAuth:
      properties:
        authproviders:
          items:
            $ref: '#/components/schemas/AuthProvider'
          type: array
        total:
          description: total number of results
          type: number
      required:
      - authproviders
  securitySchemes:
    Authorization:
      in: header
      name: Authorization
      type: apiKey
info:
  description: "# Budgea Development Guides\n\nWelcome to **Budgea**'s documentation.\n\
    \nThis documentation is intended to get you up-and-running with our APIs and advise\
    \ on the implementation of some regulatory aspects of your application, following\
    \ the DSP2's guidelines.\n\n## Getting Started\n**IMPORTANT**\nDepending on your\
    \ status with regard of the DSP2 regulation, **agent** or **partner**, you may\
    \ call our APIs or simply use our Webview and callbacks to get the financial data\
    \ of your users.\nAs an **agent**, you are allowed to call directly our APIs and\
    \ implement your own form to get the user's credentials.\nAs a **partner**, you\
    \ cannot manipulate the credentials, and have to delegate this step to us through\
    \ our webview.\n\nThe sections below will document how to use our APIs, make sure\
    \ you have the **agent** status to do so.\nFor the **partner**, please refer to\
    \ the section *Webview* and *Callbacks* of this documentation.\n\n### Overview\n\
    Your API is a REST API which requires a communication through https to send and\
    \ receive JSON documents.\nDuring your tests, we recommend to make calls to the\
    \ API with curl or any other HTTP client of your choice.\nYou can watch a video\
    \ demonstration on this [URL](https://asciinema.org/a/FsaFyt3WAPyDm7sfaZPkwal3V).\n\
    For the examples we'll use the demo API with address `https://demo.biapi.pro`,\
    \ you should change that name to your API's name.\n\n### Hello World\nLet's start\
    \ by calling the service `/banks` which lists all available banks.\n```\ncurl\
    \ https://demo.biapi.pro/2.0/banks/\n```\nTo log in to a bank webpage, you'll\
    \ need to know for a given bank, the fields your user should fill in the form.\n\
    Let's call a  specific bank and ask for an additional resource *fields*.\n```\n\
    curl https://demo.biapi.pro/2.0/banks/59?expand=fields\n```\nThe response here\
    \ concerns only 1 bank (since we specified an id) and the resource _Fields_ is\
    \ added to the response thanks to the query parameter `expand`.\n\nTo get more\
    \ interesting things done, you'll need to send authenticated requests.\n\n###\
    \ Authentication\nThe way to authenticate is by passing the `Authorization: Bearer\
    \ <token>` header in your request.\nAt the setup a _manage token_ have been generated,\
    \ you can use this token for now, when creating your user we'll see how to generate\
    \ a user's token.\n```\ncurl https://demo.biapi.pro/2.0/config \\\n  -H 'Authorization:\
    \ Bearer <token>'\n```\nThis endpoint will list all the parameters you can change\
    \ to adapt Budgea to your needs.\n\nWe've covered the very first calls. Before\
    \ diving deeper, let's see some general information about the APIs.\n\n## Abstract\n\
    \n### API URL\n`https://demo.biapi.pro/2.0`\n\n### Requests format\nData format:\
    \ **application/x-www-form-urlencoded** or **application/json** (suggested)\n\n\
    Additional headers: Authorization: User's token (private)\n\n### Responses format\n\
    Data format: **application/json** ([http://www.json.org](http://www.json.org/))\n\
    Charset: **UTF-8**\n\n### Resources\nEach call on an endpoint will return resources.\
    \ The main resources are:\n| Resource            | Description               \
    \                                                                            \
    \                |\n| ---------------------|:------------------------------------------------------------------------------------------------------------------\
    \   |\n|Users                 |Represent a user                              \
    \                                                                        |\n|Connection\
    \            |A set of data used to authenticate on a website (usually a login\
    \ and password). There is 1 connection for each website|\n|Account           \
    \    |A bank account contained in a connection                               \
    \                                               |\n|Transaction           |An\
    \ entry in a bank account                                                    \
    \                                        |\n|Investment            |An asset in\
    \ a bank account                                                             \
    \                               |\n\nThe chain of resources is as follow: **Users\
    \ \u2208 Connections \u2208 Accounts \u2208 Transactions or Investments**\n\n\
    ### RESTful API\n\nThis API is RESTful, which means it is stateless and each resource\
    \ is accessed with an unique URI.\n\nSeveral HTTP methods are available:\n\n|\
    \ Method                  | Description                    |\n| ------------------------|:-------------------------------|\n\
    | GET /resources          | List resources                 |\n| GET /resources/{ID}\
    \     | Get a resource from its ID     |\n| POST /resources         | Create a\
    \ new resource          |\n| POST /resources/{ID}    | Update a resource     \
    \         |\n| PUT /resources  /{ID}   | Update a resource              |\n| DELETE\
    \ /resources       | Remove every resources         |\n| DELETE /resources/{ID}\
    \  | Delete a resource              |\n\n\nEach resource can contain sub-resources,\
    \ for example:\n`/users/me/connections/2/accounts/23/transactions/48`\n\n### HTTP\
    \ response codes\n\n| Code        | Message               | Description      \
    \                                                                            \
    \ |\n| ----------- |:---------------------:|-----------------------------------------------------------------------------------------------|\n\
    | 200         | OK                    |Default response when a GET or POST request\
    \ has succeed                                        |\n| 202         | Accepted\
    \              |For a new connection this code means it is necessary to provide\
    \ complementary information (2FA)|\n| 204         | No content            |Default\
    \ response when a POST request succeed without content                       \
    \            |\n| 400         | Bad request           |Supplied parameters are\
    \ incorrect                                                              |\n|\
    \ 403         | Forbidden             |Invalid token                         \
    \                                                         |\n| 500         | Internal\
    \ Servor Error |Server error                                                 \
    \                                  |\n| 503         | Service Unavailable   |Service\
    \ is temporarily unavailable                                                 \
    \            |\n\n### Errors management\nIn case an error occurs (code 4xx or\
    \ 5xx), the response can contain a JSON object describing this error:\n```json\n\
    {\n   \"code\": \"authFailure\",\n   \"message\": \"Wrong password\"  // Optional\n\
    }\n```\nIf an error is displayed on the website, Its content is returned in error_message\
    \ field.\nThe list of all possible errors is listed further down this page.\n\n\
    ### Authentication\nA user is authenticated by an access_token which is sent by\
    \ the API during a call on one of the authentication services, and can be supplied\
    \ with this header:\n`Authorization: Bearer YYYYYYYYYYYYYYYYYYYYYYYYYYY`\n\n There\
    \ are two user levels:\n\n    - Normal user, which can only access to his own\
    \ accounts\n    - Administrator, with extended rights\n\n### Default filters\n\
    During a call to an URI which lists resources, some filters can be passed as query\
    \ parameters:\n\n| Parameter   | Type      | Description                     \
    \                          |\n| ----------- |:---------:|-----------------------------------------------------------|\n\
    | offset      | Integer   |Offset of the first returned resource             \
    \         |\n| limit       | Integer   |Limit number of results              \
    \                      |\n| min_date    | Date      |Minimal date (if supported\
    \ by service), format: YYYY-MM-DD |\n| max_date    | Date      |Maximal date (if\
    \ supported by service), format: YYYY-MM-DD |\n\n### Extend requests\nDuring a\
    \ GET on a set of resources or on a unique resource, it is possible to add a parameter\
    \ expand to the request to extend relations with other resources:\n\n`GET /2.0/users/me/accounts/123?expand=transactions[category],connection`\n\
    \n```json\n{\n   \"id\" : 123\n   \"name\" : \"Compte ch\xE8que\"\n   \"balance\"\
    \ : 1561.15\n   \"transactions\" : [\n      {\n         \"id\" : 9849,\n     \
    \    \"simplified_wording\" : \"HALL'S BEER\",\n         \"value\" : -513.20,\n\
    \         ...\n         \"category\" : {\n            \"id\" : 561,\n        \
    \    \"name\" : \"Sorties / Bar\",\n            ...\n         }\n       },\n \
    \      ...\n   ],\n   \"id_user\" : 1,\n   \"connection\" : {\n      \"id\" :\
    \ 1518,\n      \"id_bank\" : 41,\n      \"id_user\" : 1,\n      \"error\" : null,\n\
    \      ...\n   }\n}\n```\n\n### Request example\n```http\nGET /2.0/banks?offset=0&limit=10&expand=fields\n\
    Host: demo.biapi.pro\nAccept: application/json\nAuthorization: Bearer <token>\n\
    ```\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length:\
    \ 3026\nServer: Apache\nDate: Fri, 14 Mar 2014 08:24:02 GMT\n\n{\n   \"banks\"\
    \ : [\n      {\n         \"id_weboob\" : \"bnporc\",\n         \"name\" : \"BNP\
    \ Paribas\",\n         \"id\" : 3,\n         \"hidden\" : false,\n         \"\
    fields\" : [\n            {\n               \"id\" : 1,\n               \"id_bank\"\
    \ : 3,\n               \"regex\" : \"^[0-9]{5,10}$\",\n               \"name\"\
    \ : \"login\",\n               \"type\" : \"text\",\n               \"label\"\
    \ : \"Num\xE9ro client\"\n            },\n            {\n               \"id\"\
    \ : 2,\n               \"id_bank\" : 3,\n               \"regex\" : \"^[0-9]{6}$\"\
    ,\n               \"name\" : \"password\",\n               \"type\" : \"password\"\
    ,\n               \"label\" : \"Code secret\"\n            }\n         ]\n   \
    \   },\n      ...\n   ]\n   \"total\" : 41\n}\n```\n\n### Constants\n#### List\
    \ of bank account types\n| Type          |Description                        |\n\
    | -----------   |-----------------------------------|\n| checking      |Checking\
    \ account                   |\n| savings       |Savings account              \
    \      |\n| deposit       |Deposit accounts                   |\n| loan      \
    \    |Loan                               |\n| market        | Market accounts\
    \                   |\n| joint         |Joint account                      |\n\
    | card          |Card                               |\n| lifeinsurance |Life insurance\
    \ accounts            |\n| pee           |Plan \xC9pargne Entreprise         \
    \   |\n| perco         |Plan \xC9pargne Retraite              |\n| article83 \
    \    |Article 83                         |\n| rsp           |R\xE9serve sp\xE9\
    ciale de participation  |\n| pea           |Plan d'\xE9pargne en actions     \
    \     |\n| capitalisation|Contrat de capitalisation          |\n| perp       \
    \   |Plan d'\xE9pargne retraite populaire  |\n| madelin       |Contrat retraite\
    \ Madelin           |\n| unknown       |Inconnu                            |\n\
    \n#### List of transaction types\n\n| Type         |Description              \
    \          |\n| -----------  |-----------------------------------|\n|transfer\
    \      |Transfers                          |\n|order         |Orders         \
    \                    |\n|check         |Checks                             |\n\
    |deposit       |Cash deposit                       |\n|payback       |Payback\
    \                            |\n|withdrawal    |Withdrawal                   \
    \      |\n|loan_payment  |Loan payment                       |\n|bank        \
    \  |Bank fees                          |\n|card          |Card operation     \
    \                |\n|deferred_card |Deferred card operation            |\n|card_summary\
    \  |Mensual debit of a deferred card   |\n\n#### List of synchronization errors\n\
    ##### Error on Connection object\nThe error field may take one of the below values\
    \ in case of error when accessing the user space.\n\n| Error                 \
    \     |Description                                                           \
    \                            |\n| -----------------------    |--------------------------------------------------------------------------------------------------|\n\
    |wrongpass                   |The authentication on website has failed       \
    \                                                   |\n|additionalInformationNeeded\
    \ |Additional information is needed such as an OTP                           \
    \                       |\n|websiteUnavailable          |The website is unavailable,\
    \ for instance we get a HTTP 503 response when requesting the website   |\n|actionNeeded\
    \                |An action is needed on the website by the user, scraping is\
    \ blocked                               |\n|SCARequired                |An SCA\
    \ process must be done by updating the connection                            \
    \   |\n|decoupled                  |Requires a user validation (ex: digital key)|\n\
    |passwordExpired                   |The password has expired and needs to be changed\
    \ on the website.                                                         |\n\
    |webauthRequired                |A complete authentication process is required\
    \ by update the connection via redirect                            |\n|bug   \
    \                      |A bug has occurred during the synchronization. An alert\
    \ has been sent to Budget Insight           |\n\n#### Error on Account object\n\
    Errors can be filled at the account level in case we access the user's dashboard\
    \ but some account related data cannot be retrieved.\nFor instance, we may not\
    \ access the transactions or investments for a specific account.\nGetting an error\
    \ during an account synchronization does not impact the scraping of other acccounts.\n\
    \n| Error                      |Description                                  \
    \                                                     |\n| -----------------------\
    \    |--------------------------------------------------------------------------------------------------|\n\
    |websiteUnavailable          |The website or a page is unavailable           \
    \                                                   |\n|actionNeeded         \
    \       |An action is needed on the website by the user, scraping is blocked \
    \                              |\n|bug                         |A bug has occurred\
    \ during the synchronization. An alert has been sent to Budget Insight       \
    \    |\n\nNow you know the basics of Budgea API\n- Basic call to retrieve resources\n\
    - Add query parameters to aplly filters\n- Expand resources\n- Authenticated calls\n\
    \nWe're good for the basics! Now let's see how to integrate Budgea in your app\
    \ and create your first user.\n\n## Integrate Budgea *(protocol or Webview)*\n\
    ### The workflow\nUsers of your application exist in the Budgea API.\nEvery User\
    \ is identified by an access_token which is the shared secret between your application\
    \ and our API.\n\nThe workflow is as below:\n1. The user is on your application\
    \ and wants to share his bank accounts or invoices.\n2. A call is made **client\
    \ side** (browser's javascript or desktop application) to create a temporarily\
    \ token which will be used to make API calls.\n3. A form is built, allowing the\
    \ user to select the connector to use (bank or provider, depending on context).\
    \ Every connector requires different kind of credentials.\n4. A call on the API\
    \ is made with the temporarily token to add a **Connection** with the credentials\
    \ supplied by user.\n5. In case of success, the user chooses what bank accounts\
    \ (**Account**) or subscriptions (**Subscription**) he wants to share with your\
    \ application.\n6. When he validates the share, the temporarily token is transmitted\
    \ to your server. This one will call the Budgea API with this token to get a permanent\
    \ token.\n\n**Note**\nIn case your application works without a server (for example\
    \ a desktop application), the permanent token can be obtained on the 1st step,\
    \ by supplying a client_secret to /auth/init and the step 6 is omitted. To get\
    \ more information, read the protocol.\n\nThere are 3 steps to integrate Budgea\
    \ in your application:\n1. Provide a way for your users to share their credentials\
    \ with you\n2. Get the data scraped from Budgea\n3. Be sure to follow the good\
    \ practices before going into production\n\n### Get credentials from users\nYou\
    \ have 2 options here:\n- Integrate the Budget Insight's Webview, a turnkey solution\
    \ to get user's credentials\n- Create your own form following the protocol (must\
    \ have the *agent* status)\n\n### Budgea webview\n\nThe Budgea webview complements\
    \ REST API endpoints with web-based services to handle sensitive or complex operations:\n\
    - add a connection (to a bank or a provider), or edit/repare access to a connection;\n\
    - manage connections (add/remove/edit);\n- edit and validate bank transfers (alpha\
    \ preview).\n\nUsage of the webview is mandatory if you don't hold an Agent status,\
    \ since you are not allowed to use API endpoints carrying user credentials, and\
    \ optional otherwise.\n\n#### Implementation guidelines\n\n##### Base URL\n\n\
    The base URL of all services must be customized:  \n`https://{{domain}}.biapi.pro/2.0/auth/webview/`\
    \  \n`https://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/`  \n- `{{domain}}`:\
    \ substitute with you API domain;\n- `{{lang}}`: optionally specify the language\
    \ of the webview, `en` or `fr` (if not specified, an automatic redirection will\
    \ be performed following the language of the browser).\n\n##### Browser integration\n\
    \nServices available as part of the webview are designed as parameterized URLs\
    \ intended to be opened in a web browser. A callback URI must be specified by\
    \ callers to be notified at the end of the operation flow, similar to OAuth 2\
    \ specification.\n\nYou are encouraged to integrate web-based steps in your product\
    \ following UX best practices:\n- in a web environment, perform a full-page redirect\
    \ to the URL (using either [HTTP redirect](https://developer.mozilla.org/fr/docs/Web/HTTP/Status/302)\
    \ or [scripting](https://developer.mozilla.org/fr/docs/Web/API/Location)), and\
    \ avoid new tabs or popups;\n- in a native Android app, prefer opening the default\
    \ browser or relying on [Chrome Custom Tabs](https://developer.chrome.com/multidevice/android/customtabs)\
    \ to integrating a WebView;\n- in a native iOS app, prefer using a [SFSafariViewController](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller)\
    \ to integrating a WKWebView.\n\n##### Callback handling\n\nMost flows redirect\
    \ to a callback URI at the end of the process. Query parameters are added to the\
    \ URI to identify successful or failed operations.\n\nSuccessful parameters are\
    \ specific to each flow. In case of an error, the following parameters are added:\n\
    \n| Parameter | Description |\n| - | - |\n| `error` | An lowercase string error\
    \ code identifying the kind of error that occurred. When the parameter is not\
    \ present, the response is successful. |\n| `error_description` | A longer string\
    \ description of the error (not intended for user display). |\n\nCommon error\
    \ codes include:\n\n| Code | Description |\n| - | - |\n| `access_denied` | The\
    \ user explicitly cancelled the flow. |\n| `server_error` | Oops, a technical\
    \ failure occurred during the process. |\n\n**Forward compatibility requirement**:\
    \ Additional error codes may be added in the future to describe specific cases.\
    \ When implementing error codes handling, always fallback to a generic case for\
    \ unknown codes.\n\n##### Browser compatibility\n\nThe webview is designed and\
    \ tested to work with browsers supported by the Angular framework:  \nhttps://angular.io/guide/browser-support\n\
    \n##### Privacy / GDPR status\n\nThe webview itself does not use any kind of long-term\
    \ data persistence mechanism such as cookies or local storage, but some authentication\
    \ or authorization steps may delegate to third-party web services that may implement\
    \ them.\n\n#### Configuration\n\nYou can configure the appearance and behaviour\
    \ of the webview by configuring the associated *Client Application* in the console:\n\
    \n| Key | Format | Description |\n| - | - | - |\n| `primary_color` | String |\
    \ Optional. An accent color (hexadecimal string without '#' prefix) to personalize\
    \ the UI elements of the webview. If absent, the default color is grey. |\n| `redirect_uri`\
    \ | String | Optional. A recommended security whitelist configuration. The `redirect_uri`\
    \ parameter sent to any endpoint of the webview is checked against the configuration,\
    \ if any. |\n| `config.disable_connector_hints` | Boolean | Optional. This flags\
    \ hides the list of most-used entries in the connector selection step. The default\
    \ is `false`, i.e. the list is shown. |\n| `config.use_app_layout` | Boolean |\
    \ Optional. Use this flag to enable presenting your log as an app icon. The default\
    \ value is ` false`, i.e. the logo is shown in the top bar of the UI. |\n| `config.disable_accounts_pre_check`\
    \ | Boolean | Optional. An optional boolean flag to prevent bank accounts to be\
    \ automatically pre-checked when the user enters the activation step. The default\
    \ value is ` false`, i.e. the bank accounts are pre-checked. |\n\n#### Endpoints\
    \ reference\n\n##### Add connection flow\n```\nhttps://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/connect\n\
    ```\n\nThis flow allows an end-user to add a new connection to the API. The flow\
    \ handles the following steps:\n- selecting a connector;\n- authenticating & authorizing\
    \ with the connector, by collecting credentials or delegating;\n- managing consent\
    \ to aggregate accounts/subscriptions;\n- collecting required information for\
    \ professional accounts.\n\n###### Endpoint parameters\n\n| Parameter | Description\
    \ |\n| - | - |\n| `client_id` | Required. The ID of the requesting client application.\
    \ You can manage client applications of your domain in the admin console. |\n\
    | `redirect_uri` | Required. An absolute callback URI. The webview will redirect\
    \ to it at the end of the flow. |\n| `code` | Optional. A user-scoped temporary\
    \ code to use with the Budgea API.<br>If you don't provide a code, a new anonymous\
    \ user will be created before the connection is added, and you will be returned\
    \ an access token code scoped to it with the success callback. |\n| `state` |\
    \ Optional. An opaque string parameter that you can use to carry state across\
    \ the flow. The parameter will be set \"as is\" on the callback URI. Make sure\
    \ that the `state` you provide is properly URL-encoded. |\n| `connector_ids` |\
    \ Optional. A comma-separated list of connector IDs available to pick from.<br>If\
    \ the parameter is omitted, all active connectors are available.<br>If you pass\
    \ a single value, the user is not prompted to choose the connector.<br>This parameter\
    \ is mutually exclusive with `connector_uuids`. |\n| `connector_uuids` | Optional.\
    \ A comma-separated list of connector UUIDs available to pick from.<br>If the\
    \ parameter is omitted, all active connectors are available.<br>If you pass a\
    \ single value, the user is not prompted to choose the connector.<br>This parameter\
    \ is mutually exclusive with `connector_ids`. |\n| `connector_capabilities` |\
    \ Optional. A comma-separated list of capabilities to filter available connectors.<br>If\
    \ the parameter is omitted, `bank` is inferred.<br>If multiple values are provided,\
    \ only connectors that expose all the requested capabilities are available.<br>To\
    \ request a bank connection, use `bank`.<br>To request a provider connection,\
    \ use `document`. |\n| `account_ibans` | Optional. A comma-separated list of IBANs\
    \ to filter accounts available for activation in a bank connection context. Other\
    \ accounts will not be selectable. |\n| `account_types` | Optional. A comma-separated\
    \ list of account types to filter accounts available for activation in a bank\
    \ connection context. Other accounts will not be selectable. |\n| `account_usages`\
    \ | Optional. A comma-separated list of account usages to filter accounts available\
    \ for activation in a bank connection context. Other accounts will not be selectable.\
    \ |\n\n###### Successful callback parameters\n\n| Parameter | Description |\n\
    | - | - |\n| `connection_id` | The id of the newly created connection. Please\
    \ note that when redirecting to the callback URI, the accounts and/or subscriptions\
    \ are available in the API, but bank transactions or documents may still be syncing\
    \ in background. |\n| `code` | Optional. If a `code` was *not* initially specified,\
    \ an API code that you must exchange to obtain a permanent access token associated\
    \ with the newly-created anonymous user holding the connection. The parameter\
    \ is URL-encoded, make sure to handle it accordingly. |\n| `state` | Optional.\
    \ Identical to the `state` parameter that was initially specified. |\n\n######\
    \ Additional error codes\n\n| Code | Description |\n| - | - |\n| `tos_declined`\
    \ | The end-user refused to validate the terms of service. |\n\n##### Re-auth\
    \ / edit connection credentials flow\n\n```\nhttps://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/reconnect\n\
    ```\n\nThis flow allows an end-user to re-authenticate against a bank or a provider\
    \ in order to recover an existing connection, or to completely reset credentials\
    \ associated with a connection.\n\n###### Endpoint parameters\n\n| Parameter |\
    \ Description |\n| - | - |\n| `client_id` | Required. The ID of the requesting\
    \ client application. You can manage client applications of your domain in the\
    \ admin console. |\n| `redirect_uri` | Required. An absolute callback URI. The\
    \ webview will redirect to it at the end of the flow. |\n| `code` | Required.\
    \ A user-scoped temporary code to use with the Budgea API. |\n| `connection_id`\
    \ | Required. The id of the existing connection. |\n| `state` | Optional. An opaque\
    \ string parameter that you can use to carry state across the flow. The parameter\
    \ will be set \"as is\" on the callback URI. Make sure that the `state` you provide\
    \ is properly URL-encoded. |\n| `reset_credentials` | Optional. In the default\
    \ mode (`false`), the service will try to recover the connection and prompt the\
    \ user only with outdated or transient information (new password, OTP...).<br>Set\
    \ the parameter to `true` to force resetting all the credentials associated with\
    \ the connection. This parameter may not apply to all connectors. |\n\n######\
    \ Successful callback parameters\n\nThis flow adds no parameter to the callback\
    \ URI in case of success, except from `state`.\n\n##### Manage connections\n\n\
    ```\nhttps://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/manage\n```\nThis\
    \ flow allows an end-user to manage the connections associated with his account\
    \ in the API. The user can add new connections, remove existing ones, fix connection\
    \ errors, reset credentials or activate/deactivate bank accounts.\n\nSupport of\
    \ `redirect_uri` in this flow is optional, as it can be integrated or presented\
    \ as a terminal step, without relying on a final redirection.\n\n###### Endpoint\
    \ parameters\n\n| Parameter | Description |\n| - | - |\n| `client_id` | Required.\
    \ The ID of the requesting client application. You can manage client applications\
    \ of your domain in the admin console. |\n| `code` | Required. A user-scoped temporary\
    \ code to use with the Budgea API. |\n| `redirect_uri` | Optional. An absolute\
    \ callback URI. When provided, the webview will display a close button that redirects\
    \ to it. |\n| `state` | Optional. An opaque string parameter that you can use\
    \ to carry state across the flow when providing a `redirect_uri`. The parameter\
    \ will be set \"as is\" on the callback URI. Make sure that the `state` you provide\
    \ is properly URL-encoded. |\n| `connector_capabilities` | Optional. A comma-separated\
    \ list of capabilities to filter available connectors when adding a new connection.<br>If\
    \ the parameter is omitted, `bank` is inferred.<br>If multiple values are provided,\
    \ only connectors that expose all the requested capabilities are available.<br>To\
    \ request a bank connection, use `bank`.<br>To request a provider connection,\
    \ use `document`. |\n| `account_types` | Optional. A comma-separated list of account\
    \ types to filter accounts available for activation on adding a new bank connection\
    \ or updating existing connections. Other accounts will not be selectable. |\n\
    | `account_usages` | Optional. A comma-separated list of account usages to filter\
    \ accounts available for activation in a bank connection context. Other accounts\
    \ will not be selectable. |\n\n###### Callback parameters\n\nThis flow adds no\
    \ parameter to the callback URI, except from `state`.\n\n##### Execute a bank\
    \ transfer (preview)\n\n**Disclaimer**: Transfer or payment services are available\
    \ as a preview, protocols and parameters are subject to change in upcoming beta/final\
    \ releases.\n\n```\nhttps://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/transfer\n\
    ```\nThis flow allows an end-user to execute a bank transfer. The flow handles\
    \ the following steps:\n- if the transfer is not already created, all steps to\
    \ authenticate with a bank, select the recipient, the emitter account, the amount\
    \ and label;\n- executing the transfer, including managing SCAs for recipient\
    \ registration and/or transfer validation.\n\n###### Endpoint parameters\n\n|\
    \ Parameter | Description |\n| - | - |\n| `client_id` | Required. The ID of the\
    \ requesting client application. You can manage client applications of your domain\
    \ in the admin console. |\n| `redirect_uri` | Required. An absolute callback URI.\
    \ The webview will redirect to it at the end of the flow. |\n| `code` | Required.\
    \ A user-scoped temporary code to use with the Budgea API.<br>If you don't provide\
    \ a code, a new anonymous user will be created before a connection is added and\
    \ the transfer is executed, and you will be returned an access token code scoped\
    \ to it with the success callback. |\n| `state` | Optional. An opaque string parameter\
    \ that you can use to carry state across the flow. The parameter will be set \"\
    as is\" on the callback URI. Make sure that the `state` you provide is properly\
    \ URL-encoded. |\n| `transfer_id`| Optional. The ID of an prepared transfer to\
    \ be validated in the webview. The user cannot edit anything on the transfer before\
    \ validation. |\n\n###### Successfull callback parameters\n\n| Parameter | Description\
    \ |\n| - | - |\n| `transfer_id` | The ID of the transfer that was created and\
    \ executed. |\n| `code` | Optional. If a `code` was *not* initially specified,\
    \ an API code that you can exchange to obtain a permanent access token associated\
    \ with the newly-created anonymous user holding the transfer. The parameter is\
    \ URL-encoded, make sure to handle it accordingly. |\n| `state` | Optional. Identical\
    \ to the `state` parameter that was initially specified. |\n\n###### Additional\
    \ error codes\n\n| Code | Description |\n| - | - |\n| `tos_declined` | The end-user\
    \ refused to validate the terms of service. |\n\n#### Migrating from v3\n\nWe\
    \ provide a full backward compatibility layer with current implementations of\
    \ the webview v3 to ease the transition. All endpoints remains accessible, with\
    \ the same parameters and callback behaviour. Migration instructions are provided\
    \ below.\n\n*The v3 compatibility mode is expected to be removed on 31 December\
    \ 2019.* You should migrate your implementation a soon as possible to new endpoints\
    \ and parameters.\n\n##### Add connection flow / Edit connection credentials \
    \ \n```\n/connect/select\n```\n\nThis endpoint has been superseded by `/connect`\
    \ (no suffix) for adding a new connection, and `/reconnect` for resetting or updating\
    \ an existing connection.\n\n| Endpoint parameter | Migration instructions |\n\
    | - | - |\n| `client_id` | No change. |\n| `redirect_uri`, `state` | No change.\
    \ |\n| `response_type` | This parameter is not used anymore. |\n| `id_connector`,\
    \ `connectors` | Superseded by `connector_ids` sent to the `/connect` endpoint.\
    \ |\n| `types` | Superseded by `connector_capabilities` sent to the `/connect`\
    \ endpoint.<br>Use`connector_capabilities=bank` (bank connection) or `connector_capabilities=document`\
    \ (provider connection). |\n| `id_connection` | Superseded by `connection_id`\
    \ sent to the `/reconnect` endpoint. |\n\nPassing the code or access token as\
    \ an URL fragment is no longer supported, use the `code` query parameter.\n\n\
    | Callback parameter | Migration instructions |\n| - | - |\n| `id_connection`\
    \ | Superseded by `connection_id`.<br>In the `/reconnect` flow, this parameter\
    \ is not returned anymore. |\n| `code` | Still named `code`, but in the `/connect`\
    \ flow the parameter is now **only** added if an anonymous user was created, i.e.\
    \ the `code` parameter was **not** provided as a query parameter or fragment.<br>In\
    \ the `/reconnect` flow, this parameter is not returned anymore. |\n| `state`\
    \ | No change. |\n\n##### Manage connections\n\n```\n/accounts\n```\n\nThis endpoint\
    \ has been superseded by `/manage`, that now fully allows users to add/remove\
    \ connections, reset their credentials or recover from error states.\n\n| Endpoint\
    \ parameter | Migration instructions |\n| - | - |\n| `client_id` | No change.\
    \ |\n| `redirect_uri`, `state` | No change, these parameters are now optional.\
    \ |\n| `response_type` | This parameter is not used anymore. |\n| `types` | Superseded\
    \ by `connector_capabilities`.<br>Use`connector_capabilities=bank` (bank connection)\
    \ or `connector_capabilities=document` (provider connection). |\n\nPassing the\
    \ code or access token as an URL fragment is no longer supported, use the `code`\
    \ query parameter.\n\n| Callback parameter | Migration instructions |\n| - | -\
    \ |\n| `code` | This parameter is not returned anymore. |\n| `state` | No change.\
    \ |\n\n##### Behaviour change\n\nIn v3, the `/accounts` flow used to redirect\
    \ to the `redirect_uri` after a connection addition. This is no longer the case\
    \ in v4, where redirection is only performed when the user explicitly closes the\
    \ flow. If you need to perform actions when a connection is added or removed,\
    \ you should rely on webhooks.\n\n#### Protocol\nThis section describes the protocol\
    \ used to set bank and provider accounts of a user, in case you don't want to\
    \ use the webview.\n\nThe idea is to call the following services client-side (with\
    \ AJAX in case of a web application), to ensure the bank and providers credentials\
    \ will not be sent to your servers.\n\n1. /auth/init\n```http\nPOST /auth/init\n\
    ```\n```json\n{\n   \"auth_token\" : \"fBqjMZbYddebUGlkR445JKPA6pCoRaGb\",\n \
    \  \"type\" : \"temporary\",\n   \"expires_in\" : 1800,\n   \"id_user\": 1\n}\n\
    ```\nThis service creates a temporarily token, to use in the \"Authorization\"\
    \ header in next calls to the API\n\nThe returned token has a life-time of 30\
    \ minutes, and should be transfered to the API then (cf Permanent Token), so that\
    \ your server can get a permanent access_token.\n\nIt is possible to generate\
    \ a permanent token immediately, by calling the service with the manage_token,\
    \ or by supply parameters client_id and client_secret.\n\n2. /banks or /providers\n\
    ```http\nGET /banks?expand=fields\nAuthorization: Bearer <token>\n```\n```json\n\
    {\n   \"hidden\" : false,\n         \"charged\" : true,\n         \"name\" : \"\
    American Express\",\n         \"id\" : 30,\n         \"fields\" : [\n        \
    \    {\n               \"values\" : [\n                  {\n                 \
    \    \"label\" : \"Particuliers/Professionnels\",\n                     \"value\"\
    \ : \"pp\"\n                  },\n                  {\n                     \"\
    value\" : \"ent\",\n                     \"label\" : \"Entreprises\"\n       \
    \           }\n               ],\n               \"label\" : \"Type de compte\"\
    ,\n               \"regex\" : null,\n               \"name\" : \"website\",\n\
    \               \"type\" : \"list\"\n            },\n            {\n         \
    \      \"type\" : \"password\",\n               \"label\" : \"Code secret\",\n\
    \               \"name\" : \"password\",\n               \"regex\" : \"^[0-9]{6}$\"\
    \n            }\n         ],\n      },\n      ...\n   ],\n   \"total\" : 44,\n\
    }\n```\nYou get a list of connectors, and all associated fields needed to build\
    \ the form at step 3.\nYou can also use that list to show to your user, all available\
    \ banks.\n\n3. /users/me/connections\nMake a POST request and supply the id_bank\
    \ (ID of the chosen bank) or id_provider (ID of provider), and all requested fields\
    \ as key/value parameters.\nFor example:\n```http\nPOST /users/me/connections\n\
    Authorization: Bearer <token>\n-F login=12345678\n-F password=123456\n-F id_bank=59\n\
    ```\nYou can get the following return codes:\n\n|Code           |Description \
    \                                                 |\n|---------------|------------------------------------------------------------\
    \ |\n|200            |The connection has succeed and has been created        \
    \      |\n|202            |It is necessary to provide complementary information.\
    \ This occurs on the first connection on some kind of Boursorama accounts for\
    \ example, where a SMS is sent to the customer. It is necessary to ask the user\
    \ to fill fields requested in the fields, and do a POST again on /users/me/connections/ID,\
    \ with the connection ID in id_connection. |\n|400            |Unable to connect\
    \ to the website, the field error in the JSON can be **websiteUnavailable** or\
    \ **wrongpass**  |\n|403            |Invalid token                           \
    \                     |\n\n4. Activate accounts\nThe accounts the user wants to\
    \ aggregate must be activated before any transaction or investment is retrieved.\n\
    Several accounts can be activated in 1 request by separating the account ids with\
    \ commas.\n```http\nPUT /users/me/connections/<id_connection>/accounts/<id_account>?all\n\
    ```\n\n5. Permanent token\nIf the user validates the share of his accounts, it\
    \ is necessary to transform the temporary code to a permanent access_token (so\
    \ that the user won't expire).\n\nTo do that, make a POST request on /auth/token/access\
    \ with the following parameters:\n|Parameter            |Description         \
    \                                            |\n|---------------------|----------------------------------------------------------------|\n\
    |code                 |The temporarily token which will let you get the access_token\
    \   |\n|client_id            |The ID of your client application              \
    \                 |\n|client_secret        |The secret of your client application\
    \                           |\n\n```json\nPOST /auth/token/access\n\n{\n   \"\
    client_id\" : 17473055,\n   \"client_secret\" : \"54tHJHjvodbANVzaRtcLzlHGXQiOgw80\"\
    ,\n   \"code\" : \"fBqjMZbYddebUGlkR445JKPA6pCoRaGb\"\n}\n```\n```http\nHTTP/1.1\
    \ 200 OK\n\n{\n   \"access_token\" : \"7wBPuFfb1Hod82f1+KNa0AmrkIuQ3h1G\",\n \
    \  \"token_type\":\"Bearer\"\n}\n```\n\n### Update accounts\nAnother important\
    \ call is when a user wants to add/remove connections to banks or providers, or\
    \ to change the password on one of them, it is advised to give him a temporarily\
    \ code from the permanent access_token, with the following call (using the access_token\
    \ as bearer):\n```http\nPOST /auth/token/code\nAuthorization: Bearer <token>\n\
    ```\n```json\n{\n   \"code\" : \"/JiDppWgbmc+5ztHIUJtHl0ynYfw682Z\",\n   \"type\"\
    \ : \"temporary\",\n   \"expires_in\" : 1800,\n}\n```\nIts life-time is 30 minutes,\
    \ and let the browser to list connections and accounts, via `GET /users/me/connections?expand=accounts`\
    \ for example.\n\n To update the password of a connection, you can do a POST on\
    \ the *connection* resource, with the field *password* in the data. The new credentials\
    \ are checked to make sure they are valid, and the return codes are the same as\
    \ when adding a connection.\n\n## Getting the data (Webhooks)\nYou have created\
    \ your users and their connections, now it's time to get the data.\nThere are\
    \ 2 ways to retrieve it, the 2 can be complementary:\n- make regular calls to\
    \ the API\n- use the webhooks (recommended)\n\n### Manual Synchronization\nIt\
    \ is possible to do a manual synchronization of a user. We recommend to use this\
    \ method in case the user wants fresh data after logging in.\n\nTo trigger the\
    \ synchronization, call the API as below:\n`PUT /users/ID/connections`\nThe following\
    \ call is blocking until the synchronization is terminated.\n\nEven if it is not\
    \ recommended, it's possible to fetch synchronously new data. To do that, you\
    \ can use the *expand* parameter:\n` /users/ID/connections?expand=accounts[transactions,investments[type]],subscriptions`\n\
    ```json\n{\n   \"connections\" : [\n      {\n         \"accounts\" : [\n     \
    \       {\n               \"balance\" : 7481.01,\n               \"currency\"\
    \ : {\n                  \"symbol\" : \"\u20AC\",\n                  \"id\" :\
    \ \"EUR\",\n                  \"prefix\" : false\n               },\n        \
    \       \"deleted\" : null,\n               \"display\" : true,\n            \
    \   \"formatted_balance\" : \"7 481,01 \u20AC\",\n               \"iban\" : \"\
    FR76131048379405300290000016\",\n               \"id\" : 17,\n               \"\
    id_connection\" : 7,\n               \"investments\" : [\n                  {\n\
    \                     \"code\" : \"FR0010330902\",\n                     \"description\"\
    \ : \"\",\n                     \"diff\" : -67.86,\n                     \"id\"\
    \ : 55,\n                     \"id_account\" : 19,\n                     \"id_type\"\
    \ : 1,\n                     \"label\" : \"Agressor PEA\",\n                 \
    \    \"portfolio_share\" : 0.48,\n                     \"prev_diff\" : 2019.57,\n\
    \                     \"quantity\" : 7.338,\n                     \"type\" : {\n\
    \                        \"color\" : \"AABBCC\",\n                        \"id\"\
    \ : 1,\n                        \"name\" : \"Fonds action\"\n                \
    \     },\n                     \"unitprice\" : 488.98,\n                     \"\
    unitvalue\" : 479.73,\n                     \"valuation\" : 3520.28\n        \
    \          }\n               ],\n               \"last_update\" : \"2015-07-04\
    \ 15:17:30\",\n               \"name\" : \"Compte ch\xE8que\",\n             \
    \  \"number\" : \"3002900000\",\n               \"transactions\" : [\n       \
    \           {\n                     \"active\" : true,\n                     \"\
    application_date\" : \"2015-06-17\",\n                     \"coming\" : false,\n\
    \                     \"comment\" : null,\n                     \"commission\"\
    \ : null,\n                     \"country\" : null,\n                     \"date\"\
    \ : \"2015-06-18\",\n                     \"date_scraped\" : \"2015-07-04 15:17:30\"\
    ,\n                     \"deleted\" : null,\n                     \"documents_count\"\
    \ : 0,\n                     \"formatted_value\" : \"-16,22 \u20AC\",\n      \
    \               \"id\" : 309,\n                     \"id_account\" : 17,\n   \
    \                  \"id_category\" : 9998,\n                     \"id_cluster\"\
    \ : null,\n                     \"last_update\" : \"2015-07-04 15:17:30\",\n \
    \                    \"new\" : true,\n                     \"original_currency\"\
    \ : null,\n                     \"original_value\" : null,\n                 \
    \    \"original_wording\" : \"FACTURE CB HALL'S BEER\",\n                    \
    \ \"rdate\" : \"2015-06-17\",\n                     \"simplified_wording\" : \"\
    HALL'S BEER\",\n                     \"state\" : \"parsed\",\n               \
    \      \"stemmed_wording\" : \"HALL'S BEER\",\n                     \"type\" :\
    \ \"card\",\n                     \"value\" : -16.22,\n                     \"\
    wording\" : \"HALL'S BEER\"\n                  }\n               ],\n        \
    \       \"type\" : \"checking\"\n            }\n         ],\n         \"error\"\
    \ : null,\n         \"expire\" : null,\n         \"id\" : 7,\n         \"id_user\"\
    \ : 7,\n         \"id_bank\" : 41,\n         \"last_update\" : \"2015-07-04 15:17:31\"\
    \n      }\n   ],\n   \"total\" : 1,\n}\n```\n\n### Background synchronizations\
    \ & Webhooks\nWebhooks are callbacks sent to your server, when an event is triggered\
    \ during a synchronization.\nSynchronizations are automatic, the frequency can\
    \ be set using the configuration key `autosync.frequency`.\nUsing webhooks allows\
    \ you to get the most up-to-date data of your users, after each synchronization.\n\
    \nThe automatic synchronization makes it possible to recover new bank entries,\
    \ or new invoices, at a given frequency.\nYou have the possibility to add webhooks\
    \ on several events, and choose to receive each one on a distinct URL.\nTo see\
    \ the list of available webhooks you can call the endpoint hereunder:\n```\ncurl\
    \ https://demo.biapi.pro/2.0/webhooks_events \\\n  -H 'Authorization: Bearer <token>'\n\
    ```\n\nThe background synchronizations for each user are independent, and their\
    \ plannings are spread over the day so that they do not overload any website.\n\
    \nOnce the synchronization of a user is over, a POST request is sent on the callback\
    \ URL you have defined, including all webhook data.\nA typical json sent to your\
    \ server is as below:\n```http\nPOST /callback HTTP/1.1\nHost: example.org\nContent-Length:\
    \ 959\nAccept-Encoding: gzip, deflate, compress\nAccept: */*\nUser-Agent: Budgea\
    \ API/2.0\nContent-Type: application/json; charset=utf-8\nAuthorization: Bearer\
    \ sl/wuqgD2eOo+4Zf9FjvAz3YJgU+JKsJ\n\n{\n   \"connections\" : [\n      {\n   \
    \      \"accounts\" : [\n            {\n               \"balance\" : 7481.01,\n\
    \               \"currency\" : {\n                  \"symbol\" : \"\u20AC\",\n\
    \                  \"id\" : \"EUR\",\n                  \"prefix\" : false\n \
    \              },\n               \"deleted\" : null,\n               \"display\"\
    \ : true,\n               \"formatted_balance\" : \"7 481,01 \u20AC\",\n     \
    \          \"iban\" : \"FR76131048379405300290000016\",\n               \"id\"\
    \ : 17,\n               \"id_connection\" : 7,\n               \"investments\"\
    \ : [\n                  {\n                     \"code\" : \"FR0010330902\",\n\
    \                     \"description\" : \"\",\n                     \"diff\" :\
    \ -67.86,\n                     \"id\" : 55,\n                     \"id_account\"\
    \ : 19,\n                     \"id_type\" : 1,\n                     \"label\"\
    \ : \"Agressor PEA\",\n                     \"portfolio_share\" : 0.48,\n    \
    \                 \"prev_diff\" : 2019.57,\n                     \"quantity\"\
    \ : 7.338,\n                     \"type\" : {\n                        \"color\"\
    \ : \"AABBCC\",\n                        \"id\" : 1,\n                       \
    \ \"name\" : \"Fonds action\"\n                     },\n                     \"\
    unitprice\" : 488.98,\n                     \"unitvalue\" : 479.73,\n        \
    \             \"valuation\" : 3520.28\n                  }\n               ],\n\
    \               \"last_update\" : \"2015-07-04 15:17:30\",\n               \"\
    name\" : \"Compte ch\xE8que\",\n               \"number\" : \"3002900000\",\n\
    \               \"transactions\" : [\n                  {\n                  \
    \   \"active\" : true,\n                     \"application_date\" : \"2015-06-17\"\
    ,\n                     \"coming\" : false,\n                     \"comment\"\
    \ : null,\n                     \"commission\" : null,\n                     \"\
    country\" : null,\n                     \"date\" : \"2015-06-18\",\n         \
    \            \"date_scraped\" : \"2015-07-04 15:17:30\",\n                   \
    \  \"deleted\" : null,\n                     \"documents_count\" : 0,\n      \
    \               \"formatted_value\" : \"-16,22 \u20AC\",\n                   \
    \  \"id\" : 309,\n                     \"id_account\" : 17,\n                \
    \     \"id_category\" : 9998,\n                     \"id_cluster\" : null,\n \
    \                    \"last_update\" : \"2015-07-04 15:17:30\",\n            \
    \         \"new\" : true,\n                     \"original_currency\" : null,\n\
    \                     \"original_value\" : null,\n                     \"original_wording\"\
    \ : \"FACTURE CB HALL'S BEER\",\n                     \"rdate\" : \"2015-06-17\"\
    ,\n                     \"simplified_wording\" : \"HALL'S BEER\",\n          \
    \           \"state\" : \"parsed\",\n                     \"stemmed_wording\"\
    \ : \"HALL'S BEER\",\n                     \"type\" : \"card\",\n            \
    \         \"value\" : -16.22,\n                     \"wording\" : \"HALL'S BEER\"\
    \n                  }\n               ],\n               \"type\" : \"checking\"\
    \n            }\n         ],\n         \"bank\" : {\n            \"id_weboob\"\
    \ : \"ing\",\n            \"charged\" : true,\n            \"name\" : \"ING Direct\"\
    ,\n            \"id\" : 7,\n            \"hidden\" : false\n         },\n    \
    \     \"error\" : null,\n         \"expire\" : null,\n         \"id\" : 7,\n \
    \        \"id_user\" : 7,\n         \"id_bank\" : 41,\n         \"last_update\"\
    \ : \"2015-07-04 15:17:31\"\n      }\n   ],\n   \"total\" : 1,\n   \"user\" :\
    \ {\n      \"signin\" : \"2015-07-04 15:17:29\",\n      \"id\" : 7,\n      \"\
    platform\" : \"sharedAccess\"\n   }\n}\n```\nThe authentication on the callback\
    \ is made with the access_token of the user (which is a shared secret between\
    \ your server and the Budgea API).\n\nWhen you are in production, it is needed\
    \ to define a HTTPS URL using a valid certificate, delivered by a recognized authority.\
    \ If this is not the case, you can contact us to add your CA (Certificate Authority)\
    \ to our PKI (Public Key Infrastructure).\n\nImportant: it is necessary to send\
    \ back a HTTP 200 code, without what we consider that data is not correctly taken\
    \ into account on your system, and it will be sent again at the next user synchronization.\n\
    \n## Guidelines for production\nNow you should have integrated the API inside\
    \ your application. Make sure your Webhooks URLs are in HTTPS, if so you can enable\
    \ the production state of the API.\n\nTo make things great, here are some good\
    \ practices, please check you have respected them:\n- You have provided to your\
    \ users a way to configure their accounts\n- You have provided to your users a\
    \ way to change their account passwords\n- You consider the **error** field of\
    \ Connections, to alert the user in case the state is **wrongpass**\n- You map\
    \ IDs of Accounts, Subscriptions, Transactions and Documents in your application,\
    \ to be sure to correctly match them\n- When the deleted field is set on a bank\
    \ transaction, you delete it in your database\n- You don't loop on all users to\
    \ launch synchronizations, this might saturate the service\n\nIf you have questions\
    \ about above points, please contact us. Otherwise, you can put into production!\n\
    \n### Going further\nIf you want to raise the bar for your app and add features\
    \ such as the ability to do transfers, get invoices, aggregate patrimony and more,\
    \ please refer to the sections below.\nWe'll discuss complementary APIs building\
    \ upon the aggregation, allowing for the best of financial apps.\n\n## Budgea\
    \ API Pay\nThis API allows for the emition of transfers between the aggregated\
    \ accounts.\nJust like the simple aggregation, BI provides a webview or a protocol\
    \ to follow, to implement this feature.\n\n### API pay protocol\nThis section\
    \ describes how the transfer and recipient protocol work, in case you don't want\
    \ to integrate the webview.\nThe idea is to do following calls client side (with\
    \ AJAX in case of a web application), so that the interaction with the Budgea\
    \ API is transparent.\n\n#### Executing a transfer\n1. /auth/token/code\nIf you\
    \ do calls client side, get a new temporary code for the user, from the access_token.\
    \ This will prevent security issues.\n```\ncurl -d '' \\\n  https://demo.biapi.pro/2.0/auth/token/code\
    \ \\\n  -H 'Authorization: Bearer <token>'\n```\n```json\n{\n   \"code\": \"/JiDppWgbmc+5ztHIUJtHl0ynYfw682Z\"\
    ,\n   \"type\": \"temporary\",\n   \"expires_in\": 1800\n}\n```\nThe returned\
    \ token has a life-time of 30 minutes.\n\n2. /users/me/accounts?able_to_transfer=1\n\
    List all the accounts that can do transfers. Authenticate the call with the code\
    \ you got at step 1.\n```\ncurl https://demo.biapi.pro/2.0/users/me/accounts?able_to_transfer=1\
    \ \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z'\n```\n```json\n\
    {\n  \"accounts\" : [\n      {\n         \"display\" : true,\n         \"balance\"\
    \ : 2893.36,\n         \"id_type\" : 2,\n         \"number\" : \"****1572\",\n\
    \         \"type\" : \"checking\",\n         \"deleted\" : null,\n         \"\
    bic\" : \"BNPAFRPPXXX\",\n         \"bookmarked\" : false,\n         \"coming\"\
    \ : -2702.74,\n         \"id_user\" : 1,\n         \"original_name\" : \"Compte\
    \ de ch\xE8ques\",\n         \"currency\" : {\n            \"symbol\" : \"\u20AC\
    \",\n            \"id\" : \"EUR\",\n            \"prefix\" : false\n         },\n\
    \         \"name\" : \"lol\",\n         \"iban\" : \"FR7630004012550000041157244\"\
    ,\n         \"last_update\" : \"2016-12-28 12:31:04\",\n         \"id\" : 723,\n\
    \         \"formatted_balance\" : \"2893,36 \u20AC\",\n         \"able_to_transfer\"\
    \ : true,\n         \"id_connection\" : 202\n      }\n   ],\n   \"total\" : 1\n\
    }\n```\n\n3. /users/me/accounts/ID/recipients\nList all available recipients for\
    \ a given account.\n```\ncurl https://demo.biapi.pro/2.0/users/me/accounts/723/recipients?limit=1\
    \ \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z'\n```\n```json\n\
    {\n  \"total\" : 27,\n   \"recipients\" : [\n      {\n         \"bank_name\" :\
    \ \"BNP PARIBAS\",\n         \"bic\" : \"BNPAFRPPXXX\",\n         \"category\"\
    \ : \"Interne\",\n         \"deleted\" : null,\n         \"enabled_at\" : \"2016-10-31\
    \ 18:52:53\",\n         \"expire\" : null,\n         \"iban\" : \"FR7630004012550003027641744\"\
    ,\n         \"id\" : 1,\n         \"id_account\" : 1,\n         \"id_target_account\"\
    \ : 2,\n         \"label\" : \"Livret A\",\n         \"last_update\" : \"2016-12-05\
    \ 12:07:24\",\n         \"time_scraped\" : \"2016-10-31 18:52:54\",\n        \
    \ \"webid\" : \"2741588268268091098819849694548441184167285851255682796371\"\n\
    \      }\n   ]\n}\n```\n\n4. /users/me/accounts/ID/recipients/ID/transfers\nCreate\
    \ the transfer\n```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/accounts/1/recipients/1/transfers\
    \ \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F amount=10,\
    \ \\\n  -F label=\"Test virement\", \\\n  -F exec_date=\"2018-09-12\" // optional\n\
    ```\n```json\n{\n   \"account_iban\" : \"FR7630004012550000041157244\",\n   \"\
    amount\" : 10,\n   \"currency\" : {\n      \"id\" : \"EUR\",\n      \"prefix\"\
    \ : false,\n      \"symbol\" : \"\u20AC\"\n   },\n   \"exec_date\" : \"2018-09-12\"\
    ,\n   \"fees\" : null\n   \"formatted_amount\" : \"10,00 \u20AC\",\n   \"id\"\
    \ : 22,\n   \"id_account\" : 1,,\n   \"id_recipient\" : 1,\n   \"label\" : \"\
    Test virement\",\n   \"recipient_iban\" : \"FR7630004012550003027641744\",\n \
    \  \"register_date\" : \"2018-09-12 10:34:59\",\n   \"state\" : \"created\",\n\
    \   \"webid\" : null\n}\n```\n\n5. /users/me/transfers/ID\nExecute the transfer\n\
    ```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/transfers/22 \\\n  -H 'Authorization:\
    \ Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F validated=true\n```\n```json\n\
    {\n   \"account_iban\" : \"FR7630004012550000041157244\",\n   \"amount\" : 10,\n\
    \   \"currency\" : {\n      \"id\" : \"EUR\",\n      \"prefix\" : false,\n   \
    \   \"symbol\" : \"\u20AC\"\n   },\n   \"exec_date\" : \"2016-12-19\",\n   \"\
    fees\" : null,\n   \"fields\" : [\n      {\n         \"label\" : \"Code secret\
    \ BNP Paribas\",\n         \"type\" : \"password\",\n         \"regex\" : \"^[0-9]{6}$\"\
    ,\n         \"name\" : \"password\"\n      }\n   ],\n   \"formatted_amount\" :\
    \ \"10,00 \u20AC\",\n   \"id\" : 22,\n   \"id_account\" : 1,\n   \"id_recipient\"\
    \ : 1,\n   \"label\" : \"Test virement\",\n   \"recipient_iban\" : \"FR7630004012550003027641744\"\
    ,\n   \"register_date\" : \"2016-12-19 10:34:59\",\n   \"state\" : \"created\"\
    ,\n   \"webid\" : null\n}\n```\nHere, an authentication step asks user to enter\
    \ his bank password. The transfer can be validated with:\n\n```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/transfers/22\
    \ \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F validated=true\
    \ \\\n  -F password=\"123456\"\n```\n```json\n{\n   \"account_iban\" : \"FR7630004012550000041157244\"\
    ,\n   \"currency\" : {\n      \"id\" : \"EUR\",\n      \"prefix\" : false,\n \
    \     \"symbol\" : \"\u20AC\"\n   },\n   \"amount\" : 10,\n   \"exec_date\" :\
    \ \"2016-12-19\",\n   \"fees\" : 0,\n   \"formatted_amount\" : \"10,00 \u20AC\"\
    ,\n   \"id\" : 22,\n   \"id_account\" : 1,\n   \"id_recipient\" : 1,\n   \"label\"\
    \ : \"Test virement\",\n   \"recipient_iban\" : \"FR7630004012550003027641744\"\
    ,\n   \"register_date\" : \"2016-12-19 10:34:59\",\n   \"state\" : \"pending\"\
    ,\n   \"webid\" : \"ZZ10C4FKSNP05TK95\"\n}\n```\nThe field state is changed to\
    \ *pending*, telling that the transfer has been correctly executed on the bank.\
    \ A connection synchronization is then launched, to find the bank transaction\
    \ in the movements history. In this case, the transfer state will be changed to\
    \ *done*.\n\n#### Adding a recipient\n1. /auth/token/code\nGet a temporary token\
    \ for the user. Same procedure than step 1 for a transfer.\n\n2. /users/me/accounts?able_to_transfer=1\n\
    List accounts allowing transfers. Same procedure than step 2 for a transfer.\n\
    \n3. /users/me/accounts/ID/recipients/\nAdd a new recipient.\n```\ncurl \\\n \
    \ https://demo.biapi.pro/2.0/users/me/accounts/1/recipients \\\n  -H 'Authorization:\
    \ Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F iban=FR7613048379405300290000355\
    \ \\\n  -F label=\"Papa\", \\\n  -F category=\"Famille\" // optional\n```\n```json\n\
    {\n   \"bank_name\" : \"BNP PARIBAS\",\n   \"bic\" : \"BNPAFRPPXXX\",\n   \"category\"\
    \ : \"Famille\",\n   \"deleted\" : null,\n   \"enabled_at\" : null,\n   \"expire\"\
    \ : \"2017-04-29 16:56:20\",\n   \"fields\" : [\n      {\n         \"label\" :\
    \ \"Veuillez entrer le code re\xE7u par SMS\",\n         \"type\" : \"password\"\
    ,\n         \"regex\" : \"^[0-9]{6}$\",\n         \"name\" : \"sms\"\n      }\n\
    \   ],\n   \"iban\" : \"FR7613048379405300290000355\",\n   \"id\" : 2,\n   \"\
    id_account\" : 1,\n   \"id_target_account\" : null,\n   \"label\" : \"Papa\",\n\
    \   \"last_update\" : \"2017-04-29 16:26:20\",\n   \"time_scraped\" : null,\n\
    \   \"webid\" : null\n}\n```\nIt is necessary to post on the object Recipient\
    \ with the requested fields (here sms), until the add is validated:\n```\ncurl\
    \ \\\n  https://demo.biapi.pro/2.0/users/me/accounts/1/recipients/2 \\\n  -H 'Authorization:\
    \ Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F sms=\"123456\"\n```\n```json\n\
    {\n   \"bank_name\" : \"BNP PARIBAS\",\n   \"bic\" : \"BNPAFRPPXXX\",\n   \"category\"\
    \ : \"Famille\",\n   \"deleted\" : null,\n   \"enabled_at\" : \"2017-05-01 00:00:00\"\
    ,\n   \"expire\" : null,\n   \"iban\" : \"FR7613048379405300290000355\",\n   \"\
    id\" : 2,\n   \"id_account\" : 1,\n   \"id_target_account\" : null,\n   \"label\"\
    \ : \"Papa\",\n   \"last_update\" : \"2017-04-29 16:26:20\",\n   \"time_scraped\"\
    \ : null,\n   \"webid\" : \"2741588268268091098819849694548441184167285851255682796371\"\
    \n}\n```\nIf the field enabled_at is in the future, it means that it isn't possible\
    \ yet to execute a transfer, as the bank requires to wait a validation period.\n\
    \n### API Pay Webview\nThis section describes how to integrate the webview of\
    \ the Budgea Pay API inside your application, to let your users do transfers to\
    \ their recipients.\n\n#### User redirection\nTo redirect the user to the webview,\
    \ it is necessary to build a URI authenticated with a temporary token.\nThis can\
    \ be done from our library, or by calling the endpoint `/auth/token/code` (see\
    \ the protocol section for an example).\nIf the parameter **redirect_uri** is\
    \ supplied, the user will be redirected to that page once the transfer is done.\n\
    \n#### List of pages\nHere are a list a pages you may call to redirect your user\
    \ directly on a page of the process:\n|Path                                 |Description\
    \ of the page                                                           |\n|-------------------------------------|----------------------------------------------------------------------------------|\n\
    |/transfers                           |List Transfers                        \
    \                                            |\n|/transfers/accounts         \
    \         |List emitter accounts                                             \
    \                |\n|/transfers/accounts/id/recipients    |List recipients   \
    \                                                                |\n|/transfers/accounts/id/recipients/id\
    \ |Initialization of a transfer between the account and the recipient        \
    \        |\n|/transfers/id                        |Detail of a given transfer\
    \                                                        |\n\n## Deprecated\n\n\
    This section lists all the deprecated features in Budgea API. The associated date\
    \ is the date of its removal.\n**Do not use them**.\n\n### Key Investments (**2019-06-24**)\n\
    \nAdding a temporary new key \"all_investments\" that will include deleted investments\
    \ in the **webhooks**.\n\n### No automatic expand on User objects (**2019-07-30**)\n\
    In the API responses, by default, User objects won't display the keys \"config\"\
    , \"alert_settings\" and \"invites\" anymore.\nYou will still be able to access\
    \ this data by expanding the request.\nExample: GET /users/me/?expand=alert_settings,config\n\
    \n### Renaming of \"type\" field for jwt tokens (**2019-07-30**)\nFor user's tokens\
    \ in the jwt format, the \"type\" field will be renamed from \"shared_access\"\
    \ to \"sharedAccess\".\n"
  title: Budgea API Documentation
  version: '2.0'
openapi: 3.0.1
paths:
  /account_types:
    get:
      operationId: account_typesGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account_types'
          description: accounttypes
      security:
      - Authorization: []
      summary: Get account types
      tags:
      - Banks
  /account_types/{id_account_type}:
    get:
      operationId: account_typesidAccountTypeGet
      parameters:
      - in: path
        name: id_account_type
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountType'
          description: Successful GET on AccountType resource
      security:
      - Authorization: []
      summary: Get an account type
      tags:
      - Banks
  /admin/jwt:
    post:
      description: This endpoint generates a new jwt manage token. It requires an
        admin manage token to be used<br><br>
      operationId: adminJwtPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                duration:
                  description: 'number of minute before the token expiration (0 for
                    token that won''t expire unless the client application is deleted)
                    (default: 1)'
                  format: int32
                  type: integer
                scope:
                  description: 'scope requested for the token (default: config)'
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthJwtPayload'
          description: ''
      security:
      - Authorization: []
      summary: Generate a jwt manage token
      tags:
      - Authentication
  /auth/confirm:
    post:
      description: <br><br>
      operationId: authConfirmPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                application:
                  description: application in use
                  type: string
                token:
                  description: token received in email
                  type: string
              required:
              - application
              - token
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthConfirm'
          description: ''
      security:
      - Authorization: []
      summary: Confirm email address
      tags:
      - PFM
  /auth/confirmNewEmail:
    post:
      operationId: authConfirmNewEmailPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                token:
                  description: token received by email
                  type: string
              required:
              - token
        required: true
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Confirm new email address
      tags:
      - PFM
  /auth/cookie:
    post:
      operationId: authCookiePost
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                application:
                  description: application name
                  type: string
                password:
                  description: password
                  type: string
                scope:
                  description: scope requested for the token
                  type: string
                username:
                  description: username
                  type: string
              required:
              - application
              - password
              - username
        required: true
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Login with credentials and set as cookie
      tags:
      - PFM
  /auth/init:
    post:
      description: 'This endpoint creates a new temporary token related to a new anonymous
        user.<br><br>It will expire 30 minutes after.<br><br>Note: if you supply client_id
        and client_secret, or if you call this endpoint with the manage_token, the
        token will be permanent.<br><br>'
      operationId: authInitPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                client_id:
                  description: ID of the client
                  type: string
                client_secret:
                  description: secret of the client
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthInit'
          description: ''
      security:
      - Authorization: []
      summary: Create a new anonymous user
      tags:
      - Authentication
  /auth/jwt:
    post:
      description: This endpoint generates a new jwt token for the user. This token
        will last the time in minutes given by the config key auth.default_token_expire
        (permanent if this the parameter expire=False is given)<br><br>
      operationId: authJwtPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                client_id:
                  description: id of the client
                  type: string
                client_secret:
                  description: secret for the client
                  type: string
                expire:
                  description: 'if set to True, the token will expire n minutes after
                    its creation, n being the value of configuration key auth.default_token_expire
                    (default: True)'
                  type: boolean
                id_user:
                  description: user for whom the token has to be generated. If not
                    supplied, a user will be created
                  format: int32
                  type: integer
                scope:
                  description: scope requested for the token
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthJwt'
          description: ''
      security:
      - Authorization: []
      summary: Generate a user jwt token
      tags:
      - Authentication
  /auth/register:
    post:
      description: Create a new user with his email address and password.<br><br><br><br>
      operationId: authRegisterPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                application:
                  description: application in use
                  type: string
                email:
                  description: email address
                  type: string
                notification_token:
                  description: APNS or GCM token to send notifications to device
                  type: string
                password:
                  description: password
                  type: string
                sponsor:
                  description: sponsor code to get advantages
                  type: string
              required:
              - application
              - email
              - password
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthRegister'
          description: ''
      security:
      - Authorization: []
      summary: Register to API
      tags:
      - PFM
  /auth/resendConfirmEmail:
    post:
      description: Sent token can be re-generated as it might be expired. Note that
        requesting email confirmation on already confirmed profile will raise a BadRequest.<br><br>
      operationId: authResendConfirmEmailPost
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Resend an email to confirm email address.
      tags:
      - PFM
  /auth/token:
    delete:
      description: This endpoint removes the token in use.<br><br>
      operationId: authTokenDelete
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Remove user access
      tags:
      - Authentication
      - PFM
    post:
      description: Request a new user token by giving an username and a password.<br><br><br><br>
      operationId: authTokenPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                application:
                  description: application name
                  type: string
                password:
                  description: password
                  type: string
                scope:
                  description: scope requested for the token
                  type: string
                username:
                  description: username
                  type: string
              required:
              - application
              - password
              - username
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
      security:
      - Authorization: []
      summary: Login to API with credentials
      tags:
      - PFM
  /auth/token/access:
    post:
      description: In order to register a new user with the OAuth 2 process, the client
        has to call this endpoint to request a granted access_token with the received
        temporary code.<br><br>
      operationId: authTokenAccessPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                client_id:
                  description: ID of the client
                  type: string
                client_secret:
                  description: secret of the client
                  type: string
                code:
                  description: user's temporary code
                  type: string
                grant_type:
                  description: default is "authorization_code"
                  type: string
                redirect_uri:
                  description: redirect uri used by user
                  type: string
              required:
              - client_id
              - client_secret
              - code
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenAccess'
          description: ''
      security:
      - Authorization: []
      summary: Transform a temporary code to a access_token
      tags:
      - Authentication
  /auth/token/code:
    get:
      description: This endpoint generates a new temporary token for the user.<br><br>In
        case the access_token is used by a trusted device, and you want to let another
        one (for example a web browser) access to user resources, use this service
        to create a token which will expire in 30 minutes.<br><br>
      operationId: authTokenCodeGet
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenCode'
          description: ''
      security:
      - Authorization: []
      summary: Generate a user temporary token
      tags:
      - Authentication
  /banks:
    get:
      operationId: banksGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banks'
          description: banks
      security:
      - Authorization: []
      summary: Get list of connectors
      tags:
      - Connections
      - Banks
      - Providers
  /banks/categories:
    post:
      description: It requires the name of the category to be created<br><br>
      operationId: banksCategoriesPost
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                name:
                  description: name of the category to be created
                  type: string
              required:
              - name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorCategory'
          description: Successful POST on ConnectorCategory resource
      security:
      - Authorization: []
      summary: Create bank categories
      tags:
      - Banks
  /banks/categories/{id_category}:
    delete:
      operationId: banksCategoriesidCategoryDelete
      parameters:
      - in: path
        name: id_category
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorCategory'
          description: Successful DELETE on ConnectorCategory resource
      security:
      - Authorization: []
      summary: Delete the supplied category
      tags:
      - Banks
    post:
      description: Edit the name for the supplied category.<br><br>
      operationId: banksCategoriesidCategoryPost
      parameters:
      - in: path
        name: id_category
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                name:
                  description: new name for the supplied category
                  type: string
              required:
              - name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorCategory'
          description: Successful POST on ConnectorCategory resource
      security:
      - Authorization: []
      summary: Edit a bank categories
      tags:
      - Banks
  /banks/{id_connector}/connections:
    get:
      description: By default, it selects a set of 3 connections.<br><br>
      operationId: banksidConnectorConnectionsGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - description: the length of the connection subset
        in: query
        name: range
        schema:
          type: integer
      - description: to target a specific account type which will be
        in: query
        name: type
        schema:
          type: integer
      - description: require at least N accounts of the targeted
        in: query
        name: occurrences
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connections'
          description: connections
      security:
      - Authorization: []
      summary: Get a subset of id_connection with the largest diversity of account
      tags:
      - Banks
      - Connections
  /banks/{id_connector}/logos:
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      operationId: banksidConnectorLogosGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderLogos'
          description: connectorlogos
      security:
      - Authorization: []
      summary: Get all links to the files associated with this connector.
      tags:
      - Banks
      - Providers
  /banks/{id_connector}/logos/main:
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      operationId: banksidConnectorLogosMainGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderLogos'
          description: connectorlogos
      security:
      - Authorization: []
      summary: Get all links to the files associated with this connector.
      tags:
      - Banks
      - Providers
  /banks/{id_connector}/logos/thumbnail:
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      operationId: banksidConnectorLogosThumbnailGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderLogos'
          description: connectorlogos
      security:
      - Authorization: []
      summary: Get all links to the files associated with this connector.
      tags:
      - Banks
      - Providers
  /banks/{id_connector}/sources:
    get:
      operationId: banksidConnectorSourcesGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderSources'
          description: sources
      security:
      - Authorization: []
      summary: Get list of connector sources
      tags:
      - Connections
      - Banks
      - Providers
  /categories:
    get:
      description: Ressource to get all existing categories<br><br>
      operationId: categoriesGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
          description: categories
      security:
      - Authorization: []
      summary: Get all categories
      tags:
      - Banks
  /categories/keywords:
    post:
      description: 'If the keyword already exists the keyword is not added. Used for
        the categorization of transactions.<br><br>Form params: - id_category (integer):
        a reference towards the category associated with the keyword - keyword (string):
        the searched keyword - income (bool): 1 if the associated category represents
        an income else 0 - priority (integer): sets the priority for the keyword,
        used when categorizing<br><br>'
      operationId: categoriesKeywordsPost
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keyword'
          description: Successful POST on Keyword resource
      security:
      - Authorization: []
      summary: Add a new keyword associated with a category in the database.
      tags:
      - Banks
  /categories/keywords/{id_keyword}:
    delete:
      operationId: categoriesKeywordsidKeywordDelete
      parameters:
      - in: path
        name: id_keyword
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keyword'
          description: Successful DELETE on Keyword resource
      security:
      - Authorization: []
      summary: Delete a particular key-value pair on a transaction.
      tags:
      - Banks
  /categorize:
    post:
      description: 'It requires an array of transaction dictionaries. Any fields of
        transactions that are not required will be kept in the response. The response
        contains the list of transactions with two more fields: id_category and state
        (it indicates how the transaction has been categorized)<br><br>'
      operationId: categorizePost
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                type:
                  description: 'type of the transaction (default: unknown)'
                  type: string
                value:
                  description: value of the transaction
                  format: int32
                  type: integer
                wording:
                  description: label of the transaction
                  type: string
              required:
              - type
              - value
              - wording
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorizeData'
          description: ''
      security:
      - Authorization: []
      summary: categorize transactions without storing them
      tags:
      - Banks
    put:
      operationId: categorizePut
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  balance_min1:
                    format: float
                    type: number
                  balance_min2:
                    format: float
                    type: number
                  enabled:
                    type: boolean
                  expense_max:
                    format: float
                    type: number
                  income_max:
                    format: float
                    type: number
          description: Categorize data
      security:
      - Authorization: []
  /certificate/{type}:
    get:
      operationId: certificatetypeGet
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successful GET on Certificate resource
      security:
      - Authorization: []
      summary: Get the latest certificate of a type
      tags:
      - Authentication
  /clients:
    get:
      operationId: clientsGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clients'
          description: clients
      security:
      - Authorization: []
      summary: List clients
      tags:
      - Administration
    post:
      operationId: clientsPost
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                config:
                  description: custom config about the client
                  type: string
                generate_keys:
                  description: 'if True, generate a rsa pair of keys so the client
                    can be used to generate jwt user tokens (default: False)'
                  type: boolean
                name:
                  description: name of client
                  type: string
                redirect_uris:
                  description: list of allowed redirect uris
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: Successful POST on Client resource
      security:
      - Authorization: []
      summary: Create a client
      tags:
      - Administration
  /clients/{id_client}:
    delete:
      operationId: clientsidClientDelete
      parameters:
      - in: path
        name: id_client
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: Successful DELETE on Client resource
      security:
      - Authorization: []
      summary: Delete a client
      tags:
      - Administration
    get:
      description: If you use the manage_token or a configuration token, you will
        get also the client secret.<br><br>
      operationId: clientsidClientGet
      parameters:
      - in: path
        name: id_client
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: Successful GET on Client resource
      security:
      - Authorization: []
      summary: Get information about a client
      tags:
      - Administration
    put:
      operationId: clientsidClientPut
      parameters:
      - in: path
        name: id_client
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                config:
                  description: custom config about the client
                  type: string
                description:
                  description: text to display as a default description
                  type: string
                description_banks:
                  description: text to display as a description for banks
                  type: string
                description_providers:
                  description: text to display as a description for providers
                  type: string
                generate_keys:
                  description: 'set a rsa key pair for the client, which make it possible
                    to generate a jwt user token using this client. No effect if the
                    client already has a set of keys(default: False)'
                  type: boolean
                name:
                  description: name of client
                  type: string
                primary_color:
                  description: hexadecimal code of the client primary color (e.g F45B9A)
                  type: string
                pro:
                  description: Wether the client should display the company manager
                    page
                  type: boolean
                redirect_uris:
                  description: list of allowed redirect uris
                  type: string
                secondary_color:
                  description: hexadecimal code of the client secondary color (e.g
                    F45B9A)
                  type: string
                secret:
                  description: reset the secret
                  type: boolean
                update_config:
                  description: 'update the custom information about the client instead
                    of replacing the existing one (default: True)'
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: Successful PUT on Client resource
      security:
      - Authorization: []
      summary: Update a client
      tags:
      - Administration
  /clients/{id_client}/logo:
    delete:
      operationId: clientsidClientLogoDelete
      parameters:
      - in: path
        name: id_client
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: Successful DELETE on File resource
      security:
      - Authorization: []
      summary: Delete the client logo
      tags:
      - Administration
    post:
      operationId: clientsidClientLogoPost
      parameters:
      - in: path
        name: id_client
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: Successful POST on File resource
      security:
      - Authorization: []
      summary: Update the client logo
      tags:
      - Administration
  /config:
    get:
      description: <br><br>
      operationId: configGet
      parameters:
      - description: limit the results to keys matching the given value
        in: query
        name: search
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get configuration of the API.
      tags:
      - Administration
    post:
      description: 'Request: { "connection.disable_new": "0", "search": "connection.disable_new"
        }<br><br>'
      operationId: configPost
      parameters:
      - description: limit the results to keys matching the given value
        in: query
        name: search
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                example:
                  connection.disable_new: '0'
                type: object
          description: ''
      security:
      - Authorization: []
      summary: Set a configuration value on the API.
      tags:
      - Administration
  /config/logs:
    get:
      description: <br><br>
      operationId: configLogsGet
      parameters:
      - description: limit the results to keys matching the given value
        in: query
        name: search
        schema:
          type: string
      - description: type of change done on the configuration
        in: query
        name: type
        schema:
          type: string
      - description: minimal date of the change
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date of the change
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigLogs'
          description: configlogs
      security:
      - Authorization: []
      summary: Get configuration change history of the API.
      tags:
      - Administration
  /connections:
    get:
      operationId: connectionsGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connections'
          description: connections
      security:
      - Authorization: []
      summary: Get connections without a user
      tags:
      - Connections
      - Banks
      - Providers
  /connections/{id_connection}/logs:
    get:
      description: Get logs about connections.<br><br>
      operationId: connectionsidConnectionLogsGet
      parameters:
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: state of user
        in: query
        name: state
        schema:
          type: integer
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      - description: ID of a user
        in: query
        name: id_user
        schema:
          type: integer
      - description: ID of a connection
        in: query
        name: id_connection
        schema:
          type: integer
      - description: ID of a connector
        in: query
        name: id_connector
        schema:
          type: integer
      - description: consider only logs for charged connectors
        in: query
        name: charged
        schema:
          type: boolean
      - description: ID of a source
        in: query
        name: id_source
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logs'
          description: connectionlogs
      security:
      - Authorization: []
      summary: Get connection logs
      tags:
      - Connections
      - Banks
      - Providers
  /connections/{id_connection}/sources:
    get:
      operationId: connectionsidConnectionSourcesGet
      parameters:
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSources'
          description: sources
      security:
      - Authorization: []
      summary: Get connection sources
      tags:
      - Connections
      - Banks
      - Providers
  /connections/{id_connection}/sources/{id_source}:
    delete:
      description: This will make it so the specified source will not be synchronized
        anymore.<br><br>
      operationId: connectionsidConnectionSourcesidSourceDelete
      parameters:
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_source
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSource'
          description: Successful DELETE on ConnectionSource resource
      security:
      - Authorization: []
      summary: Disable a connection source
      tags:
      - Connections
      - Banks
      - Providers
    post:
      description: This will make it so the specified source will be able to be synchronized.<br><br>
      operationId: connectionsidConnectionSourcesidSourcePost
      parameters:
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_source
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSource'
          description: Successful POST on ConnectionSource resource
      security:
      - Authorization: []
      summary: Enable connection source
      tags:
      - Connections
      - Banks
      - Providers
    put:
      description: This will make it so the specified source will be able to be synchronized.<br><br>
      operationId: connectionsidConnectionSourcesidSourcePut
      parameters:
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_source
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSource'
          description: Successful PUT on ConnectionSource resource
      security:
      - Authorization: []
      summary: Enable connection source
      tags:
      - Connections
      - Banks
      - Providers
  /connectors:
    get:
      operationId: connectorsGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connectors'
          description: connectors
      security:
      - Authorization: []
      summary: Get list of connectors
      tags:
      - Connections
      - Banks
      - Providers
    post:
      description: Send a request to add a new connector<br><br>
      operationId: connectorsPost
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                comment:
                  description: Optionnal comment
                  type: string
                email:
                  description: Email of the user
                  type: string
                login:
                  description: Users login
                  type: string
                name:
                  description: Name of the bank or provider
                  type: string
                password:
                  description: Users password
                  type: string
                sendmail:
                  description: if set, send an email to user
                  type: boolean
                types:
                  description: Type of connector, eg. banks or providers
                  type: string
                url:
                  description: Url of the bank
                  type: string
              required:
              - login
              - name
              - password
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connector'
          description: Successful POST on Connector resource
      security:
      - Authorization: []
      summary: Request a new connector
      tags:
      - Connections
      - Banks
      - Providers
    put:
      operationId: connectorsPut
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                hidden:
                  description: to enable  or disable connector (bank or provider)
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connector'
          description: Successful PUT on Connector resource
      security:
      - Authorization: []
      summary: Enable/disable several connectors
      tags:
      - Banks
  /connectors/{id_connector}:
    put:
      description: <br><br>
      operationId: connectorsidConnectorPut
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                auth_mechanism:
                  description: the authentication mechanism to use for this connector
                  type: string
                hidden:
                  description: to enable  or disable connector (bank or provider)
                  type: boolean
                id_categories:
                  description: one or several comma separated categories to map to
                    the given connector (or null to map no category)
                  type: string
                sync_frequency:
                  description: Allows you to overload global sync_frequency param
                  format: int32
                  type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connector'
          description: Successful PUT on Connector resource
      security:
      - Authorization: []
      summary: Edit the provided connector
      tags:
      - Banks
  /connectors/{id_connector}/logos:
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      operationId: connectorsidConnectorLogosGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderLogos'
          description: connectorlogos
      security:
      - Authorization: []
      summary: Get all links to the files associated with this connector.
      tags:
      - Banks
      - Providers
    post:
      description: 'This endpoint creates a connector logo. You can either pass a
        file to as a parameter to insert and link it with the connector or pass an
        id_file to link a connector with an existing file. Will fail if the file is
        already linked with that connector.<br><br>Form params: - id_file (integer):
        The id of the file to link with that connector. - img (string): Path to the
        image to link with that connector.<br><br>'
      operationId: connectorsidConnectorLogosPost
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorLogo'
          description: Successful POST on ConnectorLogo resource
      security:
      - Authorization: []
      summary: Create a connector Logo
      tags:
      - Banks
      - Providers
    put:
      description: 'This endpoint creates or update a connector logo. This logo is
        a mapping between a file (/file route) and a connector (/connectors route)
        or a provider (/providers route).<br><br>Form params: - id_file (integer):
        The id of the file to link with that connector.<br><br>'
      operationId: connectorsidConnectorLogosPut
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorLogo'
          description: Successful PUT on ConnectorLogo resource
      security:
      - Authorization: []
      summary: Create or Update a connector Logo
      tags:
      - Banks
      - Providers
  /connectors/{id_connector}/logos/main:
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      operationId: connectorsidConnectorLogosMainGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderLogos'
          description: connectorlogos
      security:
      - Authorization: []
      summary: Get all links to the files associated with this connector.
      tags:
      - Banks
      - Providers
  /connectors/{id_connector}/logos/thumbnail:
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      operationId: connectorsidConnectorLogosThumbnailGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderLogos'
          description: connectorlogos
      security:
      - Authorization: []
      summary: Get all links to the files associated with this connector.
      tags:
      - Banks
      - Providers
  /connectors/{id_connector}/logos/{id_logo}:
    delete:
      operationId: connectorsidConnectorLogosidLogoDelete
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: path
        name: id_logo
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorLogo'
          description: Successful DELETE on ConnectorLogo resource
      security:
      - Authorization: []
      summary: Delete a single Logo object.
      tags:
      - Banks
      - Providers
    put:
      description: 'This endpoint creates or update a connector logo. This logo is
        a mapping between a file (/file route) and a connector (/connectors route)
        or a provider (/providers route).<br><br>Form params: - id_file (integer):
        The id of the file to link with that connector.<br><br>'
      operationId: connectorsidConnectorLogosidLogoPut
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: path
        name: id_logo
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorLogo'
          description: Successful PUT on ConnectorLogo resource
      security:
      - Authorization: []
      summary: Create or Update a connector Logo.
      tags:
      - Banks
      - Providers
  /connectors/{id_connector}/sources:
    get:
      operationId: connectorsidConnectorSourcesGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderSources'
          description: sources
      security:
      - Authorization: []
      summary: Get list of connector sources
      tags:
      - Connections
      - Banks
      - Providers
  /connectors/{id_connector}/sources/{id_source}:
    put:
      operationId: connectorsidConnectorSourcesidSourcePut
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: path
        name: id_source
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                auth_mechanism:
                  description: the authentication mechanism to use for this connector
                    source
                  type: string
                disabled:
                  description: to enable or disable connector source
                  format: date-time
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSource'
          description: Successful PUT on ConnectorSource resource
      security:
      - Authorization: []
      summary: Edit the provided connector source
      tags:
      - Connections
      - Banks
      - Providers
  /documenttypes:
    get:
      operationId: documenttypesGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documenttypes'
          description: documenttypes
      security:
      - Authorization: []
      summary: Get document types
      tags:
      - Providers
      - Documents
  /documenttypes/{id_documenttype}:
    put:
      description: Change value of a document type.<br><br>
      operationId: documenttypesidDocumenttypePut
      parameters:
      - in: path
        name: id_documenttype
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                attacheable:
                  description: If true, documents of this type can be attached to
                    a transaction, and have amount related meta-data
                  format: int32
                  type: integer
                name:
                  description: Displayed name of document type
                  type: string
              required:
              - attacheable
              - name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
          description: Successful PUT on DocumentType resource
      security:
      - Authorization: []
      summary: Edit a document type
      tags:
      - Providers
      - Documents
  /finance/securities:
    get:
      operationId: financeSecuritiesGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinanceSecurities'
          description: securities
      security:
      - Authorization: []
      summary: Get securities
      tags:
      - Wealth
  /finance/securities/{id_security}/history:
    get:
      description: Get logs about connections.<br><br>
      operationId: financeSecuritiesidSecurityHistoryGet
      parameters:
      - in: path
        name: id_security
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get connection logs
      tags:
      - Wealth
  /hash:
    delete:
      description: deletes all connections of the user given his hash<br><br>
      operationId: hashDelete
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Delete the user's connections
      tags:
      - Users management
      - PFM
      - Authentication
  /invoicing:
    get:
      description: You can get all the invoicing data or just specific ones by using
        the available parameters.<br><br>If no parameters are specified, no invoicing
        data is returned.<br><br>
      operationId: invoicingGet
      parameters:
      - description: minimal date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: the number of user synchronized during the period
        in: query
        name: users_synced
        schema:
          type: string
      - description: the number of user of the Bank API synchronized during the period
        in: query
        name: users_bank
        schema:
          type: string
      - description: ' the number of user of the Bill API synchronized during the
          period'
        in: query
        name: users_bill
        schema:
          type: string
      - description: the number of accounts synchronized during the period
        in: query
        name: accounts_synced
        schema:
          type: string
      - description: the number of subscriptions synchronized during the period
        in: query
        name: subscriptions_synced
        schema:
          type: string
      - description: the number of connections synchronized during the period
        in: query
        name: connections_synced
        schema:
          type: string
      - description: the number of Bank API connections synchronized during the period
        in: query
        name: connections_account
        schema:
          type: string
      - description: the number of transfers done during the period
        in: query
        name: transfers_synced
        schema:
          type: string
      - description: get all the invoicing data at once
        in: query
        name: all
        schema:
          type: string
      - description: get full ids list instead of numbers
        in: query
        name: detail
        schema:
          type: string
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get invoicing data for a given period (default is the current month).
      tags:
      - Banks
  /logs:
    get:
      description: Get logs about connections.<br><br>
      operationId: logsGet
      parameters:
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: state of user
        in: query
        name: state
        schema:
          type: integer
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      - description: ID of a user
        in: query
        name: id_user
        schema:
          type: integer
      - description: ID of a connection
        in: query
        name: id_connection
        schema:
          type: integer
      - description: ID of a connector
        in: query
        name: id_connector
        schema:
          type: integer
      - description: consider only logs for charged connectors
        in: query
        name: charged
        schema:
          type: boolean
      - description: ID of a source
        in: query
        name: id_source
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logs'
          description: connectionlogs
      security:
      - Authorization: []
      summary: Get connection logs
      tags:
      - Connections
      - Banks
      - Providers
  /merchants:
    get:
      operationId: merchantsGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clients'
          description: clients
      security:
      - Authorization: []
      summary: List clients
      tags:
      - Administration
    post:
      operationId: merchantsPost
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                iban:
                  description: payments initiated by this merchant will be done to
                    this IBAN
                  type: string
                name:
                  description: name of merchant
                  type: string
                redirect_uris:
                  description: list of allowed redirect uris
                  type: string
              required:
              - iban
              - name
              - redirect_uris
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: Successful POST on Client resource
      security:
      - Authorization: []
      summary: Create a merchant. Needs a user identified in bearer to be used
      tags:
      - Administration
  /merchants/{id_client}/logo:
    delete:
      operationId: merchantsidClientLogoDelete
      parameters:
      - in: path
        name: id_client
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: Successful DELETE on File resource
      security:
      - Authorization: []
      summary: Delete the client logo
      tags:
      - Administration
    post:
      operationId: merchantsidClientLogoPost
      parameters:
      - in: path
        name: id_client
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: Successful POST on File resource
      security:
      - Authorization: []
      summary: Update the client logo
      tags:
      - Administration
  /monitoring:
    get:
      operationId: monitoringGet
      parameters:
      - description: 'number on days on which stats on synchronization have to be
          done per worker (Default: 1)'
        in: query
        name: period
        schema:
          type: integer
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: get performances stats on this instance
      tags:
      - Administration
  /ocr:
    post:
      description: Post an image and apply OCR on it to obtain found meta-data.<br><br>
      operationId: ocrPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_transaction:
                  description: Transaction used to help OCR to find data
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
              required:
              - file
        required: true
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Post an image with OCR
      tags:
      - OCR
      - Providers
      - Documents
  /oidc/whitelist:
    post:
      description: It requires the authorized redirect uri to be created<br><br>
      operationId: oidcWhitelistPost
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                redirect_uri:
                  description: authorized redirect uri to be created
                  type: string
              required:
              - redirect_uri
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OidcWhitelist'
          description: Successful POST on OidcWhitelist resource
      security:
      - Authorization: []
      summary: Adds an authorized redirect uri
      tags:
      - OIDC
  /oidc/whitelist/{id_whitelist}:
    delete:
      operationId: oidcWhitelistidWhitelistDelete
      parameters:
      - in: path
        name: id_whitelist
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OidcWhitelist'
          description: Successful DELETE on OidcWhitelist resource
      security:
      - Authorization: []
      summary: Delete the supplied authorized redirect uri
      tags:
      - OIDC
    post:
      description: Edit the uri for the supplied authorized redirect uri.<br><br>
      operationId: oidcWhitelistidWhitelistPost
      parameters:
      - in: path
        name: id_whitelist
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                redirect_uri:
                  description: new authorized redirect uri
                  type: string
              required:
              - redirect_uri
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OidcWhitelist'
          description: Successful POST on OidcWhitelist resource
      security:
      - Authorization: []
      summary: Edit a authorized redirect uri
      tags:
      - OIDC
  /providers:
    get:
      operationId: providersGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Providers'
          description: providers
      security:
      - Authorization: []
      summary: Get list of connectors
      tags:
      - Connections
      - Banks
      - Providers
  /providers/{id_connector}/connections:
    get:
      description: By default, it selects a set of 3 connections.<br><br>
      operationId: providersidConnectorConnectionsGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - description: the length of the connection subset
        in: query
        name: range
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connections'
          description: connections
      security:
      - Authorization: []
      summary: Get a random subset of provider's id_connection
      tags:
      - Banks
      - Connections
  /providers/{id_connector}/logos:
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      operationId: providersidConnectorLogosGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderLogos'
          description: connectorlogos
      security:
      - Authorization: []
      summary: Get all links to the files associated with this connector.
      tags:
      - Banks
      - Providers
  /providers/{id_connector}/logos/main:
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      operationId: providersidConnectorLogosMainGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderLogos'
          description: connectorlogos
      security:
      - Authorization: []
      summary: Get all links to the files associated with this connector.
      tags:
      - Banks
      - Providers
  /providers/{id_connector}/logos/thumbnail:
    get:
      description: This endpoint returns all links to files associated with this connector.<br><br>
      operationId: providersidConnectorLogosThumbnailGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderLogos'
          description: connectorlogos
      security:
      - Authorization: []
      summary: Get all links to the files associated with this connector.
      tags:
      - Banks
      - Providers
  /providers/{id_connector}/sources:
    get:
      operationId: providersidConnectorSourcesGet
      parameters:
      - in: path
        name: id_connector
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderSources'
          description: sources
      security:
      - Authorization: []
      summary: Get list of connector sources
      tags:
      - Connections
      - Banks
      - Providers
  /terms:
    get:
      operationId: termsGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terms'
          description: termsofservices
      security:
      - Authorization: []
      summary: Return the current terms and the content of the associated file
      tags:
      - Terms
    post:
      operationId: termsPost
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file_content:
                  description: file containing the terms, optional
                  format: binary
                  type: string
                language:
                  description: 'two letters code of the language of the inserted terms
                    if provided. default: ''fr'''
                  type: string
                version:
                  description: Number of version
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsOfService'
          description: Successful POST on TermsOfService resource
      security:
      - Authorization: []
      summary: Register a version of 'Terms of Service' in database
      tags:
      - Terms
  /terms/{id_term}:
    post:
      operationId: termsidTermPost
      parameters:
      - in: path
        name: id_term
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file_content:
                  description: file containing the terms
                  format: binary
                  type: string
                language:
                  description: two letter code of the language to inserted
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsOfService'
          description: Successful POST on TermsOfService resource
      security:
      - Authorization: []
      summary: Add terms content for a language. Only for the active terms, there
        is no use to update obsolete terms
      tags:
      - Terms
  /test/sync:
    post:
      description: It can be used to test receiving data on your webhooks.<br><br>
      operationId: testSyncPost
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Test synchronization on a random connection.
      tags:
      - Administration
  /test/webhooks:
    post:
      description: It can be used to test receiving data on your webhooks.<br><br>
      operationId: testWebhooksPost
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Test synchronization on a random connection.
      tags:
      - Administration
  /users:
    get:
      operationId: usersGet
      parameters:
      - description: searches a user by mail (if it contains no '@', '@biapi.pro'
          will be added at the end)
        in: query
        name: search
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: users
      security:
      - Authorization: []
      summary: Get users
      tags:
      - Users management
  /users/{id_user}:
    delete:
      description: This endpoint deletes the user.<br><br>
      operationId: usersidUserDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful DELETE on User resource
      security:
      - Authorization: []
      summary: Delete the user
      tags:
      - Authentication
      - Users management
    get:
      operationId: usersidUserGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful GET on User resource
      security:
      - Authorization: []
      summary: Get a user
      tags:
      - Users management
      - PFM
      - Authentication
  /users/{id_user}/account_types:
    get:
      operationId: usersidUserAccountTypesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account_types'
          description: accounttypes
      security:
      - Authorization: []
      summary: Get account types
      tags:
      - Banks
  /users/{id_user}/account_types/{id_account_type}:
    get:
      operationId: usersidUserAccountTypesidAccountTypeGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account_type
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountType'
          description: Successful GET on AccountType resource
      security:
      - Authorization: []
      summary: Get an account type
      tags:
      - Banks
  /users/{id_user}/accounts:
    delete:
      operationId: usersidUserAccountsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful DELETE on Account resource
      security:
      - Authorization: []
      summary: Delete all accounts
      tags:
      - Banks
    get:
      operationId: usersidUserAccountsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccounts'
          description: accounts
      security:
      - Authorization: []
      summary: Get accounts list.
      tags:
      - Banks
    post:
      description: This endpoint creates an account related to a connection or not.<br><br>
      operationId: usersidUserAccountsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                balance:
                  description: balance of account
                  format: float
                  type: number
                iban:
                  description: IBAN of account
                  type: string
                id_connection:
                  description: the connection to attach to the account
                  format: int32
                  type: integer
                id_currency:
                  description: 'the currency of the account (default: ''EUR'')'
                  type: string
                name:
                  description: name of account
                  type: string
                number:
                  description: number of account
                  type: string
              required:
              - name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful POST on Account resource
      security:
      - Authorization: []
      summary: Create an account
      tags:
      - Banks
    put:
      operationId: usersidUserAccountsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful PUT on Account resource
      security:
      - Authorization: []
      summary: Update many accounts at once
      tags:
      - Banks
  /users/{id_user}/accounts/{id_account}:
    delete:
      description: It deletes a specific account.<br><br>
      operationId: usersidUserAccountsidAccountDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful DELETE on Account resource
      security:
      - Authorization: []
      summary: Delete an account.
      tags:
      - Banks
    put:
      description: It updates a specific account<br><br>
      operationId: usersidUserAccountsidAccountPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                balance:
                  description: Balance of the account
                  format: float
                  type: number
                bookmarked:
                  description: If the account is bookmarked
                  type: boolean
                disabled:
                  description: If the account is disabled (not synchronized)
                  type: boolean
                display:
                  description: If the account is displayed
                  type: boolean
                iban:
                  description: IBAN of the account
                  type: string
                name:
                  description: Label of the account
                  type: string
                usage:
                  description: 'Usage of the account : PRIV, ORGA or ASSO'
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful PUT on Account resource
      security:
      - Authorization: []
      summary: Update an account
      tags:
      - Banks
  /users/{id_user}/accounts/{id_account}/balances:
    get:
      description: Get balance (income/outcome/balance) of enabled accounts for the
        given period.<br><br>By default, min_date and max_date are the current month,
        and period is a single month.<br><br>The period is composed with units (days,
        months, years) and numbers. You can give for example "1month", "15days", "1year6months",
        etc.<br><br>
      operationId: usersidUserAccountsidAccountBalancesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximal (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: 'split output with the given period (default: month)'
        in: query
        name: period
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBalances'
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get balances of accounts
      tags:
      - PFM
  /users/{id_user}/accounts/{id_account}/categories:
    get:
      description: Ressource to get categories for the user's transactions<br><br>
      operationId: usersidUserAccountsidAccountCategoriesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get the category
      tags:
      - Banks
  /users/{id_user}/accounts/{id_account}/delta:
    get:
      description: Get account delta between sums of transactions and difference of
        account balance for the given period.<br><br>
      operationId: usersidUserAccountsidAccountDeltaGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - description: minimal date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get deltas of accounts
      tags:
      - Banks
  /users/{id_user}/accounts/{id_account}/investments:
    get:
      operationId: usersidUserAccountsidAccountInvestmentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvestments'
          description: investments
      security:
      - Authorization: []
      summary: Get investments
      tags:
      - Wealth
  /users/{id_user}/accounts/{id_account}/investments/{id_investment}/history:
    get:
      operationId: usersidUserAccountsidAccountInvestmentsidInvestmentHistoryGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_investment
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccountHistory'
          description: investmentvalues
      security:
      - Authorization: []
      summary: Get investment values
      tags:
      - Wealth
  /users/{id_user}/accounts/{id_account}/investments/{id_investment}/pockets:
    get:
      operationId: usersidUserAccountsidAccountInvestmentsidInvestmentPocketsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_investment
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPockets'
          description: pockets
      security:
      - Authorization: []
      summary: Get pockets
      tags:
      - Wealth
  /users/{id_user}/accounts/{id_account}/investments/{id_investment}/security/history:
    get:
      description: Get logs about connections.<br><br>
      operationId: usersidUserAccountsidAccountInvestmentsidInvestmentSecurityHistoryGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_investment
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get connection logs
      tags:
      - Wealth
  /users/{id_user}/accounts/{id_account}/logs:
    get:
      description: Get logs of account. By default, it selects logs for the last month.
        You can use "min_date" and "max_date" to change boundary dates.<br><br>
      operationId: usersidUserAccountsidAccountLogsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccountLogs'
          description: accountlogs
      security:
      - Authorization: []
      summary: Get accounts logs.
      tags:
      - Banks
  /users/{id_user}/accounts/{id_account}/operationsalert:
    get:
      description: <br><br>
      operationId: usersidUserAccountsidAccountOperationsalertGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOperationsalert'
          description: useralerts
      security:
      - Authorization: []
      summary: Get a list of configurated alerts
      tags:
      - PFM
    post:
      operationId: usersidUserAccountsidAccountOperationsalertPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date_range:
                  description: (number of days) range on which the analysis has to
                    be done
                  format: int32
                  type: integer
                expense_max:
                  description: capital loss thresholds
                  format: int32
                  type: integer
                income_max:
                  description: capital gain thresholds
                  format: int32
                  type: integer
                type:
                  description: 'parameter to choose the scope of the alert. accepted:
                    transactions, investements'
                  type: string
                value_type:
                  description: 'whether the threshold is given in absolut value or
                    percent. accepted: percent, flat'
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlert'
          description: Successful POST on UserAlert resource
      security:
      - Authorization: []
      summary: Create an alert on transactions or investemens of a given user
      tags:
      - PFM
  /users/{id_user}/accounts/{id_account}/operationsalert/{id_operationsalert}:
    delete:
      description: <br><br>
      operationId: usersidUserAccountsidAccountOperationsalertidOperationsalertDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_operationsalert
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlert'
          description: Successful DELETE on UserAlert resource
      security:
      - Authorization: []
      summary: Delete an alert on transactions or investemens
      tags:
      - PFM
    put:
      operationId: usersidUserAccountsidAccountOperationsalertidOperationsalertPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_operationsalert
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date_range:
                  description: (number of days) range on which the analysis has to
                    be done
                  format: int32
                  type: integer
                expense_max:
                  description: capital loss thresholds
                  format: int32
                  type: integer
                income_max:
                  description: capital gain thresholds
                  format: int32
                  type: integer
                type:
                  description: 'parameter to choose the scope of the alert. accepted:
                    transactions, investements'
                  type: string
                value_type:
                  description: 'whether the threshold is given in absolut value or
                    percent. accepted: percent, flat'
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlert'
          description: Successful PUT on UserAlert resource
      security:
      - Authorization: []
      summary: Edit an alert on transactions or investemens
      tags:
      - PFM
  /users/{id_user}/accounts/{id_account}/pockets:
    get:
      operationId: usersidUserAccountsidAccountPocketsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPockets'
          description: pockets
      security:
      - Authorization: []
      summary: Get pockets
      tags:
      - Wealth
  /users/{id_user}/accounts/{id_account}/recipients:
    get:
      operationId: usersidUserAccountsidAccountRecipientsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRecipients'
          description: recipients
      security:
      - Authorization: []
      summary: Returns the list of recipients.
      tags:
      - Transfers
    post:
      description: if config key transfer.recipient.iban_white_list.enabled is set
        to 1, recipients whose IBAN are not from countries codes contained in transfer.recipient.iban_white_list.entries
        will be deleted<br><br>
      operationId: usersidUserAccountsidAccountRecipientsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - description: if true, do synchronization in background
        in: query
        name: background
        schema:
          type: boolean
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                iban:
                  description: iban of recipient
                  type: string
                label:
                  description: label of recipient
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
          description: Successful POST on Recipient resource
      security:
      - Authorization: []
      summary: Add a recipient.
      tags:
      - Recipients
  /users/{id_user}/accounts/{id_account}/recipients/{id_recipient}:
    post:
      operationId: usersidUserAccountsidAccountRecipientsidRecipientPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - description: if true, do synchronization in background
        in: query
        name: background
        schema:
          type: boolean
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
          description: Successful POST on Recipient resource
      security:
      - Authorization: []
      summary: Continue addition of a recipient.
      tags:
      - Transfers
  /users/{id_user}/accounts/{id_account}/recipients/{id_recipient}/transfers:
    get:
      operationId: usersidUserAccountsidAccountRecipientsidRecipientTransfersGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransfers'
          description: transfers
      security:
      - Authorization: []
      summary: Get transfers
      tags:
      - Transfers
    post:
      operationId: usersidUserAccountsidAccountRecipientsidRecipientTransfersPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                amount:
                  description: amount of transfer
                  format: float
                  type: number
                exec_date:
                  description: excution date of transfer
                  format: date
                  type: string
                label:
                  description: reason of transfer
                  type: string
              required:
              - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Create a transfer object.
      tags:
      - Transfers
  /users/{id_user}/accounts/{id_account}/recipients/{id_recipient}/transfers/{id_transfer}:
    delete:
      description: It is possible to cancel only a transfer in state 'created'.<br><br>
      operationId: usersidUserAccountsidAccountRecipientsidRecipientTransfersidTransferDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful DELETE on Transfer resource
      security:
      - Authorization: []
      summary: Cancel a transfer.
      tags:
      - Transfers
    post:
      operationId: usersidUserAccountsidAccountRecipientsidRecipientTransfersidTransferPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_recipient:
                  description: set the recipient of the transfer
                  format: int32
                  type: integer
                validated:
                  description: set it to initialize transfer on the bank website.
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Execute or edit a Transfer.
      tags:
      - Transfers
  /users/{id_user}/accounts/{id_account}/sources:
    get:
      operationId: usersidUserAccountsidAccountSourcesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSources'
          description: sources
      security:
      - Authorization: []
      summary: Get account sources
      tags:
      - Banks
  /users/{id_user}/accounts/{id_account}/transactions:
    delete:
      operationId: usersidUserAccountsidAccountTransactionsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Successful DELETE on Transaction resource
      security:
      - Authorization: []
      summary: Delete transactions
      tags:
      - Banks
    get:
      description: Get list of transactions.<br><br>By default, it selects transactions
        for the last month. You can use "min_date" and "max_date" to change boundary
        dates.<br><br>
      operationId: usersidUserAccountsidAccountTransactionsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: filter on income or expenditures
        in: query
        name: income
        schema:
          type: boolean
      - description: display only deleted transactions
        in: query
        name: deleted
        schema:
          type: boolean
      - description: display all transactions, including deleted ones
        in: query
        name: all
        schema:
          type: boolean
      - description: get only transactions updated after the specified datetime
        in: query
        name: last_update
        schema:
          format: date-time
          type: string
      - description: filter transactions containing the given string
        in: query
        name: wording
        schema:
          type: string
      - description: minimal (inclusive) value
        in: query
        name: min_value
        schema:
          format: float
          type: number
      - description: maximum (inclusive) value
        in: query
        name: max_value
        schema:
          format: float
          type: number
      - description: search in labels, dates, values and categories
        in: query
        name: search
        schema:
          type: string
      - description: "\"XX|-XX\" or \"\xB1XX\""
        in: query
        name: value
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransactions'
          description: transactions
      security:
      - Authorization: []
      summary: Get transactions
      tags:
      - Banks
    post:
      description: Create transactions for the supplied account or the account whose
        id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>
      operationId: usersidUserAccountsidAccountTransactionsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active:
                  description: '1 if the transaction should be taken into account
                    by pfm services (default: 1)'
                  type: boolean
                coming:
                  description: '1 if the transaction has already been debited (default:
                    0)'
                  type: boolean
                date:
                  description: date of the transaction
                  format: date
                  type: string
                date_scraped:
                  description: 'date on which the transaction has been found for the
                    first time. YYYY-MM-DD HH:MM:SS(default: now)'
                  format: date-time
                  type: string
                id_account:
                  description: account of the transaction. If not supplied, it has
                    to be given in the route
                  format: int32
                  type: integer
                original_wording:
                  description: label of the transaction
                  type: string
                rdate:
                  description: 'realisation date of the transaction (default: value
                    of date)'
                  format: date
                  type: string
                state:
                  description: 'nature of the transaction (default: new)'
                  type: string
                type:
                  description: 'type of the transaction (default: unknown)'
                  type: string
                value:
                  description: vallue of the transaction
                  format: int32
                  type: integer
              required:
              - date
              - original_wording
              - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Successful POST on Transaction resource
      security:
      - Authorization: []
      summary: Create transactions
      tags:
      - Banks
  /users/{id_user}/accounts/{id_account}/transactions/{id_transaction}:
    put:
      operationId: usersidUserAccountsidAccountTransactionsidTransactionPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active:
                  description: if false, transaction isn't considered in analyzisis
                    endpoints (like /balances)
                  type: boolean
                application_date:
                  description: change application date of the transaction
                  format: date
                  type: string
                comment:
                  description: change comment
                  type: string
                id_category:
                  description: ID of the associated category
                  format: int32
                  type: integer
                wording:
                  description: user rewording of the transaction
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Successful PUT on Transaction resource
      security:
      - Authorization: []
      summary: Edit a transaction meta-data
      tags:
      - Banks
  /users/{id_user}/accounts/{id_account}/transactions/{id_transaction}/documents:
    delete:
      operationId: usersidUserAccountsidAccountTransactionsidTransactionDocumentsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete documents
      tags:
      - Providers
      - Documents
    get:
      description: Get list of documents<br><br>
      operationId: usersidUserAccountsidAccountTransactionsidTransactionDocumentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: minimal (inclusive) amount
        in: query
        name: min_amount
        schema:
          format: float
          type: number
      - description: maximumd (inclusive) amount
        in: query
        name: max_amount
        schema:
          format: float
          type: number
      - description: minimal (inclusive) timestamp
        in: query
        name: min_timestamp
        schema:
          format: float
          type: number
      - description: maximum (inclusive) timestamp
        in: query
        name: max_timestamp
        schema:
          format: float
          type: number
      - description: filter with a document type
        in: query
        name: id_type
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDocuments'
          description: documents
      security:
      - Authorization: []
      summary: Get documents
      tags:
      - Providers
      - Documents
    post:
      description: Add a new document<br><br>
      operationId: usersidUserAccountsidAccountTransactionsidTransactionDocumentsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_ocr:
                  description: Related OCR process
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  type: boolean
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  type: boolean
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
              required:
              - date
              - duedate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful POST on Document resource
      security:
      - Authorization: []
      summary: Add a new document
      tags:
      - Providers
      - Documents
    put:
      operationId: usersidUserAccountsidAccountTransactionsidTransactionDocumentsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_document:
                  description: id of the document you want to attach the file to
                  format: int32
                  type: integer
              required:
              - id_document
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Attach an existing document to a transaction or a transactions_cluster
      tags:
      - Providers
      - Documents
  /users/{id_user}/accounts/{id_account}/transactions/{id_transaction}/documents/{id_document}:
    delete:
      operationId: usersidUserAccountsidAccountTransactionsidTransactionDocumentsidDocumentDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Providers
      - Documents
    put:
      description: Edit meta-data of a specific document.
      operationId: usersidUserAccountsidAccountTransactionsidTransactionDocumentsidDocumentPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  format: int32
                  type: integer
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Edit a document
      tags:
      - Providers
      - Documents
  /users/{id_user}/accounts/{id_account}/transactions/{id_transaction}/informations:
    delete:
      operationId: usersidUserAccountsidAccountTransactionsidTransactionInformationsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful DELETE on TransactionInformation resource
      security:
      - Authorization: []
      summary: Delete all arbitrary key-value pairs of a transaction
      tags:
      - Banks
    get:
      operationId: usersidUserAccountsidAccountTransactionsidTransactionInformationsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransactionInformations'
          description: transactioninformations
      security:
      - Authorization: []
      summary: List all arbitrary key-value pairs on a transaction
      tags:
      - Banks
    put:
      operationId: usersidUserAccountsidAccountTransactionsidTransactionInformationsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful PUT on TransactionInformation resource
      security:
      - Authorization: []
      summary: Add or edit transaction arbitrary key-value pairs
      tags:
      - Banks
  /users/{id_user}/accounts/{id_account}/transactions/{id_transaction}/informations/{id_information}:
    delete:
      operationId: usersidUserAccountsidAccountTransactionsidTransactionInformationsidInformationDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_information
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful DELETE on TransactionInformation resource
      security:
      - Authorization: []
      summary: Delete a particular key-value pair on a transaction.
      tags:
      - Banks
    get:
      operationId: usersidUserAccountsidAccountTransactionsidTransactionInformationsidInformationGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_information
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful GET on TransactionInformation resource
      security:
      - Authorization: []
      summary: Get a particular arbitrary key-value pair on a transaction
      tags:
      - Banks
  /users/{id_user}/accounts/{id_account}/transactionsclusters:
    get:
      operationId: usersidUserAccountsidAccountTransactionsclustersGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransactionsclusters'
          description: transactionsclusters
      security:
      - Authorization: []
      summary: Get clustered transactions
      tags:
      - Banks
    post:
      description: 'Form params : - next_date (date) required: Date of transaction
        - mean_amount (decimal) required: Mean Amount - wording (string) required:
        name of transaction - id_account (id) required: related account<br><br>'
      operationId: usersidUserAccountsidAccountTransactionsclustersPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                mean_amount:
                  format: float
                  type: number
                next_date:
                  format: date
                  type: string
                wording:
                  type: string
              required:
              - next_date
              - mean_amount
              - wording
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCluster'
          description: Successful POST on TransactionsCluster resource
      security:
      - Authorization: []
      summary: Create clustered transaction
      tags:
      - Banks
  /users/{id_user}/accounts/{id_account}/transactionsclusters/{id_transactions_cluster}/documents:
    delete:
      operationId: usersidUserAccountsidAccountTransactionsclustersidTransactionsClusterDocumentsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete documents
      tags:
      - Providers
      - Documents
    get:
      description: Get list of documents<br><br>
      operationId: usersidUserAccountsidAccountTransactionsclustersidTransactionsClusterDocumentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: minimal (inclusive) amount
        in: query
        name: min_amount
        schema:
          format: float
          type: number
      - description: maximumd (inclusive) amount
        in: query
        name: max_amount
        schema:
          format: float
          type: number
      - description: minimal (inclusive) timestamp
        in: query
        name: min_timestamp
        schema:
          format: float
          type: number
      - description: maximum (inclusive) timestamp
        in: query
        name: max_timestamp
        schema:
          format: float
          type: number
      - description: filter with a document type
        in: query
        name: id_type
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDocuments'
          description: documents
      security:
      - Authorization: []
      summary: Get documents
      tags:
      - Providers
      - Documents
    post:
      description: Add a new document<br><br>
      operationId: usersidUserAccountsidAccountTransactionsclustersidTransactionsClusterDocumentsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_ocr:
                  description: Related OCR process
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  type: boolean
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  type: boolean
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
              required:
              - date
              - duedate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful POST on Document resource
      security:
      - Authorization: []
      summary: Add a new document
      tags:
      - Providers
      - Documents
    put:
      operationId: usersidUserAccountsidAccountTransactionsclustersidTransactionsClusterDocumentsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_document:
                  description: id of the document you want to attach the file to
                  format: int32
                  type: integer
              required:
              - id_document
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Attach an existing document to a transaction or a transactions_cluster
      tags:
      - Providers
      - Documents
  /users/{id_user}/accounts/{id_account}/transactionsclusters/{id_transactions_cluster}/documents/{id_document}:
    delete:
      operationId: usersidUserAccountsidAccountTransactionsclustersidTransactionsClusterDocumentsidDocumentDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Providers
      - Documents
    put:
      description: Edit meta-data of a specific document.
      operationId: usersidUserAccountsidAccountTransactionsclustersidTransactionsClusterDocumentsidDocumentPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  format: int32
                  type: integer
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Edit a document
      tags:
      - Providers
      - Documents
  /users/{id_user}/accounts/{id_account}/transactionsclusters/{id_transactionscluster}:
    delete:
      operationId: usersidUserAccountsidAccountTransactionsclustersidTransactionsclusterDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactionscluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCluster'
          description: Successful DELETE on TransactionsCluster resource
      security:
      - Authorization: []
      summary: Delete a clustered transaction
      tags:
      - Banks
    put:
      description: 'Form params : - next_date (date): Date of transaction - mean_amount
        (decimal): Mean Amount - wording (string): name of transaction - id_account
        (id): related account - id_category (id): related category - enabled (bool):
        is enabled<br><br>'
      operationId: usersidUserAccountsidAccountTransactionsclustersidTransactionsclusterPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactionscluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCluster'
          description: Successful PUT on TransactionsCluster resource
      security:
      - Authorization: []
      summary: Edit a clustered transaction
      tags:
      - Banks
  /users/{id_user}/accounts/{id_account}/transfers:
    get:
      operationId: usersidUserAccountsidAccountTransfersGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransfers'
          description: transfers
      security:
      - Authorization: []
      summary: Get transfers
      tags:
      - Transfers
    post:
      operationId: usersidUserAccountsidAccountTransfersPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                amount:
                  description: amount of transfer
                  format: float
                  type: number
                exec_date:
                  description: excution date of transfer
                  format: date
                  type: string
                label:
                  description: reason of transfer
                  type: string
              required:
              - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Create a transfer object.
      tags:
      - Transfers
  /users/{id_user}/accounts/{id_account}/transfers/{id_transfer}:
    delete:
      description: It is possible to cancel only a transfer in state 'created'.<br><br>
      operationId: usersidUserAccountsidAccountTransfersidTransferDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful DELETE on Transfer resource
      security:
      - Authorization: []
      summary: Cancel a transfer.
      tags:
      - Transfers
    post:
      operationId: usersidUserAccountsidAccountTransfersidTransferPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_recipient:
                  description: set the recipient of the transfer
                  format: int32
                  type: integer
                validated:
                  description: set it to initialize transfer on the bank website.
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Execute or edit a Transfer.
      tags:
      - Transfers
  /users/{id_user}/accountsalert:
    get:
      description: <br><br>
      operationId: usersidUserAccountsalertGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAlert'
          description: ''
      security:
      - Authorization: []
      summary: Get alert configuration of a specific account
      tags:
      - PFM
    put:
      description: It updates the alert configuration of a specific account<br><br><br><br>
      operationId: usersidUserAccountsalertPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                accounts:
                  description: 'list of accounts (id coma separated) on wich the alert
                    has to be applied. If ''all'' is given, it is applied on all accounts.
                    default: all'
                  format: int32
                  type: integer
                balance_min2:
                  description: second threshold from which an alert has to be sent
                    for a low balance
                  format: int32
                  type: integer
                enabled:
                  description: if false, the alert is not taken into account
                  type: boolean
                expense_max:
                  description: threshold from which an alert has to be sent for a
                    high expense
                  format: int32
                  type: integer
                income_max:
                  description: threshold from which an alert has to be sent for a
                    high income
                  format: int32
                  type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  example:
                    balance_min1: 500
                    balance_min2: 0
                    enabled: true
                    expense_max: 500
                    income_max: 500
                type: object
          description: ''
      security:
      - Authorization: []
      summary: Update alert configuration of an account
      tags:
      - PFM
  /users/{id_user}/alerts:
    get:
      operationId: usersidUserAlertsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlerts'
          description: alerts
      security:
      - Authorization: []
      summary: Get alerts
      tags:
      - Banks
  /users/{id_user}/balances:
    get:
      description: Get balance (income/outcome/balance) of enabled accounts for the
        given period.<br><br>By default, min_date and max_date are the current month,
        and period is a single month.<br><br>The period is composed with units (days,
        months, years) and numbers. You can give for example "1month", "15days", "1year6months",
        etc.<br><br>
      operationId: usersidUserBalancesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximal (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: 'split output with the given period (default: month)'
        in: query
        name: period
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBalances'
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get balances of accounts
      tags:
      - PFM
  /users/{id_user}/categories:
    get:
      description: Ressource to get categories for the user's transactions<br><br>
      operationId: usersidUserCategoriesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get the category
      tags:
      - Banks
  /users/{id_user}/categories/full:
    get:
      description: Ressource to get categories<br><br>
      operationId: usersidUserCategoriesFullGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCategoriesFull'
          description: categorys
      security:
      - Authorization: []
      summary: Get the category
      tags:
      - Banks
    post:
      operationId: usersidUserCategoriesFullPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                accountant_account:
                  description: Accountant account number.
                  type: string
                color:
                  description: Color of the category.
                  type: string
                id_parent_category:
                  description: ID of the parent category.
                  format: int32
                  type: integer
                id_parent_category_in_menu:
                  description: ID of the parent category to be displayed.
                  format: int32
                  type: integer
                income:
                  description: Is an income category. If null, this is both an income
                    and an expense category.
                  type: boolean
                name:
                  description: Name of the category.
                  type: string
                refundable:
                  description: This category accepts opposite sign of transactions.
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Successful POST on Category resource
      security:
      - Authorization: []
      summary: Create a new transaction category
      tags:
      - Banks
  /users/{id_user}/categories/full/{id_full}:
    delete:
      operationId: usersidUserCategoriesFullidFullDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_full
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Successful DELETE on Category resource
      security:
      - Authorization: []
      summary: Delete a user-created transaction category
      tags:
      - Banks
    put:
      operationId: usersidUserCategoriesFullidFullPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_full
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                accountant_account:
                  description: Accountant account number.
                  type: string
                hide:
                  description: Hide (but not delete) a category. Must be 0, 1 or toggle.
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Successful PUT on Category resource
      security:
      - Authorization: []
      summary: Modify a user-created category
      tags:
      - Banks
  /users/{id_user}/config:
    delete:
      description: '- keys (string): list of coma separated keys to be deleted.<br><br>'
      operationId: usersidUserConfigDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfigKeys'
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Delete the given user configurations. deletions on keys prefixed by
        'biapi.' (except callback_url) are ignored
      tags:
      - Users management
      x-codegen-request-body-name: keys
    get:
      description: <br><br>
      operationId: usersidUserConfigGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
                example:
                  biapi.last_push: '2016-12-18T12:31:15'
                type: object
          description: ''
      security:
      - Authorization: []
      summary: Get configuration of a user.
      tags:
      - Users management
    post:
      operationId: usersidUserConfigPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Change configuration of a user. modifications on keys prefixed by 'biapi.'
        (except callback_url) are ignored
      tags:
      - Users management
      x-codegen-request-body-name: config
  /users/{id_user}/connections:
    delete:
      operationId: usersidUserConnectionsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Successful DELETE on Connection resource
      security:
      - Authorization: []
      summary: Delete all connections
      tags:
      - Connections
      - Banks
      - Providers
    get:
      operationId: usersidUserConnectionsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connections'
          description: connections
      security:
      - Authorization: []
      summary: Get connections
      tags:
      - Connections
      - Banks
      - Providers
    post:
      description: Create a new connection to a given bank or provider. You have to
        give all needed parameters (use /banks/ID/fields or /providers/ID/fields to
        get them).<br><br>
      operationId: usersidUserConnectionsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - description: optional comma-separated list of sources to use for the connection
          synchronization
        in: query
        name: source
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                connector_uuid:
                  description: optional uuid of the connector (replaces id_connector)
                  type: string
                id_connector:
                  description: ID of the connector
                  format: int32
                  type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Successful POST on Connection resource
      security:
      - Authorization: []
      summary: Add a new connection.
      tags:
      - Connections
      - Banks
      - Providers
  /users/{id_user}/connections/{id_connection}:
    delete:
      description: This endpoint deletes a connection and all related accounts and
        transactions.<br><br>
      operationId: usersidUserConnectionsidConnectionDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Successful DELETE on Connection resource
      security:
      - Authorization: []
      summary: Delete a connection.
      tags:
      - Connections
      - Banks
      - Providers
    post:
      description: Give new parameters to change on the configuration of this connection
        (for example "password").<br><br>It tests connection to website, and if it
        fails, a 400 response is given with the error code "wrongpass" or "websiteUnavailable".<br><br>You
        can also supply meta-parameters on connection, like 'active' or 'expire'.<br><br>
      operationId: usersidUserConnectionsidConnectionPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active:
                  description: Set if the connection synchronisation is active
                  type: boolean
                decoupled:
                  description: Try to update a connection with the decoupled error
                  type: boolean
                expire:
                  description: Set expiration of the connection to this date
                  format: date-time
                  type: string
                login:
                  description: Set login to this new login
                  type: string
                password:
                  description: Set password to this new password
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Successful POST on Connection resource
      security:
      - Authorization: []
      summary: Update a connection.
      tags:
      - Connections
      - Banks
      - Providers
    put:
      description: 'We suggest to pass parameter expand=accounts[transactions] to
        get all *new* and *updated* transactions.<br><br>Query params: - expand (string):
        fields to expand - last_update (dateTime): if supplied, get transactions inserted
        since this date<br><br>'
      operationId: usersidUserConnectionsidConnectionPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Successful PUT on Connection resource
      security:
      - Authorization: []
      summary: Force synchronisation of a connection.
      tags:
      - Connections
      - Banks
      - Providers
  /users/{id_user}/connections/{id_connection}/accounts:
    delete:
      operationId: usersidUserConnectionsidConnectionAccountsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful DELETE on Account resource
      security:
      - Authorization: []
      summary: Delete all accounts
      tags:
      - Banks
    get:
      operationId: usersidUserConnectionsidConnectionAccountsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccounts'
          description: accounts
      security:
      - Authorization: []
      summary: Get accounts list.
      tags:
      - Banks
    post:
      description: This endpoint creates an account related to a connection or not.<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                balance:
                  description: balance of account
                  format: float
                  type: number
                iban:
                  description: IBAN of account
                  type: string
                id_connection:
                  description: the connection to attach to the account
                  format: int32
                  type: integer
                id_currency:
                  description: 'the currency of the account (default: ''EUR'')'
                  type: string
                name:
                  description: name of account
                  type: string
                number:
                  description: number of account
                  type: string
              required:
              - name
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful POST on Account resource
      security:
      - Authorization: []
      summary: Create an account
      tags:
      - Banks
    put:
      operationId: usersidUserConnectionsidConnectionAccountsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful PUT on Account resource
      security:
      - Authorization: []
      summary: Update many accounts at once
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}:
    delete:
      description: It deletes a specific account.<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful DELETE on Account resource
      security:
      - Authorization: []
      summary: Delete an account.
      tags:
      - Banks
    put:
      description: It updates a specific account<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                balance:
                  description: Balance of the account
                  format: float
                  type: number
                bookmarked:
                  description: If the account is bookmarked
                  type: boolean
                disabled:
                  description: If the account is disabled (not synchronized)
                  type: boolean
                display:
                  description: If the account is displayed
                  type: boolean
                iban:
                  description: IBAN of the account
                  type: string
                name:
                  description: Label of the account
                  type: string
                usage:
                  description: 'Usage of the account : PRIV, ORGA or ASSO'
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful PUT on Account resource
      security:
      - Authorization: []
      summary: Update an account
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/balances:
    get:
      description: Get balance (income/outcome/balance) of enabled accounts for the
        given period.<br><br>By default, min_date and max_date are the current month,
        and period is a single month.<br><br>The period is composed with units (days,
        months, years) and numbers. You can give for example "1month", "15days", "1year6months",
        etc.<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountBalancesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximal (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: 'split output with the given period (default: month)'
        in: query
        name: period
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBalances'
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get balances of accounts
      tags:
      - PFM
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/categories:
    get:
      description: Ressource to get categories for the user's transactions<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountCategoriesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get the category
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/delta:
    get:
      description: Get account delta between sums of transactions and difference of
        account balance for the given period.<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountDeltaGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - description: minimal date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get deltas of accounts
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/investments:
    get:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountInvestmentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvestments'
          description: investments
      security:
      - Authorization: []
      summary: Get investments
      tags:
      - Wealth
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/investments/{id_investment}/history:
    get:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountInvestmentsidInvestmentHistoryGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_investment
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccountHistory'
          description: investmentvalues
      security:
      - Authorization: []
      summary: Get investment values
      tags:
      - Wealth
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/investments/{id_investment}/pockets:
    get:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountInvestmentsidInvestmentPocketsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_investment
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPockets'
          description: pockets
      security:
      - Authorization: []
      summary: Get pockets
      tags:
      - Wealth
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/investments/{id_investment}/security/history:
    get:
      description: Get logs about connections.<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountInvestmentsidInvestmentSecurityHistoryGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_investment
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get connection logs
      tags:
      - Wealth
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/logs:
    get:
      description: Get logs of account. By default, it selects logs for the last month.
        You can use "min_date" and "max_date" to change boundary dates.<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountLogsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccountLogs'
          description: accountlogs
      security:
      - Authorization: []
      summary: Get accounts logs.
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/operationsalert:
    get:
      description: <br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountOperationsalertGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOperationsalert'
          description: useralerts
      security:
      - Authorization: []
      summary: Get a list of configurated alerts
      tags:
      - PFM
    post:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountOperationsalertPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date_range:
                  description: (number of days) range on which the analysis has to
                    be done
                  format: int32
                  type: integer
                expense_max:
                  description: capital loss thresholds
                  format: int32
                  type: integer
                income_max:
                  description: capital gain thresholds
                  format: int32
                  type: integer
                type:
                  description: 'parameter to choose the scope of the alert. accepted:
                    transactions, investements'
                  type: string
                value_type:
                  description: 'whether the threshold is given in absolut value or
                    percent. accepted: percent, flat'
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlert'
          description: Successful POST on UserAlert resource
      security:
      - Authorization: []
      summary: Create an alert on transactions or investemens of a given user
      tags:
      - PFM
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/operationsalert/{id_operationsalert}:
    delete:
      description: <br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountOperationsalertidOperationsalertDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_operationsalert
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlert'
          description: Successful DELETE on UserAlert resource
      security:
      - Authorization: []
      summary: Delete an alert on transactions or investemens
      tags:
      - PFM
    put:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountOperationsalertidOperationsalertPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_operationsalert
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date_range:
                  description: (number of days) range on which the analysis has to
                    be done
                  format: int32
                  type: integer
                expense_max:
                  description: capital loss thresholds
                  format: int32
                  type: integer
                income_max:
                  description: capital gain thresholds
                  format: int32
                  type: integer
                type:
                  description: 'parameter to choose the scope of the alert. accepted:
                    transactions, investements'
                  type: string
                value_type:
                  description: 'whether the threshold is given in absolut value or
                    percent. accepted: percent, flat'
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlert'
          description: Successful PUT on UserAlert resource
      security:
      - Authorization: []
      summary: Edit an alert on transactions or investemens
      tags:
      - PFM
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/pockets:
    get:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountPocketsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPockets'
          description: pockets
      security:
      - Authorization: []
      summary: Get pockets
      tags:
      - Wealth
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/recipients:
    get:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountRecipientsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRecipients'
          description: recipients
      security:
      - Authorization: []
      summary: Returns the list of recipients.
      tags:
      - Transfers
    post:
      description: if config key transfer.recipient.iban_white_list.enabled is set
        to 1, recipients whose IBAN are not from countries codes contained in transfer.recipient.iban_white_list.entries
        will be deleted<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountRecipientsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - description: if true, do synchronization in background
        in: query
        name: background
        schema:
          type: boolean
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                iban:
                  description: iban of recipient
                  type: string
                label:
                  description: label of recipient
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
          description: Successful POST on Recipient resource
      security:
      - Authorization: []
      summary: Add a recipient.
      tags:
      - Recipients
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/recipients/{id_recipient}:
    post:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountRecipientsidRecipientPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - description: if true, do synchronization in background
        in: query
        name: background
        schema:
          type: boolean
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
          description: Successful POST on Recipient resource
      security:
      - Authorization: []
      summary: Continue addition of a recipient.
      tags:
      - Transfers
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/recipients/{id_recipient}/transfers:
    get:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountRecipientsidRecipientTransfersGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransfers'
          description: transfers
      security:
      - Authorization: []
      summary: Get transfers
      tags:
      - Transfers
    post:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountRecipientsidRecipientTransfersPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                amount:
                  description: amount of transfer
                  format: float
                  type: number
                exec_date:
                  description: excution date of transfer
                  format: date
                  type: string
                label:
                  description: reason of transfer
                  type: string
              required:
              - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Create a transfer object.
      tags:
      - Transfers
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/recipients/{id_recipient}/transfers/{id_transfer}:
    delete:
      description: It is possible to cancel only a transfer in state 'created'.<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountRecipientsidRecipientTransfersidTransferDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful DELETE on Transfer resource
      security:
      - Authorization: []
      summary: Cancel a transfer.
      tags:
      - Transfers
    post:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountRecipientsidRecipientTransfersidTransferPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_recipient:
                  description: set the recipient of the transfer
                  format: int32
                  type: integer
                validated:
                  description: set it to initialize transfer on the bank website.
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Execute or edit a Transfer.
      tags:
      - Transfers
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/sources:
    get:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountSourcesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSources'
          description: sources
      security:
      - Authorization: []
      summary: Get account sources
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions:
    delete:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Successful DELETE on Transaction resource
      security:
      - Authorization: []
      summary: Delete transactions
      tags:
      - Banks
    get:
      description: Get list of transactions.<br><br>By default, it selects transactions
        for the last month. You can use "min_date" and "max_date" to change boundary
        dates.<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: filter on income or expenditures
        in: query
        name: income
        schema:
          type: boolean
      - description: display only deleted transactions
        in: query
        name: deleted
        schema:
          type: boolean
      - description: display all transactions, including deleted ones
        in: query
        name: all
        schema:
          type: boolean
      - description: get only transactions updated after the specified datetime
        in: query
        name: last_update
        schema:
          format: date-time
          type: string
      - description: filter transactions containing the given string
        in: query
        name: wording
        schema:
          type: string
      - description: minimal (inclusive) value
        in: query
        name: min_value
        schema:
          format: float
          type: number
      - description: maximum (inclusive) value
        in: query
        name: max_value
        schema:
          format: float
          type: number
      - description: search in labels, dates, values and categories
        in: query
        name: search
        schema:
          type: string
      - description: "\"XX|-XX\" or \"\xB1XX\""
        in: query
        name: value
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransactions'
          description: transactions
      security:
      - Authorization: []
      summary: Get transactions
      tags:
      - Banks
    post:
      description: Create transactions for the supplied account or the account whose
        id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active:
                  description: '1 if the transaction should be taken into account
                    by pfm services (default: 1)'
                  type: boolean
                coming:
                  description: '1 if the transaction has already been debited (default:
                    0)'
                  type: boolean
                date:
                  description: date of the transaction
                  format: date
                  type: string
                date_scraped:
                  description: 'date on which the transaction has been found for the
                    first time. YYYY-MM-DD HH:MM:SS(default: now)'
                  format: date-time
                  type: string
                id_account:
                  description: account of the transaction. If not supplied, it has
                    to be given in the route
                  format: int32
                  type: integer
                original_wording:
                  description: label of the transaction
                  type: string
                rdate:
                  description: 'realisation date of the transaction (default: value
                    of date)'
                  format: date
                  type: string
                state:
                  description: 'nature of the transaction (default: new)'
                  type: string
                type:
                  description: 'type of the transaction (default: unknown)'
                  type: string
                value:
                  description: vallue of the transaction
                  format: int32
                  type: integer
              required:
              - date
              - original_wording
              - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Successful POST on Transaction resource
      security:
      - Authorization: []
      summary: Create transactions
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}:
    put:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsidTransactionPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active:
                  description: if false, transaction isn't considered in analyzisis
                    endpoints (like /balances)
                  type: boolean
                application_date:
                  description: change application date of the transaction
                  format: date
                  type: string
                comment:
                  description: change comment
                  type: string
                id_category:
                  description: ID of the associated category
                  format: int32
                  type: integer
                wording:
                  description: user rewording of the transaction
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Successful PUT on Transaction resource
      security:
      - Authorization: []
      summary: Edit a transaction meta-data
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/documents:
    delete:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsidTransactionDocumentsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete documents
      tags:
      - Providers
      - Documents
    get:
      description: Get list of documents<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsidTransactionDocumentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: minimal (inclusive) amount
        in: query
        name: min_amount
        schema:
          format: float
          type: number
      - description: maximumd (inclusive) amount
        in: query
        name: max_amount
        schema:
          format: float
          type: number
      - description: minimal (inclusive) timestamp
        in: query
        name: min_timestamp
        schema:
          format: float
          type: number
      - description: maximum (inclusive) timestamp
        in: query
        name: max_timestamp
        schema:
          format: float
          type: number
      - description: filter with a document type
        in: query
        name: id_type
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDocuments'
          description: documents
      security:
      - Authorization: []
      summary: Get documents
      tags:
      - Providers
      - Documents
    post:
      description: Add a new document<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsidTransactionDocumentsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_ocr:
                  description: Related OCR process
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  type: boolean
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  type: boolean
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
              required:
              - date
              - duedate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful POST on Document resource
      security:
      - Authorization: []
      summary: Add a new document
      tags:
      - Providers
      - Documents
    put:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsidTransactionDocumentsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_document:
                  description: id of the document you want to attach the file to
                  format: int32
                  type: integer
              required:
              - id_document
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Attach an existing document to a transaction or a transactions_cluster
      tags:
      - Providers
      - Documents
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/documents/{id_document}:
    delete:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsidTransactionDocumentsidDocumentDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Providers
      - Documents
    put:
      description: Edit meta-data of a specific document.
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsidTransactionDocumentsidDocumentPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  format: int32
                  type: integer
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Edit a document
      tags:
      - Providers
      - Documents
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/informations:
    delete:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsidTransactionInformationsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful DELETE on TransactionInformation resource
      security:
      - Authorization: []
      summary: Delete all arbitrary key-value pairs of a transaction
      tags:
      - Banks
    get:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsidTransactionInformationsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransactionInformations'
          description: transactioninformations
      security:
      - Authorization: []
      summary: List all arbitrary key-value pairs on a transaction
      tags:
      - Banks
    put:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsidTransactionInformationsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful PUT on TransactionInformation resource
      security:
      - Authorization: []
      summary: Add or edit transaction arbitrary key-value pairs
      tags:
      - Banks
  ? /users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/informations/{id_information}
  : delete:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsidTransactionInformationsidInformationDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_information
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful DELETE on TransactionInformation resource
      security:
      - Authorization: []
      summary: Delete a particular key-value pair on a transaction.
      tags:
      - Banks
    get:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsidTransactionInformationsidInformationGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_information
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful GET on TransactionInformation resource
      security:
      - Authorization: []
      summary: Get a particular arbitrary key-value pair on a transaction
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters:
    get:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsclustersGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransactionsclusters'
          description: transactionsclusters
      security:
      - Authorization: []
      summary: Get clustered transactions
      tags:
      - Banks
    post:
      description: 'Form params : - next_date (date) required: Date of transaction
        - mean_amount (decimal) required: Mean Amount - wording (string) required:
        name of transaction - id_account (id) required: related account<br><br>'
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsclustersPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCluster'
          description: Successful POST on TransactionsCluster resource
      security:
      - Authorization: []
      summary: Create clustered transaction
      tags:
      - Banks
  ? /users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters/{id_transactions_cluster}/documents
  : delete:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsclustersidTransactionsClusterDocumentsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete documents
      tags:
      - Providers
      - Documents
    get:
      description: Get list of documents<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsclustersidTransactionsClusterDocumentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: minimal (inclusive) amount
        in: query
        name: min_amount
        schema:
          format: float
          type: number
      - description: maximumd (inclusive) amount
        in: query
        name: max_amount
        schema:
          format: float
          type: number
      - description: minimal (inclusive) timestamp
        in: query
        name: min_timestamp
        schema:
          format: float
          type: number
      - description: maximum (inclusive) timestamp
        in: query
        name: max_timestamp
        schema:
          format: float
          type: number
      - description: filter with a document type
        in: query
        name: id_type
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDocuments'
          description: documents
      security:
      - Authorization: []
      summary: Get documents
      tags:
      - Providers
      - Documents
    post:
      description: Add a new document<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsclustersidTransactionsClusterDocumentsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_ocr:
                  description: Related OCR process
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  type: boolean
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  type: boolean
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
              required:
              - date
              - duedate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful POST on Document resource
      security:
      - Authorization: []
      summary: Add a new document
      tags:
      - Providers
      - Documents
    put:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsclustersidTransactionsClusterDocumentsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_document:
                  description: id of the document you want to attach the file to
                  format: int32
                  type: integer
              required:
              - id_document
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Attach an existing document to a transaction or a transactions_cluster
      tags:
      - Providers
      - Documents
  ? /users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters/{id_transactions_cluster}/documents/{id_document}
  : delete:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsclustersidTransactionsClusterDocumentsidDocumentDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Providers
      - Documents
    put:
      description: Edit meta-data of a specific document.
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsclustersidTransactionsClusterDocumentsidDocumentPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  format: int32
                  type: integer
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Edit a document
      tags:
      - Providers
      - Documents
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters/{id_transactionscluster}:
    delete:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsclustersidTransactionsclusterDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactionscluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCluster'
          description: Successful DELETE on TransactionsCluster resource
      security:
      - Authorization: []
      summary: Delete a clustered transaction
      tags:
      - Banks
    put:
      description: 'Form params : - next_date (date): Date of transaction - mean_amount
        (decimal): Mean Amount - wording (string): name of transaction - id_account
        (id): related account - id_category (id): related category - enabled (bool):
        is enabled<br><br>'
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransactionsclustersidTransactionsclusterPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactionscluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCluster'
          description: Successful PUT on TransactionsCluster resource
      security:
      - Authorization: []
      summary: Edit a clustered transaction
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/transfers:
    get:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransfersGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransfers'
          description: transfers
      security:
      - Authorization: []
      summary: Get transfers
      tags:
      - Transfers
    post:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransfersPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                amount:
                  description: amount of transfer
                  format: float
                  type: number
                exec_date:
                  description: excution date of transfer
                  format: date
                  type: string
                label:
                  description: reason of transfer
                  type: string
              required:
              - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Create a transfer object.
      tags:
      - Transfers
  /users/{id_user}/connections/{id_connection}/accounts/{id_account}/transfers/{id_transfer}:
    delete:
      description: It is possible to cancel only a transfer in state 'created'.<br><br>
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransfersidTransferDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful DELETE on Transfer resource
      security:
      - Authorization: []
      summary: Cancel a transfer.
      tags:
      - Transfers
    post:
      operationId: usersidUserConnectionsidConnectionAccountsidAccountTransfersidTransferPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_account
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_recipient:
                  description: set the recipient of the transfer
                  format: int32
                  type: integer
                validated:
                  description: set it to initialize transfer on the bank website.
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Execute or edit a Transfer.
      tags:
      - Transfers
  /users/{id_user}/connections/{id_connection}/balances:
    get:
      description: Get balance (income/outcome/balance) of enabled accounts for the
        given period.<br><br>By default, min_date and max_date are the current month,
        and period is a single month.<br><br>The period is composed with units (days,
        months, years) and numbers. You can give for example "1month", "15days", "1year6months",
        etc.<br><br>
      operationId: usersidUserConnectionsidConnectionBalancesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximal (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: 'split output with the given period (default: month)'
        in: query
        name: period
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBalances'
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get balances of accounts
      tags:
      - PFM
  /users/{id_user}/connections/{id_connection}/documents:
    delete:
      operationId: usersidUserConnectionsidConnectionDocumentsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete documents
      tags:
      - Providers
      - Documents
    get:
      description: Get list of documents<br><br>
      operationId: usersidUserConnectionsidConnectionDocumentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: minimal (inclusive) amount
        in: query
        name: min_amount
        schema:
          format: float
          type: number
      - description: maximumd (inclusive) amount
        in: query
        name: max_amount
        schema:
          format: float
          type: number
      - description: minimal (inclusive) timestamp
        in: query
        name: min_timestamp
        schema:
          format: float
          type: number
      - description: maximum (inclusive) timestamp
        in: query
        name: max_timestamp
        schema:
          format: float
          type: number
      - description: filter with a document type
        in: query
        name: id_type
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDocuments'
          description: documents
      security:
      - Authorization: []
      summary: Get documents
      tags:
      - Providers
      - Documents
    post:
      description: Add a new document<br><br>
      operationId: usersidUserConnectionsidConnectionDocumentsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_ocr:
                  description: Related OCR process
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  type: boolean
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  type: boolean
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
              required:
              - date
              - duedate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful POST on Document resource
      security:
      - Authorization: []
      summary: Add a new document
      tags:
      - Providers
      - Documents
    put:
      operationId: usersidUserConnectionsidConnectionDocumentsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_document:
                  description: id of the document you want to attach the file to
                  format: int32
                  type: integer
              required:
              - id_document
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Attach an existing document to a transaction or a transactions_cluster
      tags:
      - Providers
      - Documents
  /users/{id_user}/connections/{id_connection}/documents/{id_document}:
    delete:
      operationId: usersidUserConnectionsidConnectionDocumentsidDocumentDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Providers
      - Documents
    put:
      description: Edit meta-data of a specific document.
      operationId: usersidUserConnectionsidConnectionDocumentsidDocumentPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  format: int32
                  type: integer
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Edit a document
      tags:
      - Providers
      - Documents
  /users/{id_user}/connections/{id_connection}/informations:
    get:
      description: <br><br>
      operationId: usersidUserConnectionsidConnectionInformationsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConnectionInformations'
          description: connections
      security:
      - Authorization: []
      summary: Get connection additionnal informations
      tags:
      - Connections
      - Banks
      - Providers
  /users/{id_user}/connections/{id_connection}/investments:
    get:
      operationId: usersidUserConnectionsidConnectionInvestmentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvestments'
          description: investments
      security:
      - Authorization: []
      summary: Get investments
      tags:
      - Wealth
  /users/{id_user}/connections/{id_connection}/investments/{id_investment}/history:
    get:
      operationId: usersidUserConnectionsidConnectionInvestmentsidInvestmentHistoryGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_investment
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccountHistory'
          description: investmentvalues
      security:
      - Authorization: []
      summary: Get investment values
      tags:
      - Wealth
  /users/{id_user}/connections/{id_connection}/investments/{id_investment}/pockets:
    get:
      operationId: usersidUserConnectionsidConnectionInvestmentsidInvestmentPocketsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_investment
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPockets'
          description: pockets
      security:
      - Authorization: []
      summary: Get pockets
      tags:
      - Wealth
  /users/{id_user}/connections/{id_connection}/investments/{id_investment}/security/history:
    get:
      description: Get logs about connections.<br><br>
      operationId: usersidUserConnectionsidConnectionInvestmentsidInvestmentSecurityHistoryGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_investment
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get connection logs
      tags:
      - Wealth
  /users/{id_user}/connections/{id_connection}/logs:
    get:
      description: Get logs about connections.<br><br>
      operationId: usersidUserConnectionsidConnectionLogsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: state of user
        in: query
        name: state
        schema:
          type: integer
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      - description: ID of a user
        in: query
        name: id_user
        schema:
          type: integer
      - description: ID of a connection
        in: query
        name: id_connection
        schema:
          type: integer
      - description: ID of a connector
        in: query
        name: id_connector
        schema:
          type: integer
      - description: consider only logs for charged connectors
        in: query
        name: charged
        schema:
          type: boolean
      - description: ID of a source
        in: query
        name: id_source
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logs'
          description: connectionlogs
      security:
      - Authorization: []
      summary: Get connection logs
      tags:
      - Connections
      - Banks
      - Providers
  /users/{id_user}/connections/{id_connection}/pockets:
    get:
      operationId: usersidUserConnectionsidConnectionPocketsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPockets'
          description: pockets
      security:
      - Authorization: []
      summary: Get pockets
      tags:
      - Wealth
  /users/{id_user}/connections/{id_connection}/recipients:
    get:
      operationId: usersidUserConnectionsidConnectionRecipientsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRecipients'
          description: recipients
      security:
      - Authorization: []
      summary: Returns the list of recipients.
      tags:
      - Transfers
    post:
      description: if config key transfer.recipient.iban_white_list.enabled is set
        to 1, recipients whose IBAN are not from countries codes contained in transfer.recipient.iban_white_list.entries
        will be deleted<br><br>
      operationId: usersidUserConnectionsidConnectionRecipientsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - description: if true, do synchronization in background
        in: query
        name: background
        schema:
          type: boolean
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                iban:
                  description: iban of recipient
                  type: string
                label:
                  description: label of recipient
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
          description: Successful POST on Recipient resource
      security:
      - Authorization: []
      summary: Add a recipient.
      tags:
      - Recipients
  /users/{id_user}/connections/{id_connection}/recipients/{id_recipient}:
    post:
      operationId: usersidUserConnectionsidConnectionRecipientsidRecipientPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - description: if true, do synchronization in background
        in: query
        name: background
        schema:
          type: boolean
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
          description: Successful POST on Recipient resource
      security:
      - Authorization: []
      summary: Continue addition of a recipient.
      tags:
      - Transfers
  /users/{id_user}/connections/{id_connection}/recipients/{id_recipient}/transfers:
    get:
      operationId: usersidUserConnectionsidConnectionRecipientsidRecipientTransfersGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransfers'
          description: transfers
      security:
      - Authorization: []
      summary: Get transfers
      tags:
      - Transfers
    post:
      operationId: usersidUserConnectionsidConnectionRecipientsidRecipientTransfersPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                amount:
                  description: amount of transfer
                  format: float
                  type: number
                exec_date:
                  description: excution date of transfer
                  format: date
                  type: string
                label:
                  description: reason of transfer
                  type: string
              required:
              - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Create a transfer object.
      tags:
      - Transfers
  /users/{id_user}/connections/{id_connection}/recipients/{id_recipient}/transfers/{id_transfer}:
    delete:
      description: It is possible to cancel only a transfer in state 'created'.<br><br>
      operationId: usersidUserConnectionsidConnectionRecipientsidRecipientTransfersidTransferDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful DELETE on Transfer resource
      security:
      - Authorization: []
      summary: Cancel a transfer.
      tags:
      - Transfers
    post:
      operationId: usersidUserConnectionsidConnectionRecipientsidRecipientTransfersidTransferPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_recipient:
                  description: set the recipient of the transfer
                  format: int32
                  type: integer
                validated:
                  description: set it to initialize transfer on the bank website.
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Execute or edit a Transfer.
      tags:
      - Transfers
  /users/{id_user}/connections/{id_connection}/sources:
    get:
      operationId: usersidUserConnectionsidConnectionSourcesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSources'
          description: sources
      security:
      - Authorization: []
      summary: Get connection sources
      tags:
      - Connections
      - Banks
      - Providers
  /users/{id_user}/connections/{id_connection}/sources/{id_source}:
    delete:
      description: This will make it so the specified source will not be synchronized
        anymore.<br><br>
      operationId: usersidUserConnectionsidConnectionSourcesidSourceDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_source
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSource'
          description: Successful DELETE on ConnectionSource resource
      security:
      - Authorization: []
      summary: Disable a connection source
      tags:
      - Connections
      - Banks
      - Providers
    post:
      description: This will make it so the specified source will be able to be synchronized.<br><br>
      operationId: usersidUserConnectionsidConnectionSourcesidSourcePost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_source
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSource'
          description: Successful POST on ConnectionSource resource
      security:
      - Authorization: []
      summary: Enable connection source
      tags:
      - Connections
      - Banks
      - Providers
    put:
      description: This will make it so the specified source will be able to be synchronized.<br><br>
      operationId: usersidUserConnectionsidConnectionSourcesidSourcePut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_source
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSource'
          description: Successful PUT on ConnectionSource resource
      security:
      - Authorization: []
      summary: Enable connection source
      tags:
      - Connections
      - Banks
      - Providers
  /users/{id_user}/connections/{id_connection}/subscriptions:
    put:
      operationId: usersidUserConnectionsidConnectionSubscriptionsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Successful PUT on Subscription resource
      security:
      - Authorization: []
      summary: Update many subscriptions at once
      tags:
      - Providers
  /users/{id_user}/connections/{id_connection}/subscriptions/{id_subscription}:
    delete:
      description: It deletes a specific subscription.<br><br>
      operationId: usersidUserConnectionsidConnectionSubscriptionsidSubscriptionDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Successful DELETE on Subscription resource
      security:
      - Authorization: []
      summary: Delete a subscription.
      tags:
      - Providers
    put:
      description: It updates a specific subscription<br><br>
      operationId: usersidUserConnectionsidConnectionSubscriptionsidSubscriptionPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                disabled:
                  description: If the subscription is disabled (not synchronized)
                  type: boolean
                name:
                  description: Label of the subscription
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Successful PUT on Subscription resource
      security:
      - Authorization: []
      summary: Update a subscription
      tags:
      - Providers
  /users/{id_user}/connections/{id_connection}/subscriptions/{id_subscription}/documents:
    delete:
      operationId: usersidUserConnectionsidConnectionSubscriptionsidSubscriptionDocumentsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete documents
      tags:
      - Providers
      - Documents
    get:
      description: Get list of documents<br><br>
      operationId: usersidUserConnectionsidConnectionSubscriptionsidSubscriptionDocumentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: minimal (inclusive) amount
        in: query
        name: min_amount
        schema:
          format: float
          type: number
      - description: maximumd (inclusive) amount
        in: query
        name: max_amount
        schema:
          format: float
          type: number
      - description: minimal (inclusive) timestamp
        in: query
        name: min_timestamp
        schema:
          format: float
          type: number
      - description: maximum (inclusive) timestamp
        in: query
        name: max_timestamp
        schema:
          format: float
          type: number
      - description: filter with a document type
        in: query
        name: id_type
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDocuments'
          description: documents
      security:
      - Authorization: []
      summary: Get documents
      tags:
      - Providers
      - Documents
    post:
      description: Add a new document<br><br>
      operationId: usersidUserConnectionsidConnectionSubscriptionsidSubscriptionDocumentsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_ocr:
                  description: Related OCR process
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  type: boolean
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  type: boolean
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
              required:
              - date
              - duedate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful POST on Document resource
      security:
      - Authorization: []
      summary: Add a new document
      tags:
      - Providers
      - Documents
    put:
      operationId: usersidUserConnectionsidConnectionSubscriptionsidSubscriptionDocumentsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_document:
                  description: id of the document you want to attach the file to
                  format: int32
                  type: integer
              required:
              - id_document
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Attach an existing document to a transaction or a transactions_cluster
      tags:
      - Providers
      - Documents
  /users/{id_user}/connections/{id_connection}/subscriptions/{id_subscription}/documents/{id_document}:
    delete:
      operationId: usersidUserConnectionsidConnectionSubscriptionsidSubscriptionDocumentsidDocumentDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Providers
      - Documents
    put:
      description: Edit meta-data of a specific document.
      operationId: usersidUserConnectionsidConnectionSubscriptionsidSubscriptionDocumentsidDocumentPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  format: int32
                  type: integer
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Edit a document
      tags:
      - Providers
      - Documents
  /users/{id_user}/connections/{id_connection}/subscriptions/{id_subscription}/logs:
    get:
      description: Get logs of subscription.<br><br>By default, it selects logs for
        the last month. You can use "min_date" and "max_date" to change boundary dates.<br><br>
      operationId: usersidUserConnectionsidConnectionSubscriptionsidSubscriptionLogsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscriptionLogs'
          description: subscriptionlogs
      security:
      - Authorization: []
      summary: Get subscriptions logs.
      tags:
      - Providers
  /users/{id_user}/connections/{id_connection}/transactions:
    delete:
      operationId: usersidUserConnectionsidConnectionTransactionsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Successful DELETE on Transaction resource
      security:
      - Authorization: []
      summary: Delete transactions
      tags:
      - Banks
    get:
      description: Get list of transactions.<br><br>By default, it selects transactions
        for the last month. You can use "min_date" and "max_date" to change boundary
        dates.<br><br>
      operationId: usersidUserConnectionsidConnectionTransactionsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: filter on income or expenditures
        in: query
        name: income
        schema:
          type: boolean
      - description: display only deleted transactions
        in: query
        name: deleted
        schema:
          type: boolean
      - description: display all transactions, including deleted ones
        in: query
        name: all
        schema:
          type: boolean
      - description: get only transactions updated after the specified datetime
        in: query
        name: last_update
        schema:
          format: date-time
          type: string
      - description: filter transactions containing the given string
        in: query
        name: wording
        schema:
          type: string
      - description: minimal (inclusive) value
        in: query
        name: min_value
        schema:
          format: float
          type: number
      - description: maximum (inclusive) value
        in: query
        name: max_value
        schema:
          format: float
          type: number
      - description: search in labels, dates, values and categories
        in: query
        name: search
        schema:
          type: string
      - description: "\"XX|-XX\" or \"\xB1XX\""
        in: query
        name: value
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransactions'
          description: transactions
      security:
      - Authorization: []
      summary: Get transactions
      tags:
      - Banks
    post:
      description: Create transactions for the supplied account or the account whose
        id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>
      operationId: usersidUserConnectionsidConnectionTransactionsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active:
                  description: '1 if the transaction should be taken into account
                    by pfm services (default: 1)'
                  type: boolean
                coming:
                  description: '1 if the transaction has already been debited (default:
                    0)'
                  type: boolean
                date:
                  description: date of the transaction
                  format: date
                  type: string
                date_scraped:
                  description: 'date on which the transaction has been found for the
                    first time. YYYY-MM-DD HH:MM:SS(default: now)'
                  format: date-time
                  type: string
                id_account:
                  description: account of the transaction. If not supplied, it has
                    to be given in the route
                  format: int32
                  type: integer
                original_wording:
                  description: label of the transaction
                  type: string
                rdate:
                  description: 'realisation date of the transaction (default: value
                    of date)'
                  format: date
                  type: string
                state:
                  description: 'nature of the transaction (default: new)'
                  type: string
                type:
                  description: 'type of the transaction (default: unknown)'
                  type: string
                value:
                  description: vallue of the transaction
                  format: int32
                  type: integer
              required:
              - date
              - original_wording
              - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Successful POST on Transaction resource
      security:
      - Authorization: []
      summary: Create transactions
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/transactions/{id_transaction}:
    put:
      operationId: usersidUserConnectionsidConnectionTransactionsidTransactionPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active:
                  description: if false, transaction isn't considered in analyzisis
                    endpoints (like /balances)
                  type: boolean
                application_date:
                  description: change application date of the transaction
                  format: date
                  type: string
                comment:
                  description: change comment
                  type: string
                id_category:
                  description: ID of the associated category
                  format: int32
                  type: integer
                wording:
                  description: user rewording of the transaction
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Successful PUT on Transaction resource
      security:
      - Authorization: []
      summary: Edit a transaction meta-data
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/transactions/{id_transaction}/documents:
    delete:
      operationId: usersidUserConnectionsidConnectionTransactionsidTransactionDocumentsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete documents
      tags:
      - Providers
      - Documents
    get:
      description: Get list of documents<br><br>
      operationId: usersidUserConnectionsidConnectionTransactionsidTransactionDocumentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: minimal (inclusive) amount
        in: query
        name: min_amount
        schema:
          format: float
          type: number
      - description: maximumd (inclusive) amount
        in: query
        name: max_amount
        schema:
          format: float
          type: number
      - description: minimal (inclusive) timestamp
        in: query
        name: min_timestamp
        schema:
          format: float
          type: number
      - description: maximum (inclusive) timestamp
        in: query
        name: max_timestamp
        schema:
          format: float
          type: number
      - description: filter with a document type
        in: query
        name: id_type
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDocuments'
          description: documents
      security:
      - Authorization: []
      summary: Get documents
      tags:
      - Providers
      - Documents
    post:
      description: Add a new document<br><br>
      operationId: usersidUserConnectionsidConnectionTransactionsidTransactionDocumentsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_ocr:
                  description: Related OCR process
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  type: boolean
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  type: boolean
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
              required:
              - date
              - duedate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful POST on Document resource
      security:
      - Authorization: []
      summary: Add a new document
      tags:
      - Providers
      - Documents
    put:
      operationId: usersidUserConnectionsidConnectionTransactionsidTransactionDocumentsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_document:
                  description: id of the document you want to attach the file to
                  format: int32
                  type: integer
              required:
              - id_document
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Attach an existing document to a transaction or a transactions_cluster
      tags:
      - Providers
      - Documents
  /users/{id_user}/connections/{id_connection}/transactions/{id_transaction}/documents/{id_document}:
    delete:
      operationId: usersidUserConnectionsidConnectionTransactionsidTransactionDocumentsidDocumentDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Providers
      - Documents
    put:
      description: Edit meta-data of a specific document.
      operationId: usersidUserConnectionsidConnectionTransactionsidTransactionDocumentsidDocumentPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  format: int32
                  type: integer
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Edit a document
      tags:
      - Providers
      - Documents
  /users/{id_user}/connections/{id_connection}/transactions/{id_transaction}/informations:
    delete:
      operationId: usersidUserConnectionsidConnectionTransactionsidTransactionInformationsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful DELETE on TransactionInformation resource
      security:
      - Authorization: []
      summary: Delete all arbitrary key-value pairs of a transaction
      tags:
      - Banks
    get:
      operationId: usersidUserConnectionsidConnectionTransactionsidTransactionInformationsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransactionInformations'
          description: transactioninformations
      security:
      - Authorization: []
      summary: List all arbitrary key-value pairs on a transaction
      tags:
      - Banks
    put:
      operationId: usersidUserConnectionsidConnectionTransactionsidTransactionInformationsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful PUT on TransactionInformation resource
      security:
      - Authorization: []
      summary: Add or edit transaction arbitrary key-value pairs
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/transactions/{id_transaction}/informations/{id_information}:
    delete:
      operationId: usersidUserConnectionsidConnectionTransactionsidTransactionInformationsidInformationDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_information
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful DELETE on TransactionInformation resource
      security:
      - Authorization: []
      summary: Delete a particular key-value pair on a transaction.
      tags:
      - Banks
    get:
      operationId: usersidUserConnectionsidConnectionTransactionsidTransactionInformationsidInformationGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_information
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful GET on TransactionInformation resource
      security:
      - Authorization: []
      summary: Get a particular arbitrary key-value pair on a transaction
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/transactionsclusters:
    get:
      operationId: usersidUserConnectionsidConnectionTransactionsclustersGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransactionsclusters'
          description: transactionsclusters
      security:
      - Authorization: []
      summary: Get clustered transactions
      tags:
      - Banks
    post:
      description: 'Form params : - next_date (date) required: Date of transaction
        - mean_amount (decimal) required: Mean Amount - wording (string) required:
        name of transaction - id_account (id) required: related account<br><br>'
      operationId: usersidUserConnectionsidConnectionTransactionsclustersPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCluster'
          description: Successful POST on TransactionsCluster resource
      security:
      - Authorization: []
      summary: Create clustered transaction
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/transactionsclusters/{id_transactions_cluster}/documents:
    delete:
      operationId: usersidUserConnectionsidConnectionTransactionsclustersidTransactionsClusterDocumentsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete documents
      tags:
      - Providers
      - Documents
    get:
      description: Get list of documents<br><br>
      operationId: usersidUserConnectionsidConnectionTransactionsclustersidTransactionsClusterDocumentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: minimal (inclusive) amount
        in: query
        name: min_amount
        schema:
          format: float
          type: number
      - description: maximumd (inclusive) amount
        in: query
        name: max_amount
        schema:
          format: float
          type: number
      - description: minimal (inclusive) timestamp
        in: query
        name: min_timestamp
        schema:
          format: float
          type: number
      - description: maximum (inclusive) timestamp
        in: query
        name: max_timestamp
        schema:
          format: float
          type: number
      - description: filter with a document type
        in: query
        name: id_type
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDocuments'
          description: documents
      security:
      - Authorization: []
      summary: Get documents
      tags:
      - Providers
      - Documents
    post:
      description: Add a new document<br><br>
      operationId: usersidUserConnectionsidConnectionTransactionsclustersidTransactionsClusterDocumentsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_ocr:
                  description: Related OCR process
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  type: boolean
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  type: boolean
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
              required:
              - date
              - duedate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful POST on Document resource
      security:
      - Authorization: []
      summary: Add a new document
      tags:
      - Providers
      - Documents
    put:
      operationId: usersidUserConnectionsidConnectionTransactionsclustersidTransactionsClusterDocumentsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_document:
                  description: id of the document you want to attach the file to
                  format: int32
                  type: integer
              required:
              - id_document
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Attach an existing document to a transaction or a transactions_cluster
      tags:
      - Providers
      - Documents
  /users/{id_user}/connections/{id_connection}/transactionsclusters/{id_transactions_cluster}/documents/{id_document}:
    delete:
      operationId: usersidUserConnectionsidConnectionTransactionsclustersidTransactionsClusterDocumentsidDocumentDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Providers
      - Documents
    put:
      description: Edit meta-data of a specific document.
      operationId: usersidUserConnectionsidConnectionTransactionsclustersidTransactionsClusterDocumentsidDocumentPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  format: int32
                  type: integer
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Edit a document
      tags:
      - Providers
      - Documents
  /users/{id_user}/connections/{id_connection}/transactionsclusters/{id_transactionscluster}:
    delete:
      operationId: usersidUserConnectionsidConnectionTransactionsclustersidTransactionsclusterDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactionscluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCluster'
          description: Successful DELETE on TransactionsCluster resource
      security:
      - Authorization: []
      summary: Delete a clustered transaction
      tags:
      - Banks
    put:
      description: 'Form params : - next_date (date): Date of transaction - mean_amount
        (decimal): Mean Amount - wording (string): name of transaction - id_account
        (id): related account - id_category (id): related category - enabled (bool):
        is enabled<br><br>'
      operationId: usersidUserConnectionsidConnectionTransactionsclustersidTransactionsclusterPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transactionscluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCluster'
          description: Successful PUT on TransactionsCluster resource
      security:
      - Authorization: []
      summary: Edit a clustered transaction
      tags:
      - Banks
  /users/{id_user}/connections/{id_connection}/transfers:
    get:
      operationId: usersidUserConnectionsidConnectionTransfersGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransfers'
          description: transfers
      security:
      - Authorization: []
      summary: Get transfers
      tags:
      - Transfers
    post:
      operationId: usersidUserConnectionsidConnectionTransfersPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                amount:
                  description: amount of transfer
                  format: float
                  type: number
                exec_date:
                  description: excution date of transfer
                  format: date
                  type: string
                label:
                  description: reason of transfer
                  type: string
              required:
              - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Create a transfer object.
      tags:
      - Transfers
  /users/{id_user}/connections/{id_connection}/transfers/{id_transfer}:
    delete:
      description: It is possible to cancel only a transfer in state 'created'.<br><br>
      operationId: usersidUserConnectionsidConnectionTransfersidTransferDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful DELETE on Transfer resource
      security:
      - Authorization: []
      summary: Cancel a transfer.
      tags:
      - Transfers
    post:
      operationId: usersidUserConnectionsidConnectionTransfersidTransferPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_connection
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_recipient:
                  description: set the recipient of the transfer
                  format: int32
                  type: integer
                validated:
                  description: set it to initialize transfer on the bank website.
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Execute or edit a Transfer.
      tags:
      - Transfers
  /users/{id_user}/devices:
    get:
      operationId: usersidUserDevicesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDevices'
          description: devices
      security:
      - Authorization: []
      summary: Get devices
      tags:
      - PFM
    post:
      operationId: usersidUserDevicesPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                application:
                  description: the device in use
                  type: string
                notification_token:
                  description: the GCM or APNS notification_token to use
                  type: string
                notification_version:
                  description: version of notifications
                  format: int32
                  type: integer
              required:
              - application
              - notification_token
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Successful POST on Device resource
      security:
      - Authorization: []
      summary: Create a device linked to specified token.
      tags:
      - PFM
  /users/{id_user}/devices/{id_device}:
    delete:
      operationId: usersidUserDevicesidDeviceDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_device
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Successful DELETE on Device resource
      security:
      - Authorization: []
      summary: Delete device.
      tags:
      - PFM
    get:
      operationId: usersidUserDevicesidDeviceGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_device
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Successful GET on Device resource
      security:
      - Authorization: []
      summary: Get a device
      tags:
      - PFM
    put:
      operationId: usersidUserDevicesidDevicePut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_device
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                application:
                  description: the device in use
                  type: string
                notification_token:
                  description: the GCM or APNS notification_token to use
                  type: string
                notification_version:
                  description: version of notifications
                  format: int32
                  type: integer
              required:
              - application
              - notification_token
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Successful PUT on Device resource
      security:
      - Authorization: []
      summary: Update attributes of the device.
      tags:
      - PFM
  /users/{id_user}/documents:
    delete:
      operationId: usersidUserDocumentsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete documents
      tags:
      - Providers
      - Documents
    get:
      description: Get list of documents<br><br>
      operationId: usersidUserDocumentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: minimal (inclusive) amount
        in: query
        name: min_amount
        schema:
          format: float
          type: number
      - description: maximumd (inclusive) amount
        in: query
        name: max_amount
        schema:
          format: float
          type: number
      - description: minimal (inclusive) timestamp
        in: query
        name: min_timestamp
        schema:
          format: float
          type: number
      - description: maximum (inclusive) timestamp
        in: query
        name: max_timestamp
        schema:
          format: float
          type: number
      - description: filter with a document type
        in: query
        name: id_type
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDocuments'
          description: documents
      security:
      - Authorization: []
      summary: Get documents
      tags:
      - Providers
      - Documents
    post:
      description: Add a new document<br><br>
      operationId: usersidUserDocumentsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_ocr:
                  description: Related OCR process
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  type: boolean
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  type: boolean
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
              required:
              - date
              - duedate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful POST on Document resource
      security:
      - Authorization: []
      summary: Add a new document
      tags:
      - Providers
      - Documents
    put:
      operationId: usersidUserDocumentsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_document:
                  description: id of the document you want to attach the file to
                  format: int32
                  type: integer
              required:
              - id_document
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Attach an existing document to a transaction or a transactions_cluster
      tags:
      - Providers
      - Documents
  /users/{id_user}/documents/{id_document}:
    delete:
      operationId: usersidUserDocumentsidDocumentDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Providers
      - Documents
    put:
      description: Edit meta-data of a specific document.
      operationId: usersidUserDocumentsidDocumentPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  format: int32
                  type: integer
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Edit a document
      tags:
      - Providers
      - Documents
  /users/{id_user}/forecast:
    get:
      operationId: usersidUserForecastGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get forecast
      tags:
      - Banks
      - PFM
  /users/{id_user}/investments:
    get:
      operationId: usersidUserInvestmentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvestments'
          description: investments
      security:
      - Authorization: []
      summary: Get investments
      tags:
      - Wealth
  /users/{id_user}/investments/{id_investment}/history:
    get:
      operationId: usersidUserInvestmentsidInvestmentHistoryGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_investment
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccountHistory'
          description: investmentvalues
      security:
      - Authorization: []
      summary: Get investment values
      tags:
      - Wealth
  /users/{id_user}/investments/{id_investment}/pockets:
    get:
      operationId: usersidUserInvestmentsidInvestmentPocketsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_investment
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPockets'
          description: pockets
      security:
      - Authorization: []
      summary: Get pockets
      tags:
      - Wealth
  /users/{id_user}/investments/{id_investment}/security/history:
    get:
      description: Get logs about connections.<br><br>
      operationId: usersidUserInvestmentsidInvestmentSecurityHistoryGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_investment
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Get connection logs
      tags:
      - Wealth
  /users/{id_user}/logs:
    get:
      description: Get logs about connections.<br><br>
      operationId: usersidUserLogsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: state of user
        in: query
        name: state
        schema:
          type: integer
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      - description: ID of a user
        in: query
        name: id_user
        schema:
          type: integer
      - description: ID of a connection
        in: query
        name: id_connection
        schema:
          type: integer
      - description: ID of a connector
        in: query
        name: id_connector
        schema:
          type: integer
      - description: consider only logs for charged connectors
        in: query
        name: charged
        schema:
          type: boolean
      - description: ID of a source
        in: query
        name: id_source
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logs'
          description: connectionlogs
      security:
      - Authorization: []
      summary: Get connection logs
      tags:
      - Connections
      - Banks
      - Providers
  /users/{id_user}/ocr:
    post:
      description: Post an image and apply OCR on it to obtain found meta-data.<br><br>
      operationId: usersidUserOcrPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_transaction:
                  description: Transaction used to help OCR to find data
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
              required:
              - file
        required: true
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: Post an image with OCR
      tags:
      - OCR
      - Providers
      - Documents
  /users/{id_user}/operationsalert:
    get:
      description: <br><br>
      operationId: usersidUserOperationsalertGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOperationsalert'
          description: useralerts
      security:
      - Authorization: []
      summary: Get a list of configurated alerts
      tags:
      - PFM
    post:
      operationId: usersidUserOperationsalertPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date_range:
                  description: (number of days) range on which the analysis has to
                    be done
                  format: int32
                  type: integer
                expense_max:
                  description: capital loss thresholds
                  format: int32
                  type: integer
                income_max:
                  description: capital gain thresholds
                  format: int32
                  type: integer
                type:
                  description: 'parameter to choose the scope of the alert. accepted:
                    transactions, investements'
                  type: string
                value_type:
                  description: 'whether the threshold is given in absolut value or
                    percent. accepted: percent, flat'
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlert'
          description: Successful POST on UserAlert resource
      security:
      - Authorization: []
      summary: Create an alert on transactions or investemens of a given user
      tags:
      - PFM
  /users/{id_user}/operationsalert/{id_operationsalert}:
    delete:
      description: <br><br>
      operationId: usersidUserOperationsalertidOperationsalertDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_operationsalert
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlert'
          description: Successful DELETE on UserAlert resource
      security:
      - Authorization: []
      summary: Delete an alert on transactions or investemens
      tags:
      - PFM
    put:
      operationId: usersidUserOperationsalertidOperationsalertPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_operationsalert
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date_range:
                  description: (number of days) range on which the analysis has to
                    be done
                  format: int32
                  type: integer
                expense_max:
                  description: capital loss thresholds
                  format: int32
                  type: integer
                income_max:
                  description: capital gain thresholds
                  format: int32
                  type: integer
                type:
                  description: 'parameter to choose the scope of the alert. accepted:
                    transactions, investements'
                  type: string
                value_type:
                  description: 'whether the threshold is given in absolut value or
                    percent. accepted: percent, flat'
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlert'
          description: Successful PUT on UserAlert resource
      security:
      - Authorization: []
      summary: Edit an alert on transactions or investemens
      tags:
      - PFM
  /users/{id_user}/pockets:
    get:
      operationId: usersidUserPocketsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPockets'
          description: pockets
      security:
      - Authorization: []
      summary: Get pockets
      tags:
      - Wealth
  /users/{id_user}/profiles:
    get:
      operationId: usersidUserProfilesGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfiles'
          description: profiles
      security:
      - Authorization: []
      summary: Get profiles
      tags:
      - Users management
      - PFM
  /users/{id_user}/profiles/main:
    get:
      operationId: usersidUserProfilesMainGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: Successful GET on Profile resource
      security:
      - Authorization: []
      summary: Get the main profile
      tags:
      - Users management
      - PFM
  /users/{id_user}/profiles/me:
    get:
      operationId: usersidUserProfilesMeGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: Successful GET on Profile resource
      security:
      - Authorization: []
      summary: Get my profile
      tags:
      - Users management
      - PFM
    put:
      operationId: usersidUserProfilesMePut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                conf:
                  description: change config of a profile
                  type: string
                contact:
                  description: change contact information of a profile
                  type: string
                current_password:
                  description: needed when changing the password or the email
                  type: string
                email:
                  description: change email of profile
                  type: string
                lang:
                  description: change lang of the profile
                  type: string
                password:
                  description: change password of profile
                  type: string
                state:
                  description: state of the profile
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: Successful PUT on Profile resource
      security:
      - Authorization: []
      summary: Change settings of the profile.
      tags:
      - PFM
  /users/{id_user}/profiles/{id_profile}:
    get:
      operationId: usersidUserProfilesidProfileGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_profile
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: Successful GET on Profile resource
      security:
      - Authorization: []
      summary: Get a profile
      tags:
      - Users management
      - PFM
  /users/{id_user}/recipients:
    get:
      operationId: usersidUserRecipientsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRecipients'
          description: recipients
      security:
      - Authorization: []
      summary: Returns the list of recipients.
      tags:
      - Transfers
    post:
      description: if config key transfer.recipient.iban_white_list.enabled is set
        to 1, recipients whose IBAN are not from countries codes contained in transfer.recipient.iban_white_list.entries
        will be deleted<br><br>
      operationId: usersidUserRecipientsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - description: if true, do synchronization in background
        in: query
        name: background
        schema:
          type: boolean
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                iban:
                  description: iban of recipient
                  type: string
                label:
                  description: label of recipient
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
          description: Successful POST on Recipient resource
      security:
      - Authorization: []
      summary: Add a recipient.
      tags:
      - Recipients
  /users/{id_user}/recipients/{id_recipient}:
    post:
      operationId: usersidUserRecipientsidRecipientPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - description: if true, do synchronization in background
        in: query
        name: background
        schema:
          type: boolean
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
          description: Successful POST on Recipient resource
      security:
      - Authorization: []
      summary: Continue addition of a recipient.
      tags:
      - Transfers
  /users/{id_user}/recipients/{id_recipient}/transfers:
    get:
      operationId: usersidUserRecipientsidRecipientTransfersGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransfers'
          description: transfers
      security:
      - Authorization: []
      summary: Get transfers
      tags:
      - Transfers
    post:
      operationId: usersidUserRecipientsidRecipientTransfersPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                amount:
                  description: amount of transfer
                  format: float
                  type: number
                exec_date:
                  description: excution date of transfer
                  format: date
                  type: string
                label:
                  description: reason of transfer
                  type: string
              required:
              - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Create a transfer object.
      tags:
      - Transfers
  /users/{id_user}/recipients/{id_recipient}/transfers/{id_transfer}:
    delete:
      description: It is possible to cancel only a transfer in state 'created'.<br><br>
      operationId: usersidUserRecipientsidRecipientTransfersidTransferDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful DELETE on Transfer resource
      security:
      - Authorization: []
      summary: Cancel a transfer.
      tags:
      - Transfers
    post:
      operationId: usersidUserRecipientsidRecipientTransfersidTransferPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_recipient
        required: true
        schema:
          type: integer
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_recipient:
                  description: set the recipient of the transfer
                  format: int32
                  type: integer
                validated:
                  description: set it to initialize transfer on the bank website.
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Execute or edit a Transfer.
      tags:
      - Transfers
  /users/{id_user}/resume:
    get:
      description: <br><br>
      operationId: usersidUserResumeGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResume'
          description: ''
      security:
      - Authorization: []
      summary: Get synthesis configuration of a specific user
      tags:
      - PFM
    post:
      description: <br><br>
      operationId: usersidUserResumePost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                resume_enabled:
                  description: whether the synthesis is activated or not
                  type: boolean
                resume_frequency:
                  description: frequency of the synthesis given in days
                  format: int32
                  type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResume'
          description: ''
      security:
      - Authorization: []
      summary: Update synthesis configuration
      tags:
      - PFM
  /users/{id_user}/subscriptions:
    put:
      operationId: usersidUserSubscriptionsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Successful PUT on Subscription resource
      security:
      - Authorization: []
      summary: Update many subscriptions at once
      tags:
      - Providers
  /users/{id_user}/subscriptions/{id_subscription}:
    delete:
      description: It deletes a specific subscription.<br><br>
      operationId: usersidUserSubscriptionsidSubscriptionDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Successful DELETE on Subscription resource
      security:
      - Authorization: []
      summary: Delete a subscription.
      tags:
      - Providers
    put:
      description: It updates a specific subscription<br><br>
      operationId: usersidUserSubscriptionsidSubscriptionPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                disabled:
                  description: If the subscription is disabled (not synchronized)
                  type: boolean
                name:
                  description: Label of the subscription
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Successful PUT on Subscription resource
      security:
      - Authorization: []
      summary: Update a subscription
      tags:
      - Providers
  /users/{id_user}/subscriptions/{id_subscription}/documents:
    delete:
      operationId: usersidUserSubscriptionsidSubscriptionDocumentsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete documents
      tags:
      - Providers
      - Documents
    get:
      description: Get list of documents<br><br>
      operationId: usersidUserSubscriptionsidSubscriptionDocumentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: minimal (inclusive) amount
        in: query
        name: min_amount
        schema:
          format: float
          type: number
      - description: maximumd (inclusive) amount
        in: query
        name: max_amount
        schema:
          format: float
          type: number
      - description: minimal (inclusive) timestamp
        in: query
        name: min_timestamp
        schema:
          format: float
          type: number
      - description: maximum (inclusive) timestamp
        in: query
        name: max_timestamp
        schema:
          format: float
          type: number
      - description: filter with a document type
        in: query
        name: id_type
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDocuments'
          description: documents
      security:
      - Authorization: []
      summary: Get documents
      tags:
      - Providers
      - Documents
    post:
      description: Add a new document<br><br>
      operationId: usersidUserSubscriptionsidSubscriptionDocumentsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_ocr:
                  description: Related OCR process
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  type: boolean
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  type: boolean
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
              required:
              - date
              - duedate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful POST on Document resource
      security:
      - Authorization: []
      summary: Add a new document
      tags:
      - Providers
      - Documents
    put:
      operationId: usersidUserSubscriptionsidSubscriptionDocumentsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_document:
                  description: id of the document you want to attach the file to
                  format: int32
                  type: integer
              required:
              - id_document
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Attach an existing document to a transaction or a transactions_cluster
      tags:
      - Providers
      - Documents
  /users/{id_user}/subscriptions/{id_subscription}/documents/{id_document}:
    delete:
      operationId: usersidUserSubscriptionsidSubscriptionDocumentsidDocumentDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Providers
      - Documents
    put:
      description: Edit meta-data of a specific document.
      operationId: usersidUserSubscriptionsidSubscriptionDocumentsidDocumentPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  format: int32
                  type: integer
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Edit a document
      tags:
      - Providers
      - Documents
  /users/{id_user}/subscriptions/{id_subscription}/logs:
    get:
      description: Get logs of subscription.<br><br>By default, it selects logs for
        the last month. You can use "min_date" and "max_date" to change boundary dates.<br><br>
      operationId: usersidUserSubscriptionsidSubscriptionLogsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_subscription
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscriptionLogs'
          description: subscriptionlogs
      security:
      - Authorization: []
      summary: Get subscriptions logs.
      tags:
      - Providers
  /users/{id_user}/terms:
    get:
      operationId: usersidUserTermsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terms'
          description: termsofservices
      security:
      - Authorization: []
      summary: Get active terms object for a specific user, only one terms can be
        active
      tags:
      - Terms
    post:
      operationId: usersidUserTermsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_terms:
                  description: terms id
                  format: int32
                  type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsOfService'
          description: Successful POST on TermsOfService resource
      security:
      - Authorization: []
      summary: Register user's consent for a specific terms id
      tags:
      - Terms
  /users/{id_user}/token:
    post:
      description: Create an access_token for this user and get it.<br><br>
      operationId: usersidUserTokenPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                application:
                  description: application name
                  type: string
              required:
              - application
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserToken'
          description: ''
      security:
      - Authorization: []
      summary: Create a token
      tags:
      - Users management
      - Authentication
  /users/{id_user}/transactions:
    delete:
      operationId: usersidUserTransactionsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Successful DELETE on Transaction resource
      security:
      - Authorization: []
      summary: Delete transactions
      tags:
      - Banks
    get:
      description: Get list of transactions.<br><br>By default, it selects transactions
        for the last month. You can use "min_date" and "max_date" to change boundary
        dates.<br><br>
      operationId: usersidUserTransactionsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: filter on income or expenditures
        in: query
        name: income
        schema:
          type: boolean
      - description: display only deleted transactions
        in: query
        name: deleted
        schema:
          type: boolean
      - description: display all transactions, including deleted ones
        in: query
        name: all
        schema:
          type: boolean
      - description: get only transactions updated after the specified datetime
        in: query
        name: last_update
        schema:
          format: date-time
          type: string
      - description: filter transactions containing the given string
        in: query
        name: wording
        schema:
          type: string
      - description: minimal (inclusive) value
        in: query
        name: min_value
        schema:
          format: float
          type: number
      - description: maximum (inclusive) value
        in: query
        name: max_value
        schema:
          format: float
          type: number
      - description: search in labels, dates, values and categories
        in: query
        name: search
        schema:
          type: string
      - description: "\"XX|-XX\" or \"\xB1XX\""
        in: query
        name: value
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransactions'
          description: transactions
      security:
      - Authorization: []
      summary: Get transactions
      tags:
      - Banks
    post:
      description: Create transactions for the supplied account or the account whose
        id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>
      operationId: usersidUserTransactionsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active:
                  description: '1 if the transaction should be taken into account
                    by pfm services (default: 1)'
                  type: boolean
                coming:
                  description: '1 if the transaction has already been debited (default:
                    0)'
                  type: boolean
                date:
                  description: date of the transaction
                  format: date
                  type: string
                date_scraped:
                  description: 'date on which the transaction has been found for the
                    first time. YYYY-MM-DD HH:MM:SS(default: now)'
                  format: date-time
                  type: string
                id_account:
                  description: account of the transaction. If not supplied, it has
                    to be given in the route
                  format: int32
                  type: integer
                original_wording:
                  description: label of the transaction
                  type: string
                rdate:
                  description: 'realisation date of the transaction (default: value
                    of date)'
                  format: date
                  type: string
                state:
                  description: 'nature of the transaction (default: new)'
                  type: string
                type:
                  description: 'type of the transaction (default: unknown)'
                  type: string
                value:
                  description: vallue of the transaction
                  format: int32
                  type: integer
              required:
              - date
              - original_wording
              - value
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Successful POST on Transaction resource
      security:
      - Authorization: []
      summary: Create transactions
      tags:
      - Banks
  /users/{id_user}/transactions/{id_transaction}:
    put:
      operationId: usersidUserTransactionsidTransactionPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                active:
                  description: if false, transaction isn't considered in analyzisis
                    endpoints (like /balances)
                  type: boolean
                application_date:
                  description: change application date of the transaction
                  format: date
                  type: string
                comment:
                  description: change comment
                  type: string
                id_category:
                  description: ID of the associated category
                  format: int32
                  type: integer
                wording:
                  description: user rewording of the transaction
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Successful PUT on Transaction resource
      security:
      - Authorization: []
      summary: Edit a transaction meta-data
      tags:
      - Banks
  /users/{id_user}/transactions/{id_transaction}/documents:
    delete:
      operationId: usersidUserTransactionsidTransactionDocumentsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete documents
      tags:
      - Providers
      - Documents
    get:
      description: Get list of documents<br><br>
      operationId: usersidUserTransactionsidTransactionDocumentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: minimal (inclusive) amount
        in: query
        name: min_amount
        schema:
          format: float
          type: number
      - description: maximumd (inclusive) amount
        in: query
        name: max_amount
        schema:
          format: float
          type: number
      - description: minimal (inclusive) timestamp
        in: query
        name: min_timestamp
        schema:
          format: float
          type: number
      - description: maximum (inclusive) timestamp
        in: query
        name: max_timestamp
        schema:
          format: float
          type: number
      - description: filter with a document type
        in: query
        name: id_type
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDocuments'
          description: documents
      security:
      - Authorization: []
      summary: Get documents
      tags:
      - Providers
      - Documents
    post:
      description: Add a new document<br><br>
      operationId: usersidUserTransactionsidTransactionDocumentsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_ocr:
                  description: Related OCR process
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  type: boolean
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  type: boolean
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
              required:
              - date
              - duedate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful POST on Document resource
      security:
      - Authorization: []
      summary: Add a new document
      tags:
      - Providers
      - Documents
    put:
      operationId: usersidUserTransactionsidTransactionDocumentsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_document:
                  description: id of the document you want to attach the file to
                  format: int32
                  type: integer
              required:
              - id_document
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Attach an existing document to a transaction or a transactions_cluster
      tags:
      - Providers
      - Documents
  /users/{id_user}/transactions/{id_transaction}/documents/{id_document}:
    delete:
      operationId: usersidUserTransactionsidTransactionDocumentsidDocumentDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Providers
      - Documents
    put:
      description: Edit meta-data of a specific document.
      operationId: usersidUserTransactionsidTransactionDocumentsidDocumentPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  format: int32
                  type: integer
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Edit a document
      tags:
      - Providers
      - Documents
  /users/{id_user}/transactions/{id_transaction}/informations:
    delete:
      operationId: usersidUserTransactionsidTransactionInformationsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful DELETE on TransactionInformation resource
      security:
      - Authorization: []
      summary: Delete all arbitrary key-value pairs of a transaction
      tags:
      - Banks
    get:
      operationId: usersidUserTransactionsidTransactionInformationsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransactionInformations'
          description: transactioninformations
      security:
      - Authorization: []
      summary: List all arbitrary key-value pairs on a transaction
      tags:
      - Banks
    put:
      operationId: usersidUserTransactionsidTransactionInformationsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful PUT on TransactionInformation resource
      security:
      - Authorization: []
      summary: Add or edit transaction arbitrary key-value pairs
      tags:
      - Banks
  /users/{id_user}/transactions/{id_transaction}/informations/{id_information}:
    delete:
      operationId: usersidUserTransactionsidTransactionInformationsidInformationDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_information
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful DELETE on TransactionInformation resource
      security:
      - Authorization: []
      summary: Delete a particular key-value pair on a transaction.
      tags:
      - Banks
    get:
      operationId: usersidUserTransactionsidTransactionInformationsidInformationGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transaction
        required: true
        schema:
          type: integer
      - in: path
        name: id_information
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInformation'
          description: Successful GET on TransactionInformation resource
      security:
      - Authorization: []
      summary: Get a particular arbitrary key-value pair on a transaction
      tags:
      - Banks
  /users/{id_user}/transactionsclusters:
    get:
      operationId: usersidUserTransactionsclustersGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransactionsclusters'
          description: transactionsclusters
      security:
      - Authorization: []
      summary: Get clustered transactions
      tags:
      - Banks
    post:
      description: 'Form params : - next_date (date) required: Date of transaction
        - mean_amount (decimal) required: Mean Amount - wording (string) required:
        name of transaction - id_account (id) required: related account<br><br>'
      operationId: usersidUserTransactionsclustersPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_account:
                  type: integer
                mean_amount:
                  format: float
                  type: number
                next_date:
                  format: date
                  type: string
                wording:
                  type: string
              required:
              - next_date
              - mean_amount
              - wording
              - id_account
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCluster'
          description: Successful POST on TransactionsCluster resource
      security:
      - Authorization: []
      summary: Create clustered transaction
      tags:
      - Banks
  /users/{id_user}/transactionsclusters/{id_transactions_cluster}/documents:
    delete:
      operationId: usersidUserTransactionsclustersidTransactionsClusterDocumentsDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete documents
      tags:
      - Providers
      - Documents
    get:
      description: Get list of documents<br><br>
      operationId: usersidUserTransactionsclustersidTransactionsClusterDocumentsGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - description: minimal (inclusive) amount
        in: query
        name: min_amount
        schema:
          format: float
          type: number
      - description: maximumd (inclusive) amount
        in: query
        name: max_amount
        schema:
          format: float
          type: number
      - description: minimal (inclusive) timestamp
        in: query
        name: min_timestamp
        schema:
          format: float
          type: number
      - description: maximum (inclusive) timestamp
        in: query
        name: max_timestamp
        schema:
          format: float
          type: number
      - description: filter with a document type
        in: query
        name: id_type
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDocuments'
          description: documents
      security:
      - Authorization: []
      summary: Get documents
      tags:
      - Providers
      - Documents
    post:
      description: Add a new document<br><br>
      operationId: usersidUserTransactionsclustersidTransactionsClusterDocumentsPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_ocr:
                  description: Related OCR process
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  type: boolean
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  type: boolean
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
              required:
              - date
              - duedate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful POST on Document resource
      security:
      - Authorization: []
      summary: Add a new document
      tags:
      - Providers
      - Documents
    put:
      operationId: usersidUserTransactionsclustersidTransactionsClusterDocumentsPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_document:
                  description: id of the document you want to attach the file to
                  format: int32
                  type: integer
              required:
              - id_document
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Attach an existing document to a transaction or a transactions_cluster
      tags:
      - Providers
      - Documents
  /users/{id_user}/transactionsclusters/{id_transactions_cluster}/documents/{id_document}:
    delete:
      operationId: usersidUserTransactionsclustersidTransactionsClusterDocumentsidDocumentDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful DELETE on Document resource
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Providers
      - Documents
    put:
      description: Edit meta-data of a specific document.
      operationId: usersidUserTransactionsclustersidTransactionsClusterDocumentsidDocumentPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transactions_cluster
        required: true
        schema:
          type: integer
      - in: path
        name: id_document
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                date:
                  description: Date of document
                  format: date
                  type: string
                duedate:
                  description: Due date of document
                  format: date
                  type: string
                file:
                  description: File of the document
                  format: binary
                  type: string
                id_category:
                  description: Related category
                  format: int32
                  type: integer
                id_type:
                  description: Type of this document
                  format: int32
                  type: integer
                income:
                  description: Is an income or an outcome
                  format: int32
                  type: integer
                name:
                  description: Name of the document
                  type: string
                readonly:
                  description: Is this file readonly
                  format: int32
                  type: integer
                total_amount:
                  description: Taxed amount
                  format: float
                  type: number
                untaxed_amount:
                  description: Untaxed amount
                  format: float
                  type: number
                vat:
                  description: VAT amount
                  format: float
                  type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful PUT on Document resource
      security:
      - Authorization: []
      summary: Edit a document
      tags:
      - Providers
      - Documents
  /users/{id_user}/transactionsclusters/{id_transactionscluster}:
    delete:
      operationId: usersidUserTransactionsclustersidTransactionsclusterDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transactionscluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCluster'
          description: Successful DELETE on TransactionsCluster resource
      security:
      - Authorization: []
      summary: Delete a clustered transaction
      tags:
      - Banks
    put:
      description: 'Form params : - next_date (date): Date of transaction - mean_amount
        (decimal): Mean Amount - wording (string): name of transaction - id_account
        (id): related account - id_category (id): related category - enabled (bool):
        is enabled<br><br>'
      operationId: usersidUserTransactionsclustersidTransactionsclusterPut
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transactionscluster
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsCluster'
          description: Successful PUT on TransactionsCluster resource
      security:
      - Authorization: []
      summary: Edit a clustered transaction
      tags:
      - Banks
  /users/{id_user}/transfers:
    get:
      operationId: usersidUserTransfersGet
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - description: period to group logs
        in: query
        name: period
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransfers'
          description: transfers
      security:
      - Authorization: []
      summary: Get transfers
      tags:
      - Transfers
    post:
      operationId: usersidUserTransfersPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                amount:
                  description: amount of transfer
                  format: float
                  type: number
                exec_date:
                  description: excution date of transfer
                  format: date
                  type: string
                label:
                  description: reason of transfer
                  type: string
              required:
              - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Create a transfer object.
      tags:
      - Transfers
  /users/{id_user}/transfers/{id_transfer}:
    delete:
      description: It is possible to cancel only a transfer in state 'created'.<br><br>
      operationId: usersidUserTransfersidTransferDelete
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful DELETE on Transfer resource
      security:
      - Authorization: []
      summary: Cancel a transfer.
      tags:
      - Transfers
    post:
      operationId: usersidUserTransfersidTransferPost
      parameters:
      - description: 'Hint: you can use ''me'' or ''all'''
        in: path
        name: id_user
        required: true
        schema:
          type: string
      - in: path
        name: id_transfer
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                id_recipient:
                  description: set the recipient of the transfer
                  format: int32
                  type: integer
                validated:
                  description: set it to initialize transfer on the bank website.
                  type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Successful POST on Transfer resource
      security:
      - Authorization: []
      summary: Execute or edit a Transfer.
      tags:
      - Transfers
  /webauth:
    get:
      description: 'The route encapsulate 2 functionalities: 1. Create or update a
        connection through oAuth2 session.<br><br>2. Execute a transfer through OAuth2
        session.'
      operationId: webauthGet
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                client_id:
                  description: Client Application ID
                  format: int32
                  type: integer
                id_transfer:
                  description: ID of the transfer
                  format: int32
                  type: integer
                redirect_uri:
                  description: Redirect URI
                  type: string
                state:
                  description: Optional state
                  type: string
      responses:
        '200':
          content: {}
          description: standard HTTP response
      security:
      - Authorization: []
      summary: First step to establish an oAuth2 connection.
      tags:
      - Authentication
      - Transfer
  /webhooks:
    delete:
      description: Updates the deleted field with the date of the deletion<br><br>
      operationId: webhooksDelete
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful DELETE on Webhook resource
      security:
      - Authorization: []
      summary: Deletes all webhooks
      tags:
      - Administration
    get:
      operationId: webhooksGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks'
          description: webhooks
      security:
      - Authorization: []
      summary: Get webhooks
      tags:
      - Administration
    post:
      operationId: webhooksPost
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                event:
                  description: The webhook event
                  type: string
                id_auth:
                  description: The webhook authentication process to use (its ID or
                    its name)
                  type: string
                id_service:
                  description: The service ID to associate with the webhook
                  format: int32
                  type: integer
                id_user:
                  description: The user ID to associate with the webhook
                  format: int32
                  type: integer
                params:
                  description: 'The webhook parameters as an object with three keys:
                    type, key and value'
                  type: string
                url:
                  description: The webhook callback url
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful POST on Webhook resource
      security:
      - Authorization: []
      summary: Adds a new webhook
      tags:
      - Administration
  /webhooks/auth:
    delete:
      operationId: webhooksAuthDelete
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProvider'
          description: Successful DELETE on AuthProvider resource
      security:
      - Authorization: []
      summary: Deletes all webhook authentication types
      tags:
      - Administration
    get:
      operationId: webhooksAuthGet
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksAuth'
          description: authproviders
      security:
      - Authorization: []
      summary: Get webhooks authentication types
      tags:
      - Administration
    post:
      operationId: webhooksAuthPost
      parameters:
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                config:
                  description: The authentication process configuration. A dict contains
                    either the certificate
                  type: string
                name:
                  description: The name of the authentication process to differentiate
                  type: string
                type:
                  description: The type of the authentication process (oauth, certificate,
                    token, etc...)
                  format: int32
                  type: integer
              required:
              - name
              - type
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProvider'
          description: Successful POST on AuthProvider resource
      security:
      - Authorization: []
      summary: Adds a new webhook authentication type
      tags:
      - Administration
  /webhooks/auth/{id_auth}:
    delete:
      description: Updates the deleted field with the date of the deletion<br><br>
      operationId: webhooksAuthidAuthDelete
      parameters:
      - in: path
        name: id_auth
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProvider'
          description: Successful DELETE on AuthProvider resource
      security:
      - Authorization: []
      summary: Deletes the webhook authentication type
      tags:
      - Administration
    post:
      operationId: webhooksAuthidAuthPost
      parameters:
      - in: path
        name: id_auth
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                config:
                  description: The authentication process configuration. A dict containing
                    either the certificate
                  type: string
                name:
                  description: The name of the authentication process to differentiate
                  type: string
                type:
                  description: The type of the authentication process (oauth, certificate,
                    token, etc...)
                  format: int32
                  type: integer
              required:
              - name
              - type
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProvider'
          description: Successful POST on AuthProvider resource
      security:
      - Authorization: []
      summary: Updates the webhook authentication type
      tags:
      - Administration
    put:
      operationId: webhooksAuthidAuthPut
      parameters:
      - in: path
        name: id_auth
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                config:
                  description: The authentication process configuration. A dict containt
                    either the certificate
                  type: string
                name:
                  description: The name of the authentication process to differentiate
                  type: string
                type:
                  description: The type of the authentication process (oauth, certificate,
                    token, etc...)
                  format: int32
                  type: integer
              required:
              - name
              - type
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProvider'
          description: Successful PUT on AuthProvider resource
      security:
      - Authorization: []
      summary: Updates the webhook authentication type
      tags:
      - Administration
  /webhooks/{id_webhook}:
    delete:
      description: Updates the deleted field with the date of the deletion<br><br>
      operationId: webhooksidWebhookDelete
      parameters:
      - in: path
        name: id_webhook
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful DELETE on Webhook resource
      security:
      - Authorization: []
      summary: Deletes a webhook
      tags:
      - Administration
    post:
      operationId: webhooksidWebhookPost
      parameters:
      - in: path
        name: id_webhook
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                deleted:
                  description: a date to delete the webhook or 'null' to enable it
                  type: string
                event:
                  description: The webhook event
                  type: string
                id_auth:
                  description: The webhook authentication process to use
                  format: int32
                  type: integer
                id_service:
                  description: The service ID to associate with the webhook
                  format: int32
                  type: integer
                id_user:
                  description: The user ID to associate with the webhook
                  format: int32
                  type: integer
                url:
                  description: The webhook callback url
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful POST on Webhook resource
      security:
      - Authorization: []
      summary: Updates a webhook
      tags:
      - Administration
    put:
      operationId: webhooksidWebhookPut
      parameters:
      - in: path
        name: id_webhook
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                deleted:
                  description: a date to delete the webhook or 'null' to enable it
                  type: string
                event:
                  description: The webhook event
                  type: string
                id_auth:
                  description: The webhook authentication process to use
                  format: int32
                  type: integer
                id_service:
                  description: The service ID to associate with the webhook
                  format: int32
                  type: integer
                id_user:
                  description: The user ID to associate with the webhook
                  format: int32
                  type: integer
                url:
                  description: The webhook callback url
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful PUT on Webhook resource
      security:
      - Authorization: []
      summary: Updates a webhook
      tags:
      - Administration
  /webhooks/{id_webhook}/add_to_data:
    delete:
      operationId: webhooksidWebhookAddToDataDelete
      parameters:
      - in: path
        name: id_webhook
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful DELETE on Webhook resource
      security:
      - Authorization: []
      summary: delete all entries
      tags:
      - Administration
    get:
      operationId: webhooksidWebhookAddToDataGet
      parameters:
      - in: path
        name: id_webhook
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks'
          description: webhooks
      security:
      - Authorization: []
      summary: retrieve the list of the value to add in webhooks when sending the
        requested webhook
      tags:
      - Administration
    post:
      description: For each parameter, a value will be added in the webhook data.
        Use the key to set the name of the field. The values that can be added are
        to be found in the user configuration.<br><br>
      operationId: webhooksidWebhookAddToDataPost
      parameters:
      - in: path
        name: id_webhook
        required: true
        schema:
          type: integer
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful POST on Webhook resource
      security:
      - Authorization: []
      summary: Setup a field to store in user config when calling the endpoint
      tags:
      - Administration
  /webhooks/{id_webhook}/add_to_data/{key}:
    delete:
      operationId: webhooksidWebhookAddToDatakeyDelete
      parameters:
      - in: path
        name: id_webhook
        required: true
        schema:
          type: integer
      - in: path
        name: key
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful DELETE on Webhook resource
      security:
      - Authorization: []
      summary: delete the requested entry
      tags:
      - Administration
    get:
      operationId: webhooksidWebhookAddToDatakeyGet
      parameters:
      - in: path
        name: id_webhook
        required: true
        schema:
          type: integer
      - in: path
        name: key
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful GET on Webhook resource
      security:
      - Authorization: []
      summary: retrieve the value to add in the requested webhook for the requested
        name
      tags:
      - Administration
    post:
      description: For each parameter, a value will be added in the webhook data.
        Use the key to set the name of the field. The values that can be added are
        to be found in the user configuration.<br><br>
      operationId: webhooksidWebhookAddToDatakeyPost
      parameters:
      - in: path
        name: id_webhook
        required: true
        schema:
          type: integer
      - in: path
        name: key
        required: true
        schema:
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful POST on Webhook resource
      security:
      - Authorization: []
      summary: upate the requested field to store in user config when calling the
        endpoint
      tags:
      - Administration
  /webhooks/{id_webhook}/logs:
    get:
      description: Get logs of the webhooks.<br><br>By default, it selects logs for
        the last month. You can use "min_date" and "max_date" to change boundary dates.<br><br>
      operationId: webhooksidWebhookLogsGet
      parameters:
      - in: path
        name: id_webhook
        required: true
        schema:
          type: integer
      - description: limit number of results to this user
        in: query
        name: id_user
        schema:
          type: integer
      - description: limit number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: offset of first result
        in: query
        name: offset
        schema:
          type: integer
      - description: minimal (inclusive) date
        in: query
        name: min_date
        schema:
          format: date
          type: string
      - description: maximum (inclusive) date
        in: query
        name: max_date
        schema:
          format: date
          type: string
      - in: query
        name: expand
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebHookLogs'
          description: webhooklogs
      security:
      - Authorization: []
      summary: Get webhooks logs.
      tags:
      - Administration
servers:
- url: //demo.biapi.pro/2.0/
tags:
- name: Administration
- name: Authentication
- name: Banks
- name: Connections
- name: Documents
- name: OCR
- name: OIDC
- name: PFM
- name: Providers
- name: Recipients
- name: Service
- name: Terms
- name: Transfer
- name: Transfers
- name: Users management
- name: Wealth
